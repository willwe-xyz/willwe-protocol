{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "Execution",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "Membrane",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "Will",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allMembersOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "asRootValuation",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "owners",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "balances",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "topVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "calculateUserTargetedPreferenceAmount",
            "inputs": [
                {
                    "name": "childId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "control",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "createEndpointForOwner",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "endpointAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "executionAddress",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAllNodesForRoot",
            "inputs": [
                {
                    "name": "rootAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "userIfAny",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChangePrevalence",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChildrenOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFidPath",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "fids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMembraneOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodeData",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodeData",
                    "type": "tuple",
                    "internalType": "struct NodeState",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodes",
            "inputs": [
                {
                    "name": "nodeIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getParentOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUserNodeSignals",
            "inputs": [
                {
                    "name": "user_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "node_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inParentDenomination",
            "inputs": [
                {
                    "name": "amt_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "inParentVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inflationOf",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initSelfControl",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isMember",
            "inputs": [
                {
                    "name": "whoabout_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "whereabout_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "localizeEndpoint",
            "inputs": [
                {
                    "name": "endpoint_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "endpointParent_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipEnforce",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "s",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipID",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintInflation",
            "inputs": [
                {
                    "name": "node",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintMembership",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "options",
            "inputs": [
                {
                    "name": "NodeXUserXValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "valueAtTime",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redistribute",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "redistributePath",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "resignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "originator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sendSignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setControl",
            "inputs": [
                {
                    "name": "newController",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNode",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNodeWithMembrane",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokens_",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "balances_",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "meta_",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "inflationRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnRootNode",
            "inputs": [
                {
                    "name": "fungible20_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "fID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "taxPolicyPreference",
            "inputs": [
                {
                    "name": "rootToken_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "taxRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "toAddress",
            "inputs": [
                {
                    "name": "x",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "toID",
            "inputs": [
                {
                    "name": "x",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Burned",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ConfigSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "expressedOption",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CreatedEndpoint",
            "inputs": [
                {
                    "name": "endpoint",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationRateChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "oldInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "inflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MemberRemoved",
            "inputs": [
                {
                    "name": "userAddress",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembershipMinted",
            "inputs": [
                {
                    "name": "who",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "previousMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "membraneId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Minted",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewNode",
            "inputs": [
                {
                    "name": "newId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "creator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewRootNode",
            "inputs": [
                {
                    "name": "rootNodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Resignaled",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SelfControlAtAddress",
            "inputs": [
                {
                    "name": "AgencyLocus",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SharesGenerated",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "UserNodeSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AccountBalanceOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AlreadyMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ArrayLengthsMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BadLen",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BaseOrNonFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BurnE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CannotSkip",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Disabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EOA",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Endpoint",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExecutionOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "IncompleteSign",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientAmt",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientBalance",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembershipOp",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembraneNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MintE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "No",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoControl",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoSoup",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoTimeDelta",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeAlreadyExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Noise",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoiseNotVoice",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotNodeMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotOwnerNorApproved",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Overreach",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ResignalMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "RootExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SignalOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TargetIsRoot",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToNonERC1155ReceiverImplementer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToZeroAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unautorised",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unqualified",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnregisteredFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsoundMembership",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsupportedTransfer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "isControled",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "3505:762:69:-:0;;;3534:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2273:19:67;;;:7;:19;;;;2295:5;2273:19;:27;2310:16;:32;;-1:-1:-1;;;;;;2310:32:67;-1:-1:-1;;;;;2310:32:67;;;;;;;;2273:19;2359:37;;-1:-1:-1;;;2359:37:67;;;;2310:32;;3598:8:69;;2310:32:67;;3598:8:69;;2310:32:67;;2359:35;;:37;;;;;;;;;;2310:32;2359:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2352:4;:44;;-1:-1:-1;;;;;;2352:44:67;;;-1:-1:-1;;;;;2352:44:67;;;;;;;2406:1;:24;;;;;;;;;;;;;;2441:19;;;;;;;;;;;;-1:-1:-1;;;2441:19:67;;;;:4;;:19;;:4;:19;:::i;:::-;-1:-1:-1;2470:15:67;;;;;;;;;;;;-1:-1:-1;;;2470:15:67;;;;:6;;:15;;:6;:15;:::i;:::-;-1:-1:-1;;2496:9:67;:16;;2508:4;-1:-1:-1;;2496:16:67;;;;;;;;404:26:66;;-1:-1:-1;;;;;;404:26:66::1;-1:-1:-1::0;;;;;404:26:66;::::1;::::0;;::::1;::::0;;;440:44:::1;::::0;-1:-1:-1;;;440:44:66;;478:4:::1;440:44;::::0;::::1;3540:51:90::0;404:26:66;;-1:-1:-1;440:29:66::1;::::0;3513:18:90;;440:44:66::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;316:175:::0;;3534:76:69;;3505:762;;14:177:90;93:13;;-1:-1:-1;;;;;135:31:90;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:208::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;656:40;686:9;656:40;:::i;:::-;646:50;494:208;-1:-1:-1;;;494:208:90:o;707:127::-;768:10;763:3;759:20;756:1;749:31;799:4;796:1;789:15;823:4;820:1;813:15;839:380;918:1;914:12;;;;961;;;982:61;;1036:4;1028:6;1024:17;1014:27;;982:61;1089:2;1081:6;1078:14;1058:18;1055:38;1052:161;;1135:10;1130:3;1126:20;1123:1;1116:31;1170:4;1167:1;1160:15;1198:4;1195:1;1188:15;1052:161;;839:380;;;:::o;1350:518::-;1452:2;1447:3;1444:11;1441:421;;;1488:5;1485:1;1478:16;1532:4;1529:1;1519:18;1602:2;1590:10;1586:19;1583:1;1579:27;1573:4;1569:38;1638:4;1626:10;1623:20;1620:47;;;-1:-1:-1;1661:4:90;1620:47;1716:2;1711:3;1707:12;1704:1;1700:20;1694:4;1690:31;1680:41;;1771:81;1789:2;1782:5;1779:13;1771:81;;;1848:1;1834:16;;1815:1;1804:13;1771:81;;;1775:3;;1441:421;1350:518;;;:::o;2044:1345::-;2164:10;;-1:-1:-1;;;;;2186:30:90;;2183:56;;;2219:18;;:::i;:::-;2248:97;2338:6;2298:38;2330:4;2324:11;2298:38;:::i;:::-;2292:4;2248:97;:::i;:::-;2400:4;;2457:2;2446:14;;2474:1;2469:663;;;;3176:1;3193:6;3190:89;;;-1:-1:-1;3245:19:90;;;3239:26;3190:89;-1:-1:-1;;2001:1:90;1997:11;;;1993:24;1989:29;1979:40;2025:1;2021:11;;;1976:57;3292:81;;2439:944;;2469:663;1297:1;1290:14;;;1334:4;1321:18;;-1:-1:-1;;2505:20:90;;;2623:236;2637:7;2634:1;2631:14;2623:236;;;2726:19;;;2720:26;2705:42;;2818:27;;;;2786:1;2774:14;;;;2653:19;;2623:236;;;2627:3;2887:6;2878:7;2875:19;2872:201;;;2948:19;;;2942:26;-1:-1:-1;;3031:1:90;3027:14;;;3043:3;3023:24;3019:37;3015:42;3000:58;2985:74;;2872:201;;;3119:1;3110:6;3107:1;3103:14;3099:22;3093:4;3086:36;2439:944;;;;;2044:1345;;:::o;3394:203::-;3505:762:69;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "3505:762:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:334:49;;;;;;:::i;:::-;6250:25;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;;;;616:25:90;;;604:2;589:18;6070:334:49;;;;;;;;19823:385;;;;;;:::i;:::-;20141:10;20001:3;19997:21;;;;20135:17;;;20160:10;20154:17;;20132:40;20180:10;20174:17;;;20129:63;;19823:385;;;;1108:14:90;;1101:22;1083:41;;1071:2;1056:18;19823:385:49;943:187:90;2138:18:67;;;:::i;:::-;;;;;;;:::i;3749:105:69:-;;;;;;:::i;:::-;;:::i;:::-;;20924:175:67;;;;;;:::i;:::-;;:::i;18995:98::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19067:19:67;;18995:98;12067:676:66;;;;;;:::i;:::-;;:::i;7193:648:67:-;;;;;;:::i;:::-;;:::i;19926:103::-;;;;;;:::i;:::-;19982:7;20008:14;;;:8;:14;;;;;;;19926:103;24358:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12749:209:66:-;;;;;;:::i;:::-;;:::i;3860:111:69:-;;;;;;:::i;:::-;;:::i;15044:228:67:-;;;;;;:::i;:::-;;:::i;13733:232::-;;;;;;:::i;:::-;;:::i;1320:386:66:-;;;;;;:::i;:::-;;:::i;1724:73:67:-;;;;;;:::i;:::-;;:::i;12437:470::-;;;;;;:::i;:::-;;:::i;12757:5689:49:-;;;;;;:::i;:::-;;:::i;11692:347:66:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10524:32:90;;;10506:51;;10494:2;10479:18;11692:347:66;10360:203:90;18593:1021:49;;;;;;:::i;:::-;;:::i;788:19:67:-;;;;;-1:-1:-1;;;;;788:19:67;;;4507:295;;;;;;:::i;:::-;;:::i;1712:1707:66:-;;;;;;:::i;:::-;;:::i;11177:446:67:-;;;;;;:::i;:::-;;:::i;4128:137:69:-;;;;;;:::i;:::-;;:::i;4959:327:67:-;;;:::i;20188:111::-;;;;;;:::i;:::-;;:::i;751:31::-;;;;;-1:-1:-1;;;;;751:31:67;;;9137:278;;;;;;:::i;:::-;;:::i;2072:25::-;;;;;;:::i;:::-;;:::i;19565:115::-;;;;;;:::i;:::-;;:::i;14287:433::-;;;;;;:::i;:::-;;:::i;19388:171::-;;;;;;:::i;:::-;;:::i;2162:20::-;;;:::i;19804:116::-;;;;;;:::i;:::-;;:::i;10819:390:66:-;;;;;;:::i;:::-;;:::i;9721:907::-;;;;;;:::i;:::-;;:::i;21105:112:67:-;;;;;;:::i;:::-;;:::i;23677:262::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24543:524::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5588:320::-;;;;;;:::i;:::-;;:::i;3977:145:69:-;;;;;;:::i;:::-;;:::i;20305:114:67:-;;;;;;:::i;:::-;20365:7;20391:21;;;:13;:21;;;;;;;20305:114;3616:127:69;;;;;;:::i;:::-;;:::i;18849:140:67:-;;;;;;:::i;:::-;;:::i;6495:386:49:-;;;;;;:::i;:::-;6721:25;6715:4;6708:39;6767:4;6760:19;;;;6615:11;6792:22;6859:4;-1:-1:-1;6843:21:49;6837:28;;6495:386;19686:112:67;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10541:494::-;;;;;;:::i;:::-;;:::i;8225:3984:49:-;;;;;;:::i;:::-;;:::i;15455:538:67:-;;;;;;:::i;:::-;;:::i;20035:147::-;;;;;;:::i;:::-;;:::i;23953:399::-;;;;;;:::i;:::-;;:::i;2138:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3749:105:69:-;3821:26;3842:4;3821:20;:26::i;:::-;3749:105;:::o;20924:175:67:-;20988:13;21076:14;:3;:12;:14::i;:::-;21027:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;21013:79;;20924:175;;;:::o;12067:676:66:-;12224:7;12251:17;;;:8;:17;;;;;;:29;;12247:64;;12289:22;;-1:-1:-1;;;12289:22:66;;;;;;;;;;;12247:64;12322:25;12350:50;12360:19;12370:8;12360:9;:19::i;:::-;12381:18;;;;:8;:18;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;12350:50:66;6250:25:49;6244:4;6237:39;;;6296:4;6289:19;;;12410:29:66;6321:16:49;;;6382:4;6366:21;;;6360:28;12507:7:66;:17;;;;;:20;12322:78;;-1:-1:-1;6360:28:49;12566:6:66;12541:31;;12537:45;;12581:1;12574:8;;;;;;;12537:45;12592:23;12676:26;:17;12696:6;12676:26;:::i;:::-;12652:19;12619:30;12643:6;12619:21;:30;:::i;:::-;:52;;;;:::i;:::-;12618:85;;;;:::i;:::-;12592:111;-1:-1:-1;;;;;12067:676:66;;;;;;;:::o;7193:648:67:-;7453:1;;:43;;-1:-1:-1;;;7453:43:67;;7407:13;;;;-1:-1:-1;;;;;7453:1:67;;;;:16;;:43;;7470:7;;7479:9;;7490:5;;7453:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7432:64;;7514:15;7524:4;7514:9;:15::i;:::-;7539:22;;;;:15;:22;;;;;:38;;;7615:15;7610:1;7587:25;;;:43;7539:22;-1:-1:-1;7660:19:67;;:58;;7695:23;:14;7712:6;7695:23;:::i;:::-;7660:58;;;7682:10;7660:58;7640:14;;;;:7;:14;;;;;:17;:78;7733:37;;;7756:1;21080:25:90;;21136:2;21121:18;;21114:34;;;7749:5:67;;7733:37;;21053:18:90;7733:37:67;;;;;;;7813:1;7816:14;;;:7;:14;;;;;7806:5;;7785:49;;7813:1;7816:17;;7785:49;;;21080:25:90;;;21136:2;21121:18;;21114:34;;;;21053:18;7785:49:67;;;;;;;7422:419;7193:648;;;;;;;:::o;24358:179::-;24437:16;24472:15;:58;24515:5;24522;24498:30;;;;;;;;21336:2:90;21332:15;;;;-1:-1:-1;;;;;;21328:53:90;21316:66;;21407:2;21398:12;;21391:28;21444:2;21435:12;;21159:294;24498:30:67;;;;;;;;;;;;;24488:41;;;;;;24472:58;;;;;;;;;;;24465:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24358:179;;;;;:::o;12749:209:66:-;12833:7;12852:15;12897:7;12906;12880:34;;;;;;;;21615:19:90;;;21659:2;21650:12;;21643:28;21696:2;21687:12;;21458:247;12880:34:66;;;;;;;-1:-1:-1;;12880:34:66;;;;;;12870:45;;12880:34;12870:45;;;;12932:16;;;;:7;:16;;;;;:19;;;-1:-1:-1;;;;12749:209:66:o;3860:111:69:-;3939:25;3950:4;3956:7;3939:10;:25::i;:::-;3860:111;;:::o;15044:228:67:-;15122:19;15167:18;;;:13;:18;;;;;;:23;:98;;15247:18;;;;:13;:18;;;;;;15204:40;15214:14;15261:3;15214:9;:14::i;:::-;15230:13;;;;:8;:13;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;15204:40:67;15197:47;;:4;:47;:::i;:::-;:68;;;;:::i;:::-;15167:98;;;15193:1;15167:98;15153:112;15044:228;-1:-1:-1;;;15044:228:67:o;13733:232::-;13839:7;:10;-1:-1:-1;;;;;13839:10:67;13823:12;:10;:12::i;:::-;-1:-1:-1;;;;;13823:26:67;;13819:52;;13858:13;;-1:-1:-1;;;13858:13:67;;;;;;;;;;;13819:52;13885:8;13897:1;13885:13;13881:37;;13907:11;;-1:-1:-1;;;13907:11:67;;;;;;;;;;;13881:37;-1:-1:-1;;;;;13928:19:67;;;;;;;:7;:19;;;;;:30;13733:232::o;1320:386:66:-;1404:24;1431:43;1450:10;1462:11;1431:18;:43::i;:::-;1404:70;;1506:1;1488:7;:14;:19;1484:32;;1509:7;1320:386;;:::o;1484:32::-;1525:20;:33;;-1:-1:-1;;;;;;1525:33:66;-1:-1:-1;;;;;1525:33:66;;;;;1568:32;1579:11;1592:7;1568:10;:32::i;:::-;1617:20;1610:27;;-1:-1:-1;;;;;;1610:27:66;;;1652:47;;-1:-1:-1;;;;;10524:32:90;;10506:51;;1675:11:66;;1663:10;;1652:47;;10494:2:90;10479:18;1652:47:66;;;;;;;;1394:312;1320:386;;:::o;1724:73:67:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1724:73:67;;-1:-1:-1;1724:73:67:o;12437:470::-;12560:16;;-1:-1:-1;;;;;12560:16:67;12546:10;:30;12542:58;;12585:15;;-1:-1:-1;;;12585:15:67;;;;;;;;;;;12542:58;12614:33;12623:6;12631:15;12614:8;:33::i;:::-;12610:234;;;-1:-1:-1;;;;;19067:19:67;;;12663:21;;;;:7;:21;;;;;;;:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12663:37:67;;;;;;;;;;;:21;12737:15;;12722:30;;;;:::i;:::-;12714:39;;;;;;;;;;;;;;-1:-1:-1;12714:39:67;;;:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12714:55:67;-1:-1:-1;;;;;12714:55:67;;;;;;;;12783:30;;:13;:30;;;;;-1:-1:-1;;12783:50:67;;12610:234;12853:47;-1:-1:-1;;;;;19067:19:67;;12884:15;12853:13;:47::i;:::-;12437:470;;;:::o;12757:5689:49:-;16302:9:67;;;;12958:106:49;;;13003:50;13024:4;13030:2;13034:3;;13003:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13003:50:49;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13039:7:49;;-1:-1:-1;13039:7:49;;;;13003:50;;;13039:7;;13003:50;13039:7;13003:50;;;;;;;;;-1:-1:-1;;13003:50:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13048:4:49;;-1:-1:-1;13048:4:49;;;;13003:50;;13048:4;;;;13003:50;;;;;;;;;-1:-1:-1;13003:20:49;;-1:-1:-1;;;13003:50:49:i;:::-;13164:14;13152:10;13149:30;13139:162;;13212:10;13206:4;13199:24;13282:4;13276;13269:18;13139:162;13372:4;13368:2;13364:13;13337:25;13334:44;13447:2;13443;13439:11;13412:25;13409:42;13477:12;13471:4;13464:26;13559:12;13555:2;13551:21;13543:29;;13599:10;13595:2;13591:19;13585:25;;13684:2;13674:135;;13719:10;13713:4;13706:24;13790:4;13784;13777:18;13674:135;13917:4;13907:8;13904:18;13894:272;;13955:8;13949:4;13942:22;14013:4;14007;13997:21;13991:28;13981:171;;14056:10;14050:4;14043:24;14129:4;14123;14116:18;13981:171;14286:10;14283:1;14279:18;14264:1482;14300:1;14264:1482;;;14339:4;14336:1;14332:12;14327:17;;14412:1;14396:14;14392:22;14379:36;14548:12;14542:4;14535:26;14628:1;14616:10;14612:18;14599:32;14593:4;14586:46;14696:4;14690;14680:21;14751:15;14745:22;14806:11;14798:6;14795:23;14792:182;;;14862:10;14856:4;14849:24;14943:4;14937;14930:18;14792:182;15023:24;;;14999:49;;15195:4;15188:24;;;15274:4;15268;15258:21;15327:20;;15394:28;;;15450:35;;;15447:197;;;15529:10;15523:4;15516:24;15613:4;15607;15600:18;15447:197;15669:37;;;-1:-1:-1;14264:1482:49;;-1:-1:-1;14264:1482:49;;14268:31;14246:1514;;15851:4;15845:11;15918:4;15915:1;15908:15;15966:10;15963:1;15959:18;15953:4;15949:29;16011:4;16008:1;16004:12;16072:1;16065:4;16053:10;16049:21;16046:1;16033:41;16161:1;16155:4;16151:12;16144:4;16141:1;16137:12;16130:34;16232:1;16225:4;16209:14;16205:25;16201:1;16198;16194:9;16181:53;;16362:2;16356:4;16346:8;16313:31;16306:4;16302:1;16299;16295:9;16291:20;16288:1;16283:82;;;16402:24;16171:4:67;16105:101;;16402:24:49;16398:112;;;16442:57;16470:4;16476:2;16480:3;;16485:7;;16494:4;;16442:27;:57::i;:::-;16682:2;16670:15;16667:1763;;;16717:2;16711:4;16704:16;16793:4;16787:11;16954:10;16951:1;16944:21;17003:8;16996:4;16993:1;16989:12;16982:30;17050:4;17043;17040:1;17036:12;17029:26;17128:4;17121;17118:1;17114:12;17107:26;17176:10;17173:1;17169:18;17163:4;17159:29;17221:4;17218:1;17214:12;17282:1;17275:4;17263:10;17259:21;17256:1;17243:41;17359:1;17353:4;17349:12;17399:1;17392:4;17389:1;17385:12;17378:23;17469:1;17462:4;17446:14;17442:25;17438:1;17435;17431:9;17418:53;17545:9;;17538:4;17531:12;;17524:31;17632:4;17628:22;;-1:-1:-1;;17604:22:49;;17592:9;;;17585:17;;17572:79;;17714:1;17711;17707:9;17694:11;17690:27;17684:4;17680:38;17668:50;;17843:4;17840:1;17834:4;17827;17824:1;17820:12;17817:1;17810:4;17804:11;17797:5;17792:56;17782:338;;17875:16;17872:230;;;18011:16;18005:4;18002:1;17987:41;18063:16;18060:1;18053:27;17872:230;-1:-1:-1;18232:8:49;;-1:-1:-1;;;18229:34:49;18219:197;;18300:10;18294:4;18287:24;18393:4;18387;18380:18;18219:197;;16667:1763;12757:5689;;;;;;;;:::o;11692:347:66:-;11774:23;11814:24;11823:5;11830:7;11814:8;:24::i;:::-;11809:53;;11847:15;;-1:-1:-1;;;11847:15:66;;;;;;;;;;;11809:53;11901:16;;11890:79;;-1:-1:-1;;;11890:79:66;;11942:10;11890:79;;;22080:34:90;22130:18;;;22123:34;;;-1:-1:-1;;;;;22193:15:90;;;22173:18;;;22166:43;11901:16:66;;;;11890:51;;22015:18:90;;11890:79:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11872:97;;12024:7;12017:5;-1:-1:-1;;;;;11984:48:66;12000:15;-1:-1:-1;;;;;11984:48:66;;;;;;;;;;;11692:347;;;;:::o;18593:1021:49:-;18729:25;18861:13;18849:10;18846:29;18836:161;;18908:10;18902:4;18895:24;18978:4;18972;18965:18;18836:161;19028:4;19022:11;19010:23;;19063:10;19053:8;19046:28;19110:4;19100:8;19096:19;19144:10;19141:1;19137:18;19188:1;19185;19181:9;19175:4;19168:23;19269:329;19276:1;19269:329;;;19311:4;19308:1;19304:12;19299:17;;19378:1;19363:13;19359:21;19346:35;19449:5;19445:2;19441:14;19414:25;19411:45;19405:4;19398:59;;19516:1;19504:10;19500:18;19487:32;19481:4;19474:46;19577:4;19571;19561:21;19555:28;19551:1;19548;19544:9;19537:47;19269:329;;;19273:2;;18593:1021;;;;;;:::o;4507:295:67:-;4587:7;4595:1;4587:10;;-1:-1:-1;;;;;4587:10:67;4573;:24;4569:48;;4606:11;;-1:-1:-1;;;4606:11:67;;;;;;;;;;;4569:48;4631:10;;-1:-1:-1;;;;;4631:27:67;;;:10;;:27;4627:169;;-1:-1:-1;4687:10:67;;;:7;4674:23;;-1:-1:-1;;;;;;4674:23:67;;;-1:-1:-1;;;;;4687:10:67;;4674:23;;;;4711:17;;;3749:105:69:o;4627:169:67:-;4759:10;:26;;-1:-1:-1;;;;;;4759:26:67;-1:-1:-1;;;;;4759:26:67;;;;;;;;;;4507:295::o;1712:1707:66:-;1808:21;;;;:8;:21;;;;;;:36;;;1804:63;;1853:14;;-1:-1:-1;;;1853:14:66;;;;;;;;;;;1804:63;1877:13;1893:35;1902:12;:10;:12::i;:::-;1916:11;1893:8;:35::i;:::-;1877:51;;1938:12;1953:18;1958:12;:10;:12::i;1953:18::-;1986:20;;1938:33;;-1:-1:-1;;;;;;1986:20:66;1982:146;;2110:7;2036:15;:71;2079:12;:10;:12::i;:::-;2093:11;2062:43;;;;;;;;21336:2:90;21332:15;;;;-1:-1:-1;;;;;;21328:53:90;21316:66;;21407:2;21398:12;;21391:28;21444:2;21435:12;;21159:294;2062:43:66;;;;;;;;;;;;;2052:54;;;;;;2036:71;;;;;;;;;;;:81;;;;;;;;;;;;:::i;:::-;;1982:146;2142:8;2137:29;;2159:7;;-1:-1:-1;;;2159:7:66;;;;;;;;;;;2137:29;2177:23;2203:36;2213:12;:10;:12::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2203:36:66;2292:26;;;;:13;:26;;;;;;2177:62;;-1:-1:-1;2292:35:66;;2321:6;;2292:35;:::i;:::-;2253:36;2263:12;:10;:12::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2253:36:66;:74;2249:102;;;2336:15;;-1:-1:-1;;;2336:15:66;;;;;;;;;;;2249:102;2362:26;2376:11;2362:13;:26::i;:::-;-1:-1:-1;2399:25:66;2427:23;;;:10;:23;;;;;;;;2399:51;;;;;;;;;;;;;;;;;;;2427:23;;2399:51;;;2427:23;2399:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2497:20:66;;2399:51;;-1:-1:-1;2461:14:66;;;;-1:-1:-1;;;;;;2497:20:66;;-1:-1:-1;2497:42:66;;-1:-1:-1;2497:42:66;2538:1;2497:42;;;2534:1;2497:42;2485:54;;;;2549:703;2561:7;:14;2557:1;:18;2549:703;;;2596:19;2618:7;2626:1;2618:10;;;;;;;;:::i;:::-;;;;;;;2596:32;;2642:15;2687:11;2700:4;2706:11;2670:48;;;;;;;;;22661:19:90;;;22705:2;22696:12;;22689:28;;;;22742:2;22733:12;;22726:28;22779:2;22770:12;;22476:312;2670:48:66;;;;;;;;;;;;;2660:59;;;;;;2642:77;;2743:1;2738;:6;2734:508;;2768:11;2783:1;2768:16;2764:30;;2786:8;;;;2764:30;2816:1;2821;2816:6;2812:72;;2858:12;:10;:12::i;:::-;-1:-1:-1;;;;;2829:55:66;2845:11;2829:55;2872:11;2829:55;;;;616:25:90;;604:2;589:18;;470:177;2829:55:66;;;;;;;;2812:72;2906:1;2911;2906:6;2902:71;;2947:12;:10;:12::i;:::-;-1:-1:-1;;;;;2919:54:66;2934:11;2919:54;2961:11;2919:54;;;;616:25:90;;604:2;589:18;;470:177;2919:54:66;;;;;;;;2902:71;2991:76;3013:11;3026;3039:1;3042:15;3059:7;2991:21;:76::i;:::-;2734:508;;;3106:82;3128:11;3141:4;3147:11;3160:1;3163:7;:14;3179:8;3106:21;:82::i;:::-;3206:21;3216:11;3206:21;;:::i;:::-;;;2734:508;2582:670;;2549:703;2577:3;;2549:703;;;3283:1;3265:7;:14;:19;;:34;;;;-1:-1:-1;3288:11:66;;;3265:34;:54;;;;;3303:6;3313;3303:16;;3265:54;3261:83;;;3328:16;;-1:-1:-1;;;3328:16:66;;;;;;;;;;;3261:83;3387:15;3397:4;3387:9;:15::i;:::-;-1:-1:-1;;;;;3359:53:66;3374:11;3359:53;3404:7;3359:53;;;;;;:::i;:::-;;;;;;;;1794:1625;;;;;;1712:1707;;:::o;11177:446:67:-;11258:6;11281:22;11290:6;11298:4;11281:8;:22::i;:::-;11276:47;;11312:11;;-1:-1:-1;;;11312:11:67;;;;;;;;;;;11276:47;11347:12;:10;:12::i;:::-;-1:-1:-1;;;;;11337:22:67;:6;-1:-1:-1;;;;;11337:22:67;;11333:114;;11375:36;11381:6;11389:18;11402:4;11389:12;:18::i;:::-;11409:1;11375:5;:36::i;:::-;-1:-1:-1;11432:4:67;11425:11;;11333:114;11462:1;;-1:-1:-1;;;;;11462:1:67;:8;11471:6;11479:19;11493:4;11479:13;:19::i;:::-;11462:37;;-1:-1:-1;;;;;;11462:37:67;;;;;;;-1:-1:-1;;;;;22985:32:90;;;11462:37:67;;;22967:51:90;23034:18;;;23027:34;22940:18;;11462:37:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11461:38;11457:42;;11516:18;11529:4;11516:12;:18::i;:::-;11509:25;;11549:1;11545:29;;;11552:22;11558:6;11566:4;11572:1;11552:5;:22::i;:::-;11589:27;;11611:4;;-1:-1:-1;;;;;11589:27:67;;;;;;;;11177:446;;;;:::o;4128:137:69:-;4198:14;4233:25;4253:4;4233:19;:25::i;4959:327:67:-;5027:7;:10;5004:7;;-1:-1:-1;;;;;5027:10:67;:24;5023:50;;5060:13;;-1:-1:-1;;;5060:13:67;;;;;;;;;;;5023:50;5107:16;;5170:4;;5150:26;;-1:-1:-1;;;5150:26:67;;-1:-1:-1;;;;;5170:4:67;;;5150:26;;;616:25:90;5107:16:67;;;5096:53;;5150:4;;:14;;589:18:90;;5150:26:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5096:81;;;;;;;;;;;;;616:25:90;;604:2;589:18;;470:177;5096:81:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5083:7;5091:1;5083:10;:94;;-1:-1:-1;;;;;;5083:94:67;-1:-1:-1;;;;;5083:94:67;;;;;;5188:1;;:17;;;-1:-1:-1;;;5188:17:67;;;;:1;;;;;:15;;:17;;;;;-1:-1:-1;;5188:17:67;;;;;;;-1:-1:-1;5188:1:67;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5220:32;5241:7;5249:1;5241:10;;;;;;;:::i;:::-;;;5220:32;;-1:-1:-1;;;;;5241:10:67;;;10506:51:90;;10494:2;10479:18;5220:32:67;;;;;;;-1:-1:-1;5269:7:67;:10;-1:-1:-1;;;;;5269:10:67;;4959:327::o;20188:111::-;20248:7;20274:15;;;:7;:15;;;;;20248:7;20274:18;;;;20188:111;-1:-1:-1;;20188:111:67:o;9137:278::-;9208:24;9235:19;9246:7;9235:10;:19::i;:::-;9208:46;;9264:9;9283:83;9295:7;:14;9291:1;:18;9283:83;;;9330:25;9335:7;9343:1;9335:10;;;;;;;;:::i;:::-;;;;;;;9347:7;9330:4;:25::i;:::-;9311:3;;9283:83;;;9379:5;;9375:33;;9386:22;9391:7;9400;9386:4;:22::i;:::-;9198:217;;9137:278;;:::o;2072:25::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2072:25:67;;-1:-1:-1;2072:25:67;:::o;19565:115::-;19623:7;19649:21;;;:15;:21;;;;;19623:7;19649:24;;14287:433;14366:7;14385:22;14410:19;14421:7;14410:10;:19::i;:::-;14385:44;;14439:9;14463;14458:233;14478:5;:12;14474:1;:16;14458:233;;;14534:1;14530;14515:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;14511:24;;14559:5;14565:1;14559:8;;;;;;;;:::i;:::-;;;;;;;14549:18;;14606:7;14585:8;:17;14594:7;14585:17;;;;;;;;;;;;:28;14581:39;14615:5;14581:39;14643:37;14664:6;14672:7;14643:20;:37::i;:::-;14634:46;-1:-1:-1;14492:3:67;;14458:233;;;-1:-1:-1;14707:6:67;;14287:433;-1:-1:-1;;;;14287:433:67:o;19388:171::-;19467:4;19538:1;19487:47;19497:9;19508:25;19521:11;19508:12;:25::i;19487:47::-;:52;19483:69;;-1:-1:-1;19548:4:67;19541:11;;2162:20;;;;;;;:::i;19804:116::-;19897:16;;;;:10;:16;;;;;;;;;19890:23;;;;;;;;;;;;;;;;;19862:16;;19890:23;;;19897:16;19890:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19804:116;;;:::o;10819:390:66:-;10880:22;10914:21;10938:19;10949:7;10938:10;:19::i;:::-;10914:43;;10984:1;10967:18;;10995:128;11033:4;:11;11016:14;:28;10995:128;;;11078:34;11091:4;11096:14;11091:20;;;;;;;;:::i;:::-;;;;;;;11078:12;:34::i;:::-;;11046:16;;;;;10995:128;;;11132:22;11146:7;11132:13;:22::i;:::-;;11181:21;11194:7;9721:907;9776:22;9827:17;;;:8;:17;;;;;;9858:11;;;9854:32;;9878:8;;-1:-1:-1;;;9878:8:66;;;;;;;;;;;9854:32;9900:16;;;;:8;:16;;;;;;:26;;;9896:40;;-1:-1:-1;9935:1:66;;9721:907;-1:-1:-1;;9721:907:66:o;9896:40::-;9947:21;9961:6;9947:13;:21::i;:::-;-1:-1:-1;10023:33:66;;;;;;;21615:19:90;;;21650:12;;;21643:28;;;10023:33:66;;;;;;;;;21687:12:90;;;;10023:33:66;;;10012:46;;;;;-1:-1:-1;10096:36:66;10106:17;21643:28:90;10106:9:66;:17::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;10096:36:66;10215:31;;;;:7;:31;;;;;10069:63;;-1:-1:-1;10247:1:66;10215:34;;10197:52;;:15;:52;:::i;:::-;10159:31;;;;:7;:31;;;;;:34;:91;;;;:::i;:::-;10142:108;;10282:16;10265:14;:33;10261:97;;;10331:16;10314:33;;10261:97;10368:31;;;;:7;:31;;;;;10405:15;;10400:1;10368:34;:52;10435:18;;10431:191;;10469:142;10500:17;10510:6;10500:9;:17::i;:::-;10519:18;10529:7;10519:9;:18::i;:::-;10539:6;10547:14;10563:34;;;;;;-1:-1:-1;;;23657:29:90;;23711:2;23702:12;;23455:265;10563:34:66;;;;;;;;;;;;;10469:13;:142::i;:::-;9800:828;;;9721:907;;;:::o;21105:112:67:-;21200:10;;-1:-1:-1;;;21200:10:67;;;;;;;;;;;23677:262;23744:24;23804:7;:14;-1:-1:-1;;;;;23788:31:67;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23780:39;;23834:9;23829:104;23853:7;:14;23849:1;:18;23829:104;;;23899:23;23911:7;23919:1;23911:10;;;;;;;;:::i;:::-;;;;;;;23899:11;:23::i;:::-;23888:5;23894:1;23888:8;;;;;;;;:::i;:::-;;;;;;;;;;:34;23869:3;;23829:104;;;;23677:262;;;:::o;24543:524::-;24615:25;;:::i;:::-;24663:19;24675:6;24663:11;:19::i;:::-;24652:30;-1:-1:-1;;;;;;24696:18:67;;24692:39;24716:15;24692:39;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;24765:34:67;;:32;:34::i;:23::-;:32;:34::i;:::-;24741:18;;:21;;:58;24809:22;24834:19;24847:6;-1:-1:-1;;;;;19067:19:67;;24834;:::i;:::-;24900:1;24867:23;;;:7;:23;;;;;:30;24809:44;;-1:-1:-1;24867:34:67;24863:137;;24962:23;;;;:7;:23;;;;;:26;;24942:47;;24962:23;:26;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24962:26:67;24942:19;:47::i;:::-;24917:18;;:22;;:72;24863:137;25028:32;25047:4;25053:6;25028:18;:32::i;:::-;25009:16;;;:51;-1:-1:-1;24543:524:67;;;;:::o;5588:320::-;5656:11;5683;-1:-1:-1;;;;;5683:23:67;;5710:1;5683:28;5679:46;;5720:5;;-1:-1:-1;;;5720:5:67;;;;;;;;;;;5679:46;-1:-1:-1;;;;;;19067:19:67;;5773:13;;;;:8;:13;;;;;;:18;5769:43;;5800:12;;-1:-1:-1;;;5800:12:67;;;;;;;;;;;5769:43;5823:23;5837:3;5842;5823:13;:23::i;:::-;5858:11;;5856:13;;;;;:::i;:::-;;;;-1:-1:-1;5885:16:67;;5897:3;;5885:16;;;;;5588:320;;;:::o;3977:145:69:-;4055:14;4090:25;4101:4;4107:7;4090:10;:25::i;3616:127::-;3682:13;3715:21;3731:4;3715:15;:21::i;18849:140:67:-;18900:7;-1:-1:-1;;;;;18926:21:67;;:56;;18979:1;18926:56;;;18958:1;18919:63;18849:140;-1:-1:-1;;18849:140:67:o;19686:112::-;19778:13;;;;:7;:13;;;;;;;;;19771:20;;;;;;;;;;;;;;;;;19743:16;;19771:20;;;19778:13;19771:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19771:20:67;;;;;;;;;;;;;;;;;;;;;;19686:112;;;:::o;10541:494::-;10615:17;;;;:8;:17;;;;;;:22;;10611:54;;10646:19;;-1:-1:-1;;;10646:19:67;;;;;;;;;;;10611:54;10676:22;10701:19;10712:7;10701:10;:19::i;:::-;10676:44;;10730:9;10754;10749:249;10769:5;:12;10765:1;:16;10749:249;;;10825:1;10821;10806:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;10802:24;;10879:6;10844:32;10854:12;:10;:12::i;10844:32::-;:41;10840:71;;;10894:17;;-1:-1:-1;;;10894:17:67;;;;;;;;;;;10840:71;10934:21;10939:7;10948:6;10934:4;:21::i;:::-;10925:30;;10979:5;10985:1;10979:8;;;;;;;;:::i;:::-;;;;;;;10969:18;;10783:3;;;;;10749:249;;;;11007:21;11012:7;11021:6;11007:4;:21::i;:::-;;10601:434;;10541:494;;:::o;8225:3984:49:-;16302:9:67;;;;8397:122:49;;;8442:66;8463:4;8469:2;8473:11;8481:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;8473:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;8503:4;;8442:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8442:20:49;;-1:-1:-1;;;8442:66:49:i;:::-;8652:4;8648:2;8644:13;8617:25;8614:44;8727:2;8723;8719:11;8692:25;8689:42;8757:12;8751:4;8744:26;8839:12;8835:2;8831:21;8823:29;;8879:10;8875:2;8871:19;8865:25;;8964:2;8954:135;;8999:10;8993:4;8986:24;9070:4;9064;9057:18;8954:135;9197:4;9187:8;9184:18;9174:272;;9235:8;9229:4;9222:22;9293:4;9287;9277:21;9271:28;9261:171;;9336:10;9330:4;9323:24;9409:4;9403;9396:18;9261:171;9555:2;9549:4;9542:16;9614:4;9608;9598:21;9575:44;;9661:15;9655:22;9708:11;9700:6;9697:23;9694:158;;;9756:10;9750:4;9743:24;9829:4;9823;9816:18;9694:158;9910:6;9897:11;9893:24;9876:15;9869:49;;10039:10;10033:4;10026:24;10104:4;10098;10088:21;10067:42;;10155:13;10149:20;10229:6;10212:15;10208:28;10275:15;10259:14;10256:35;10253:173;;;10327:10;10321:4;10314:24;10403:4;10397;10390:18;10253:173;10443:37;;;-1:-1:-1;;10560:4:49;10553:20;;;10653:2;10647:4;10637:8;-1:-1:-1;;;;;;;;;;;10597:4:49;10591;10586:70;10962:2;10950:15;10947:1246;;;11040:4;11034:11;11151:10;11148:1;11141:21;11200:8;11193:4;11190:1;11186:12;11179:30;11247:4;11240;11237:1;11233:12;11226:26;11290:2;11283:4;11280:1;11276:12;11269:24;11331:6;11324:4;11321:1;11317:12;11310:28;11376:4;11369;11366:1;11362:12;11355:26;11459:11;11453:4;11449:22;11442:4;11429:11;11425:22;11418:4;11415:1;11411:12;11398:74;11606:4;11603:1;11589:11;11583:4;11579:22;11572:4;11569:1;11565:12;11562:1;11558:2;11551:5;11546:65;11536:347;;11638:16;11635:230;;;11774:16;11768:4;11765:1;11750:41;11826:16;11823:1;11816:27;11635:230;11995:8;;-1:-1:-1;;;11992:34:49;11982:197;;12063:10;12057:4;12050:24;12156:4;12150;12143:18;11982:197;;10947:1246;8225:3984;;;;;;:::o;15455:538:67:-;15543:16;15590:14;;;:8;:14;;;;;;15510:21;;15562:1;;15614:154;15632:8;:4;15639:1;15632:8;:::i;:::-;15621:6;:20;15614:154;;15671:16;;;;:8;:16;;;;;;15657:37;;15689:5;15657:37;15708:10;;;:::i;:::-;15741:16;;;;:8;:16;;;;;;;15708:10;;-1:-1:-1;15614:154:67;;;15798:8;-1:-1:-1;;;;;15784:23:67;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15784:23:67;;15777:30;;15818:13;;;15841:146;15863:8;15854:6;:17;15841:146;;;15927:14;;;;:8;:14;;;;;;15897:4;15922:1;15902:17;15913:6;15902:8;:17;:::i;:::-;:21;;;;:::i;:::-;15897:27;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;15962:14;;;;:8;:14;;;;;;;;15873:8;;15841:146;;;15533:460;;15455:538;;;:::o;20035:147::-;20092:7;20122:8;20115:4;:15;20111:43;;;20139:15;20146:8;20139:4;:15;:::i;20111:43::-;-1:-1:-1;20171:4:67;20035:147::o;23953:399::-;-1:-1:-1;;;;;19067:19:67;;24108:14;24176:15;;;:7;:15;;;;;:22;24068:24;;19067:19;-1:-1:-1;;;;;24160:39:67;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24152:47;;24214:9;24209:137;24233:15;;;;:7;:15;;;;;:22;24229:26;;24209:137;;;24304:15;;;;:7;:15;;;;;:18;;24287:48;;24299:24;;24320:1;;24304:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24304:18:67;;18995:98;24299:24;24325:9;24287:11;:48::i;:::-;24276:5;24282:1;24276:8;;;;;;;;:::i;:::-;;;;;;;;;;:59;24257:3;;24209:137;;;;24098:254;23953:399;;;;:::o;7991:446::-;8058:14;;;;:8;:14;;;;;;:19;;8054:46;;8086:14;;-1:-1:-1;;;8086:14:67;;;;;;;;;;;8054:46;8114:14;;;;:8;:14;;;;;;:22;;;8110:54;;8145:19;;-1:-1:-1;;;8145:19:67;;;;;;;;;;;8110:54;8178:19;;;;:13;:19;;;;;;:40;;8174:63;;8227:10;;-1:-1:-1;;;8227:10:67;;;;;;;;;;;8174:63;8252:28;8261:12;:10;:12::i;:::-;8275:4;8252:8;:28::i;:::-;8248:56;;;8289:15;;-1:-1:-1;;;8289:15:67;;;;;;;;;;;8248:56;8319:1;;-1:-1:-1;;;;;8319:1:67;:8;8328:12;:10;:12::i;:::-;8342:19;8356:4;8342:13;:19::i;:::-;8319:43;;-1:-1:-1;;;;;;8319:43:67;;;;;;;-1:-1:-1;;;;;22985:32:90;;;8319:43:67;;;22967:51:90;23034:18;;;23027:34;22940:18;;8319:43:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8314:70;;8371:13;;-1:-1:-1;;;8371:13:67;;;;;;;;;;;8314:70;8395:35;8411:12;:10;:12::i;:::-;8425:4;8395:15;:35::i;447:696:41:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;-1:-1:-1;;;;;627:18:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:41;-1:-1:-1;604:41:41;-1:-1:-1;765:28:41;;;781:2;765:28;820:280;-1:-1:-1;;851:5:41;-1:-1:-1;;;985:2:41;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:41;820:280;1064:21;-1:-1:-1;1120:6:41;447:696;-1:-1:-1;;;447:696:41:o;8675:205:67:-;8749:14;;;;:8;:14;;;;;;:19;;8745:54;;8777:22;;-1:-1:-1;;;8777:22:67;;;;;;;;;;;8745:54;8809:64;8815:12;:10;:12::i;:::-;8829:4;8835:7;8844:28;;;;;;-1:-1:-1;;;24184:23:90;;24232:1;24223:11;;23982:258;8844:28:67;;;;;;;;;;;;;8809:5;:64::i;18624:219::-;18692:20;;18669:7;;-1:-1:-1;;;;;18692:20:67;:34;18688:67;;-1:-1:-1;18735:20:67;;-1:-1:-1;;;;;18735:20:67;;18624:219::o;18688:67::-;18783:4;;-1:-1:-1;;;;;18783:4:67;18769:10;:18;18765:44;;-1:-1:-1;18804:4:67;;18624:219::o;18765:44::-;-1:-1:-1;18826:10:67;;18624:219::o;12913:488::-;12992:15;;;;:8;:15;;;;;;:20;12988:52;;13021:19;;-1:-1:-1;;;13021:19:67;;;;;;;;;;;12988:52;13050:15;;;;:8;:15;;;;;:26;;;13090:17;;;13086:309;;13123:20;;;;:10;:20;;;;;;;:32;;;;;;;;;;;;;;;;;13169:7;;13177:20;13134:8;13177:10;:20::i;:::-;13198:1;13177:23;;;;;;;;:::i;:::-;;;;;;;13169:32;;;;;;;;;;;13207:16;13217:5;13207:9;:16::i;:::-;13169:55;;;;;;;;-1:-1:-1;13169:55:67;;;;;;;;;;;;-1:-1:-1;;;;;;13169:55:67;-1:-1:-1;;;;;13169:55:67;;;;;;;;;;;13242:20;;;:13;:20;;;;;;;:41;13238:54;;12913:488;;:::o;13238:54::-;-1:-1:-1;13305:14:67;;;;:7;:14;;;;;13325:10;13305:30;;13369:15;13364:1;13349:17;;;:35;12913:488::o;16324:1677::-;-1:-1:-1;;;16533:7:67;;-1:-1:-1;;;;;;16533:7:67;:42;16529:79;16591:7;16529:79;16622:9;16617:1378;16646:1;16633:3;:10;:14;16617:1378;;;16664:17;16684:3;16688:1;16684:6;;;;;;;;:::i;:::-;;;;;;;16664:26;;16704:18;16725:7;16733:1;16725:10;;;;;;;;:::i;:::-;;;;;;;16704:31;;16770:1;-1:-1:-1;;;;;16754:18:67;:4;-1:-1:-1;;;;;16754:18:67;;;:38;;;;-1:-1:-1;;;;;;16776:16:67;;;;16754:38;16753:70;;;;-1:-1:-1;16798:19:67;;;;:8;:19;;;;;;:24;16753:70;16749:104;;;16832:21;;-1:-1:-1;;;16832:21:67;;;;;;;;;;;16749:104;16884:8;16872:9;:20;16868:479;;;16965:7;;-1:-1:-1;;;;;;16965:7:67;-1:-1:-1;;;16965:39:67;;;16964:89;;-1:-1:-1;17010:7:67;;-1:-1:-1;;;;;;17010:7:67;-1:-1:-1;;;17010:42:67;;16964:89;:161;;;-1:-1:-1;17086:7:67;;-1:-1:-1;;;;;;17086:7:67;-1:-1:-1;;;17086:38:67;;16964:161;:213;;;-1:-1:-1;17130:7:67;;-1:-1:-1;;;;;;17130:7:67;-1:-1:-1;;;17130:46:67;;16964:213;:281;;;-1:-1:-1;17210:7:67;;-1:-1:-1;;;;;;17210:7:67;-1:-1:-1;;;17210:34:67;;16964:281;16912:395;;17293:14;;-1:-1:-1;;;17293:14:67;;;;;;;;;;;16912:395;17326:7;;;;;16868:479;17365:7;;-1:-1:-1;;;;;;17365:7:67;-1:-1:-1;;;17365:29:67;;:66;;-1:-1:-1;17398:7:67;;-1:-1:-1;;;;;;17398:7:67;-1:-1:-1;;;17398:33:67;17365:66;17361:564;;;17455:19;;;;:8;:19;;;;;;:32;;;17451:460;;17523:20;17533:9;17523;:20::i;:::-;17516:72;;-1:-1:-1;;;17516:72:67;;-1:-1:-1;;;;;24503:15:90;;;17516:72:67;;;24485:34:90;17570:4:67;24535:18:90;;;24528:43;24587:18;;;24580:34;;;17516:41:67;;;;;;;24420:18:90;;17516:72:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17511:158;;17623:23;;-1:-1:-1;;;17623:23:67;;;;;;;;;;;17511:158;17451:460;;;17715:9;:17;;-1:-1:-1;;17715:17:67;;;17754:100;17771:12;:10;:12::i;:::-;17785:20;17795:9;17785;:20::i;:::-;17807:19;;;;:8;:19;;;;;;;17828:10;;17840:13;;17851:1;;17840:8;17807:19;17840:13;:::i;17754:100::-;17876:9;:16;;-1:-1:-1;;17876:16:67;17888:4;17876:16;;;17451:460;-1:-1:-1;;17967:3:67;;16617:1378;;43437:310:49;43637:104;;3425:755:66;3614:24;;3631:7;3614:24;3675:37;;;;;;;21615:19:90;;;21650:12;;;21643:28;;;3675:37:66;;;;;;;;;21687:12:90;;;;3675:37:66;;3665:48;;;;;;;;;-1:-1:-1;3747:16:66;;;:7;:16;;;;;;3764:1;3747:19;;3728:15;:38;3724:64;;3775:13;;-1:-1:-1;;;3775:13:66;;;;;;;;;;;3724:64;3802:5;3811:1;3802:10;3798:227;;3828:77;3850:11;3863:7;3872;3881:6;3889:15;3828:21;:77::i;:::-;3798:227;;;3936:78;3959:11;3972:7;3981;3990:6;3998:15;3936:22;:78::i;:::-;4035:16;;;;:7;:16;;;;;;;;4057:15;4052:1;4035:19;;;:37;4082:10;:28;;;;;:41;;;;;;;;;;;;;;;;;;;4139:34;;616:25:90;;;4152:11:66;;4139:34;;589:18:90;4139:34:66;;;;;;;3604:576;3425:755;;;;;:::o;6990:1015::-;7233:17;7249:1;7233:13;:17;:::i;:::-;7213:8;:15;:38;7209:59;;7260:8;;-1:-1:-1;;;7260:8:66;;;;;;;;;;;7209:59;7278:30;7366:4;7374:11;7387:8;7396:9;7404:1;7396:5;:9;:::i;:::-;7387:19;;;;;;;;:::i;:::-;;;;;;;7333:74;;;;;;;;;25348:2:90;25344:15;;;;-1:-1:-1;;;;;;25340:53:90;25328:66;;25419:2;25410:12;;25403:28;;;;25456:2;25447:12;;25440:28;25493:2;25484:12;;25143:359;7333:74:66;;;;;;;-1:-1:-1;;7333:74:66;;;;;;7323:85;;7333:74;7323:85;;;;7418:18;7439:31;;;:7;:31;;;;;:34;7323:85;;-1:-1:-1;7496:6:66;7487:15;;:34;;;;-1:-1:-1;7506:15:66;;7487:34;7483:47;;;7523:7;;;;7483:47;7552:6;7543;:15;7539:40;;;7567:12;;-1:-1:-1;;;7567:12:66;;;;;;;;;;;7539:40;7608:6;7594:10;:20;;:58;;;-1:-1:-1;7618:20:66;;-1:-1:-1;;;;;7618:20:66;:34;;7594:58;7590:409;;;7686:6;7672:10;:20;7668:172;;7712:31;;;;:7;:31;;;;;:43;;;7810:15;7805:1;7773:34;;;:52;7668:172;7854:33;7867:8;7876:9;7884:1;7876:5;:9;:::i;:::-;7867:19;;;;;;;;:::i;7854:33::-;-1:-1:-1;7901:87:66;7931:8;7940:9;7948:1;7940:5;:9;:::i;:::-;7931:19;;;;;;;;:::i;:::-;;;;;;;7952:11;7965:22;7901:29;:87::i;11215:157::-;11303:32;11315:4;11321;11327:7;11303:11;:32::i;:::-;11345:20;11354:4;11360;11345:8;:20::i;11807:412:67:-;11868:14;11898;;;:8;:14;;;;;;:22;;;11894:36;;-1:-1:-1;11929:1:67;;11807:412;-1:-1:-1;11807:412:67:o;11894:36::-;11988:13;;;;:7;:13;;;;;:16;;11982:1;11968:16;;;;11950:34;;:15;:34;:::i;:::-;11949:55;;;;:::i;:::-;11940:64;;12018:6;12028:1;12018:11;12014:25;;-1:-1:-1;12038:1:67;;11807:412;-1:-1:-1;11807:412:67:o;12014:25::-;12049:13;;;;:7;:13;;;;;12068:15;;12063:1;12049:16;:34;12138:29;;-1:-1:-1;;;12138:29:67;;;25709:24:90;12094:74:67;;12116:4;;;;12130:6;;25749:11:90;;12138:29:67;25507:259:90;12094:74:67;12199:4;12183:29;12205:6;12183:29;;;;616:25:90;;604:2;589:18;;470:177;12183:29:67;;;;;;;;11807:412;;;:::o;32884:203:49:-;33027:53;33049:1;33053:4;33059:2;33063;33067:6;33075:4;33027:13;:53::i;21456:2215:67:-;21515:25;;:::i;:::-;21604:17;:6;:15;:17::i;:::-;21580:18;;:41;:18;21701:15;;;:7;21580:21;21701:15;;;;:29;;:18;;;:27;:29::i;:::-;21677:18;;:21;;:53;21836:57;:46;21846:17;21856:6;21846:9;:17::i;21836:57::-;21812:18;;:21;;:81;22000:47;:36;22010:17;22020:6;22010:9;:17::i;22000:47::-;21976:18;;:21;;:71;22153:74;22154:61;22170:6;22178:36;22188:17;22170:6;22188:9;:17::i;22153:74::-;22129:18;;:21;;:98;22334:84;22335:71;22351:6;22359:46;22369:17;22351:6;22369:9;:17::i;22334:84::-;22310:18;;:21;;:108;22492:23;;;;:15;22310:21;22492:23;;;;22491:39;;22492:26;;22491:39;22467:18;;:21;;:63;22679:16;;;;22486:1;22467:21;22679:16;;;;;;;;22715:42;;;;;21615:19:90;;;21650:12;;;21643:28;;;22715:42:67;;;;;;;;;21687:12:90;;;;22715:42:67;;22705:53;;;;;;22697:62;;:7;:62;;;;;;:65;22649:135;;22663:100;;:15;:100::i;22649:135::-;22625:18;;:21;;:159;22864:15;;;;22644:1;22625:21;22864:15;;;;:29;;22880:1;22864:18;;:29;22840:18;;:21;;:53;23094:21;;;;:13;22840:21;23094;;;;;:32;;:30;:32::i;:::-;23069:18;;:22;;:57;23195:1;;;23213:23;;;:15;23069:22;23213:23;;;;;;:26;23195:45;;-1:-1:-1;;;23195:45:67;;;;;616:25:90;;;;-1:-1:-1;;;;;23195:1:67;;;;:17;;589:18:90;;23195:45:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23195:45:67;;;;;;;;;;;;:::i;:::-;:50;;;;;23171:21;;;;:74;;;;23318:15;;;;:7;:15;;;;;23293:40;;;;;;;;;;;;;;;;;23318:15;;23293:40;;23318:15;23293:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23293:40:67;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23293:22:67;;;:40;23386:16;;23373:7;;:40;;23381:31;;23406:6;;-1:-1:-1;;;;;23386:16:67;23381:31;:::i;:::-;23373:40;;;;;;;;;;;23344:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23344:69:67;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23344:26:67;;;:69;23517:18;;;;:10;:18;;;;;;;;;23494:42;;;;;;;;;;;;;;;;;;;;;;23517:18;23494:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:42::i;:::-;23469:22;;;:67;23622:42;23645:18;23656:6;23645:10;:18::i;:::-;23622:22;:42::i;:::-;23602:17;;;:62;:8;21456:2215;-1:-1:-1;21456:2215:67:o;2407:149:41:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:41;;343:2;2497:11;:52::i;9542:993:67:-;9611:14;9641;;;:8;:14;;;;;;:19;;9637:51;;9669:19;;-1:-1:-1;;;9669:19:67;;;;;;;;;;;9637:51;9707:14;;;;:8;:14;;;;;;:22;;:70;;9742:35;9763:7;9772:4;9742:20;:35::i;:::-;9707:70;;;9732:7;9707:70;9698:79;;9787:34;9793:12;:10;:12::i;:::-;9807:4;9813:7;9787:5;:34::i;:::-;9835:14;;;;:8;:14;;;;;;:22;;9831:698;;9873:4;:21;9895:15;9905:4;9895:9;:15::i;:::-;9912:12;:10;:12::i;:::-;9926:8;:14;9935:4;9926:14;;;;;;;;;;;;9942:6;9950:24;;;;;;-1:-1:-1;;;28759:19:90;;28803:1;28794:11;;28557:254;9950:24:67;;;;;;;;;;;;;9873:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9831:698;;;10006:17;10026:7;:24;10034:15;10044:4;10034:9;:15::i;:::-;-1:-1:-1;;;;;10026:24:67;;;;;;;;;;;;-1:-1:-1;10026:24:67;;:29;:78;;10080:7;:24;10088:15;10098:4;10088:9;:15::i;:::-;-1:-1:-1;;;;;10080:24:67;-1:-1:-1;;;;;10080:24:67;;;;;;;;;;;;;10026:78;;;10058:19;;;:7;:19;;;;10026:78;10006:98;-1:-1:-1;10130:19:67;10006:98;10130:7;:19;:::i;:::-;10118:31;-1:-1:-1;10163:20:67;10186:19;10118:31;10186:7;:19;:::i;:::-;10163:42;;10234:12;10223:7;:23;10219:40;;10255:4;;-1:-1:-1;;;10255:4:67;;;;;;;;;;;10219:40;10325:15;10335:4;10325:9;:15::i;:::-;10351:4;;10318:49;;-1:-1:-1;;;10318:49:67;;-1:-1:-1;;;;;10351:4:67;;;10318:49;;;22967:51:90;23034:18;;;23027:34;;;10318:32:67;;;;;22940:18:90;;10318:49:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;;;10402:15;10412:4;10402:9;:15::i;:::-;-1:-1:-1;;;;;10395:32:67;;10428:12;:10;:12::i;:::-;10395:60;;-1:-1:-1;;;;;;10395:60:67;;;;;;;-1:-1:-1;;;;;22985:32:90;;;10395:60:67;;;22967:51:90;23034:18;;;23027:34;;;22940:18;;10395:60:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10274:244;;10495:23;;-1:-1:-1;;;10495:23:67;;;;;;;;;;;6106:651;6163:13;6192:14;;;:8;:14;;;;;;:19;;6188:55;;6213:30;6227:15;6237:4;6227:9;:15::i;6213:30::-;;6188:55;6258:28;6267:12;:10;:12::i;:::-;6281:4;6258:8;:28::i;:::-;6257:29;:57;;;;-1:-1:-1;6291:14:67;;;;:8;:14;;;;;;:22;;;6257:57;6253:81;;;6323:11;;-1:-1:-1;;;6323:11:67;;;;;;;;;;;6253:81;6348:19;;;;:13;:19;;;;;;:40;;6344:63;;6397:10;;-1:-1:-1;;;6397:10:67;;;;;;;;;;;6344:63;6420:11;;6418:13;;;;;:::i;:::-;;;;-1:-1:-1;6490:29:67;6509:10;6490:16;:29;:::i;:::-;6475:11;;6450:22;6457:15;6450:4;:22;:::i;:::-;:36;;;;:::i;:::-;:70;;;;:::i;:::-;6442:78;;6530:57;6549:16;6559:5;6549:9;:16::i;:::-;6575:4;6582;6530:18;:57::i;:::-;6597:26;6611:5;6618:4;6597:13;:26::i;:::-;6637:10;6659:4;6637:27;6633:69;;6666:36;6682:12;:10;:12::i;6666:36::-;6718:32;;6739:10;;6733:4;;6726:5;;6718:32;;;;;6106:651;;;:::o;12225:206::-;12292:11;;;;:7;:11;;;;;;;:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12292:20:67;-1:-1:-1;;;;;12292:20:67;;;;;12323:62;12292:20;12333:16;12292:11;12333:12;:16::i;:::-;12354:30;;-1:-1:-1;;;12354:30:67;;;29584:25:90;12351:1:67;;29625:12:90;;12354:30:67;29382:261:90;12323:62:67;12400:24;;12421:2;;-1:-1:-1;;;;;12400:24:67;;;;;;;;12225:206;;:::o;10139:916:46:-;10192:7;;-1:-1:-1;;;10267:17:46;;10263:103;;-1:-1:-1;;;10304:17:46;;;-1:-1:-1;10349:2:46;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:46;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:46;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:46;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:46;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:46;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:46:o;18007:216:67:-;18109:33;18121:2;18125;18129:6;18137:4;18109:11;:33::i;:::-;18152:17;;;;:13;:17;;;;;:27;;18173:6;;18152:17;:27;;18173:6;;18152:27;:::i;:::-;;;;-1:-1:-1;;18194:22:67;;616:25:90;;;18205:2:67;;-1:-1:-1;;;;;18194:22:67;;;;;604:2:90;589:18;18194:22:67;;;;;;;18007:216;;;;:::o;4186:772:66:-;-1:-1:-1;;;;;4381:26:66;;;:79;;-1:-1:-1;4417:1:66;;:25;;-1:-1:-1;;;4417:25:66;;;;;616::90;;;-1:-1:-1;;;;;4417:1:66;;;;:17;;589:18:90;;4417:25:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4417:25:66;;;;;;;;;;;;:::i;:::-;:30;;;4411:44;:49;4381:79;4377:110;;;4469:18;;-1:-1:-1;;;4469:18:66;;;;;;;;;;;4377:110;4497:75;4517:11;4530:7;4539;4548:6;4556:15;4497:19;:75::i;:::-;4612:26;;;;:13;:26;;;;;;;;;4586:16;;;:7;:16;;;;;;:19;:23;;4608:1;4586:23;:::i;:::-;:52;4582:370;;;4666:1;;:29;;-1:-1:-1;;;4666:29:66;;;;;616:25:90;;;4655:6:66;;-1:-1:-1;;;;;4666:1:66;;:16;;589:18:90;;4666:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:41;;;4714:1;4709:34;;4724:19;;-1:-1:-1;;;4724:19:66;;;;;;;;;;;4709:34;4757:26;4771:11;4757:13;:26::i;:::-;-1:-1:-1;4831:28:66;;;;:15;:28;;;;;4818:11;;4802:69;;4831:31;;4802:69;;;21080:25:90;;;21136:2;21121:18;;21114:34;;;21053:18;4802:69:66;;;;;;;4885:56;;;;;;;;;;;4925:15;4885:56;;;;;;;;-1:-1:-1;4885:28:66;;;:15;:28;;;;;;;:56;;;;:::i;4964:768::-;5156:75;5176:11;5189:7;5198;5207:6;5215:15;5156:19;:75::i;:::-;5271:26;;;;:13;:26;;;;;;;;;5245:16;;;:7;:16;;;;;;:19;:23;;5267:1;5245:23;:::i;:::-;:52;5241:485;;;5325:1;;:29;;-1:-1:-1;;;5325:29:66;;;;;616:25:90;;;5314:6:66;;-1:-1:-1;;;;;5325:1:66;;:16;;589:18:90;;5325:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5313:41;;;5373:1;5368:34;;5383:19;;-1:-1:-1;;;5383:19:66;;;;;;;;;;;5368:34;5416:26;5430:11;5416:13;:26::i;:::-;-1:-1:-1;5495:20:66;;;;:7;:20;;;;;:23;:20;;5461:75;;5520:15;:6;5529;5520:15;:::i;:::-;5461:75;;;21080:25:90;;;21136:2;21121:18;;21114:34;;;;21053:18;5461:75:66;;;;;;;5586:20;;;;:7;:20;;;;;:23;5550:77;;5586:20;;5611:15;:6;5620;5611:15;:::i;:::-;5550:22;:77::i;:::-;5641:74;;;;;;;;5665:6;5674;5665:15;;;;:::i;:::-;5641:74;;5682:15;5641:74;;;;;;;;;;;;;;;-1:-1:-1;5641:20:66;;;:7;:20;;;;:74;;;;:::i;8547:1047::-;8720:35;;;;;;;21615:19:90;;;21650:12;;;21643:28;;;8720:35:66;;;;;;;;;21687:12:90;;;;8720:35:66;;8710:46;;;;;;;;;-1:-1:-1;8861:31:66;;;:7;:31;;;;;;:34;8804:106;;21615:19:90;;21643:28;;8897:12:66;:10;:12::i;8804:106::-;8945:31;;;;:7;:31;;;;;8766:144;;-1:-1:-1;8977:1:66;8945:34;;8926:15;:53;;8920:82;;8989:13;;-1:-1:-1;;;8989:13:66;;;;;;;;;;;8920:82;9053:1;9016:31;;;:7;:31;;;;;9048:1;9016:34;;:38;9012:147;;9114:31;;;;:7;:31;;;;;;9146:1;9114:34;;9070:37;;;;;;:78;;9114:34;;9070:37;;:78;;9114:34;;9070:78;:::i;:::-;;;;-1:-1:-1;;9012:147:66;9169:37;;;;:7;:37;;;;;:59;;9213:15;;9169:37;:59;;9213:15;;9169:59;:::i;:::-;;;;-1:-1:-1;;9285:17:66;;;;:7;:17;;;;;:20;;9242:37;;;;:7;:37;;;;;:40;;:63;9238:157;;;9364:17;;;;:7;:17;;;;;:20;;9321:37;;;;:7;:37;;;;;:40;:63;9238:157;9405:37;;;;:7;:37;;;;;;9448:15;9443:1;9405:40;;;:58;;;9473:31;;;;;:34;;;:52;;;;9567:1;9535:34;:52;-1:-1:-1;;8547:1047:66:o;18229:389:67:-;18322:17;;;;:13;:17;;;;;:27;;18343:6;;18322:17;:27;;18343:6;;18322:27;:::i;:::-;;;;-1:-1:-1;;18364:12:67;;;;:8;:12;;;;;;:17;-1:-1:-1;18364:34:67;;;;;18390:8;18385:2;:13;18364:34;18360:213;;;18414:17;18428:2;18414:13;:17::i;:::-;;18445:37;18457:12;:10;:12::i;:::-;18471:2;18475:6;18445:11;:37::i;18360:213::-;18533:29;18545:4;18551:2;18555:6;18533:11;:29::i;:::-;18600:2;18594:4;-1:-1:-1;;;;;18587:24:67;;18604:6;18587:24;;;;616:25:90;;604:2;589:18;;470:177;33594:2706:49;16302:9:67;;;;33783:122:49;;;33828:66;33849:4;33855:2;33859:11;33867:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;33859:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;33889:4;33828:20;:66::i;:::-;34001:4;33997:2;33993:13;34038:2;34034;34030:11;34115:3;34105:136;;34151:10;34145:4;34138:24;34222:4;34216;34209:18;34105:136;34297:5;34270:25;34267:36;34261:4;34254:50;34484:2;34480;34476:11;34534:5;34529:3;34526:14;34520:3;34513:11;34510:31;34500:279;;34574:2;34568:4;34561:16;34626:4;34620;34610:21;34604:28;34594:171;;34669:10;34663:4;34656:24;34742:4;34736;34729:18;34594:171;34500:279;34888:2;34882:4;34875:16;34947:4;34941;34931:21;34994:15;34988:22;35041:11;35033:6;35030:23;35027:158;;;35089:10;35083:4;35076:24;35162:4;35156;35149:18;35027:158;35226:24;;;35202:49;;35375:25;35372:34;;35366:4;35359:48;35461:4;35455;35445:21;35506:20;;35565:28;;;35613:35;;;35610:173;;;35684:10;35678:4;35671:24;35760:4;35754;35747:18;35610:173;35822:14;35807:13;35800:37;;;;35923:6;35917:4;35910:20;36071:3;36067:2;36063:12;36055:5;36051:2;36047:14;36037:8;-1:-1:-1;;;;;;;;;;;35997:4:49;35991;35986:90;;;36099:24;16171:4:67;16105:101;;36099:24:49;36095:120;;;36139:65;36159:4;36165:2;36169:11;36177:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;36169:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;36182:15;47801:303;36139:65;43964:14;;36224:69;;;36242:51;36266:4;36272:2;36276;36280:6;36288:4;36242:23;:51::i;144:304:71:-;223:15;250:22;288:5;:12;-1:-1:-1;;;;;275:26:71;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:51;;317:9;312:106;336:5;:12;332:1;:16;312:106;;;381:26;398:5;404:1;398:8;;;;;;;;:::i;:::-;;;;;;;381:16;:26::i;:::-;369:6;376:1;369:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;350:3;;312:106;;;-1:-1:-1;435:6:71;144:304;-1:-1:-1;;144:304:71:o;1818:437:41:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:41;;1918:47;;-1:-1:-1;;;1975:6:41;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:41;;;;;;;;;-1:-1:-1;;;2000:6:41;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:41;;;;;;;;-1:-1:-1;2030:9:41;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:41;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:41;;;;;;;;-1:-1:-1;2141:1:41;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:41;;2162:55;;;;-1:-1:-1;;;2162:55:41;;30555:2:90;2162:55:41;;;30537:21:90;;;30574:18;;;30567:30;30633:34;30613:18;;;30606:62;30685:18;;2162:55:41;;;;;;;31804:707:49;32034:10;32027:18;32020:26;32006:40;;32135:25;32129:4;32122:39;32187:2;32181:4;32174:16;32216:8;32210:4;32203:22;32268:10;32261:4;32255;32245:21;32238:41;32353:10;32347:4;32340:24;32398:1;32394:6;32390:2;32386:15;32485:8;32482:1;32478:16;32473:2;32470:1;32466:10;32431:33;32425:4;32419;32414:81;;31804:707;;;:::o;20805:1574::-;16302:9:67;;;;20906:128:49;;;20951:72;20980:1;20984:2;20988:11;20996:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;20951:72;21128:2;21124;21120:11;21205:3;21195:136;;21241:10;21235:4;21228:24;21312:4;21306;21299:18;21195:136;21438:25;21432:4;21425:39;21494:2;21488:4;21481:16;21527:2;21521:4;21514:16;21584:4;21578;21568:21;21635:13;21629:20;21709:6;21692:15;21688:28;21755:15;21739:14;21736:35;21733:173;;;21807:10;21801:4;21794:24;21883:4;21877;21870:18;21733:173;21945:14;21930:13;21923:37;;;;22046:6;22040:4;22033:20;22138:3;22134:2;22130:12;22127:1;22117:8;-1:-1:-1;;;;;;;;;;;22077:4:49;22071;22066:77;-1:-1:-1;43964:14:49;;22297:75;;;22315:57;22347:1;22351:2;22355;22359:6;22367:4;22315:23;:57::i;8011:530:66:-;8226:1;8204:16;;;:7;:16;;;;;8221:1;8204:19;;:23;:82;;;;-1:-1:-1;8266:16:66;;;;:7;:16;;;;;8283:1;8266:19;;8232:28;;;;:15;:28;;;;;8261:1;8232:31;;:53;8204:82;8200:216;;;8328:1;8306:16;;;:7;:16;;;;;8323:1;8306:19;;:23;8302:104;;8372:16;;;;:7;:16;;;;;;8389:1;8372:19;;8349:16;;;;;;:42;;8372:19;;8349:16;;:42;;8372:19;;8349:42;:::i;:::-;;;;-1:-1:-1;;8302:104:66;8425:61;;;;;;;;;;;8453:15;8425:61;;;;;;;;;;;;;;-1:-1:-1;8425:16:66;;;:7;:16;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;8496:16:66;;;;:7;:16;;;;;:38;;8519:15;;8496:16;:38;;8519:15;;8496:38;:::i;:::-;;;;-1:-1:-1;;;;;;;8011:530:66:o;5738:1246::-;5838:25;5866:18;;;:10;:18;;;;;;;;5838:46;;;;;;;;;;;;;;;;;;;5866:18;;5838:46;;;5866:18;5838:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5898:8;:15;5917:1;5898:20;5894:33;;5920:7;5738:1246;;;:::o;5894:33::-;5936:30;;5976:544;6000:8;:15;5996:1;:19;5976:544;;;6036:30;6096:8;6105:1;6096:11;;;;;;;;:::i;:::-;;;;;;;6109:6;6079:37;;;;;;;;21615:19:90;;;21659:2;21650:12;;21643:28;21696:2;21687:12;;21458:247;6079:37:66;;;;;;;-1:-1:-1;;6079:37:66;;;;;;6069:48;;6079:37;6069:48;;;;6131:26;6160:31;;;:7;:31;;;;;:34;6069:48;;-1:-1:-1;6208:44:66;6160:34;6208:44;;:::i;:::-;;;6292:6;6271:18;:27;6267:243;;;6318:25;6331:8;6340:1;6331:11;;;;;;;;:::i;6318:25::-;-1:-1:-1;6361:22:66;6419:7;6387:28;6408:7;6387:18;:28;:::i;:::-;6386:40;;;;:::i;:::-;6444:31;;;;:7;:31;;;;;:51;-1:-1:-1;6267:243:66;-1:-1:-1;;6017:3:66;;5976:544;;;;6560:1;6535:22;:26;6534:97;;;;-1:-1:-1;6603:15:66;;;;:7;:15;;;;;:18;:27;;6624:6;;6603:27;:::i;:::-;6567:31;6592:6;6567:22;:31;:::i;:::-;6566:65;6534:97;6530:314;;;6647:21;6726:46;6736:17;6746:6;6736:9;:17::i;:::-;6755:16;;;;:8;:16;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;6726:46:66;6687:36;6697:17;6707:6;6697:9;:17::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;6687:36:66;:85;;;;:::i;:::-;6647:125;;6786:47;6792:17;6802:6;6792:9;:17::i;:::-;6811:6;6819:13;6786:5;:47::i;:::-;6633:211;6530:314;6854:61;;;;;;;;;;;6882:15;6854:61;;;;;;;;;;;;;;-1:-1:-1;6854:15:66;;;:7;:15;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;6931:46:66;;;21080:25:90;;;21136:2;21121:18;;21114:34;;;6952:6:66;;6931:46;;21053:18:90;6931:46:66;;;;;;;5828:1156;;5738:1246;;;:::o;25830:126:49:-;25914:35;25928:1;25932:4;25938:2;25942:6;25914:5;:35::i;44187:1433::-;44475:4;44469:11;44578:10;44575:1;44568:21;44623:8;44616:4;44613:1;44609:12;44602:30;44682:4;44678:2;44674:13;44670:2;44666:22;44659:4;44656:1;44652:12;44645:44;44723:2;44716:4;44713:1;44709:12;44702:24;44760:6;44753:4;44750:1;44746:12;44739:28;44801:4;44794;44791:1;44787:12;44780:26;44834:4;44828:11;44873:1;44866:4;44863:1;44859:12;44852:23;44891:1;44888:71;;;44954:1;44947:4;44944:1;44940:12;44937:1;44930:4;44924;44920:15;44917:1;44910:5;44899:57;44895:62;44888:71;45075:4;45072:1;45068;45062:4;45058:12;45051:4;45048:1;45044:12;45041:1;45037:2;45030:5;45025:55;45015:313;;45103:16;45100:214;;;45231:16;45225:4;45222:1;45207:41;45279:16;45276:1;45269:27;45100:214;-1:-1:-1;45432:8:49;;-1:-1:-1;;;45429:34:49;45419:185;;45496:10;45490:4;45483:24;45585:4;45579;45572:18;26269:1652;16302:9:67;;;;26365:128:49;;;26410:72;26431:4;26445:1;26449:11;26457:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;26449:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;26410:72;;;;;;;;;;;;:20;:72::i;:::-;26589:4;26585:2;26581:13;26650:5;26623:25;26620:36;26614:4;26607:50;26868:5;26863:2;26859;26855:11;26852:22;26846:2;26842;26838:11;26831:19;26828:47;26818:295;;26908:2;26902:4;26895:16;26960:4;26954;26944:21;26938:28;26928:171;;27003:10;26997:4;26990:24;27076:4;27070;27063:18;26928:171;27222:2;27216:4;27209:16;27281:4;27275;27265:21;27328:15;27322:22;27375:11;27367:6;27364:23;27361:158;;;27423:10;27417:4;27410:24;27496:4;27490;27483:18;27361:158;27577:6;27564:11;27560:24;27543:15;27536:49;;;27671:6;27665:4;27658:20;27768:1;27760:5;27756:2;27752:14;27742:8;-1:-1:-1;;;;;;;;;;;27702:4:49;27696;27691:79;-1:-1:-1;27789:126:49;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:90:-;-1:-1:-1;;;;;89:31:90;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:90:o;652:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;;857:32:90;;847:43;;837:71;;904:1;901;894:12;1135:289;1177:3;1215:5;1209:12;1242:6;1237:3;1230:19;1298:6;1291:4;1284:5;1280:16;1273:4;1268:3;1264:14;1258:47;1350:1;1343:4;1334:6;1329:3;1325:16;1321:27;1314:38;1413:4;1406:2;1402:7;1397:2;1389:6;1385:15;1381:29;1376:3;1372:39;1368:50;1361:57;;;1135:289;;;;:::o;1429:220::-;1578:2;1567:9;1560:21;1541:4;1598:45;1639:2;1628:9;1624:18;1616:6;1598:45;:::i;1654:180::-;1713:6;1766:2;1754:9;1745:7;1741:23;1737:32;1734:52;;;1782:1;1779;1772:12;1734:52;-1:-1:-1;1805:23:90;;1654:180;-1:-1:-1;1654:180:90:o;1839:247::-;1898:6;1951:2;1939:9;1930:7;1926:23;1922:32;1919:52;;;1967:1;1964;1957:12;1919:52;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;2091:452::-;2177:6;2185;2193;2201;2254:3;2242:9;2233:7;2229:23;2225:33;2222:53;;;2271:1;2268;2261:12;2222:53;2307:9;2294:23;2284:33;;2364:2;2353:9;2349:18;2336:32;2326:42;;2415:2;2404:9;2400:18;2387:32;2377:42;;2469:2;2458:9;2454:18;2441:32;2482:31;2507:5;2482:31;:::i;:::-;2091:452;;;;-1:-1:-1;2091:452:90;;-1:-1:-1;;2091:452:90:o;2548:127::-;2609:10;2604:3;2600:20;2597:1;2590:31;2640:4;2637:1;2630:15;2664:4;2661:1;2654:15;2680:253;2752:2;2746:9;2794:4;2782:17;;-1:-1:-1;;;;;2814:34:90;;2850:22;;;2811:62;2808:88;;;2876:18;;:::i;:::-;2912:2;2905:22;2680:253;:::o;2938:275::-;3009:2;3003:9;3074:2;3055:13;;-1:-1:-1;;3051:27:90;3039:40;;-1:-1:-1;;;;;3094:34:90;;3130:22;;;3091:62;3088:88;;;3156:18;;:::i;:::-;3192:2;3185:22;2938:275;;-1:-1:-1;2938:275:90:o;3218:183::-;3278:4;-1:-1:-1;;;;;3303:6:90;3300:30;3297:56;;;3333:18;;:::i;:::-;-1:-1:-1;3378:1:90;3374:14;3390:4;3370:25;;3218:183::o;3406:668::-;3460:5;3513:3;3506:4;3498:6;3494:17;3490:27;3480:55;;3531:1;3528;3521:12;3480:55;3567:6;3554:20;3593:4;3617:60;3633:43;3673:2;3633:43;:::i;:::-;3617:60;:::i;:::-;3699:3;3723:2;3718:3;3711:15;3751:4;3746:3;3742:14;3735:21;;3808:4;3802:2;3799:1;3795:10;3787:6;3783:23;3779:34;3765:48;;3836:3;3828:6;3825:15;3822:35;;;3853:1;3850;3843:12;3822:35;3889:4;3881:6;3877:17;3903:142;3919:6;3914:3;3911:15;3903:142;;;3985:17;;3973:30;;4023:12;;;;3936;;3903:142;;;-1:-1:-1;4063:5:90;3406:668;-1:-1:-1;;;;;;3406:668:90:o;4079:187::-;4128:4;-1:-1:-1;;;;;4153:6:90;4150:30;4147:56;;;4183:18;;:::i;:::-;-1:-1:-1;4249:2:90;4228:15;-1:-1:-1;;4224:29:90;4255:4;4220:40;;4079:187::o;4271:464::-;4314:5;4367:3;4360:4;4352:6;4348:17;4344:27;4334:55;;4385:1;4382;4375:12;4334:55;4421:6;4408:20;4452:49;4468:32;4497:2;4468:32;:::i;4452:49::-;4526:2;4517:7;4510:19;4572:3;4565:4;4560:2;4552:6;4548:15;4544:26;4541:35;4538:55;;;4589:1;4586;4579:12;4538:55;4654:2;4647:4;4639:6;4635:17;4628:4;4619:7;4615:18;4602:55;4702:1;4677:16;;;4695:4;4673:27;4666:38;;;;4681:7;4271:464;-1:-1:-1;;;4271:464:90:o;4740:1551::-;4895:6;4903;4911;4919;4927;4980:3;4968:9;4959:7;4955:23;4951:33;4948:53;;;4997:1;4994;4987:12;4948:53;5033:9;5020:23;5010:33;;5062:2;5115;5104:9;5100:18;5087:32;-1:-1:-1;;;;;5179:2:90;5171:6;5168:14;5165:34;;;5195:1;5192;5185:12;5165:34;5233:6;5222:9;5218:22;5208:32;;5278:7;5271:4;5267:2;5263:13;5259:27;5249:55;;5300:1;5297;5290:12;5249:55;5336:2;5323:16;5359:60;5375:43;5415:2;5375:43;:::i;5359:60::-;5453:15;;;5535:1;5531:10;;;;5523:19;;5519:28;;;5484:12;;;;5559:19;;;5556:39;;;5591:1;5588;5581:12;5556:39;5615:11;;;;5635:217;5651:6;5646:3;5643:15;5635:217;;;5731:3;5718:17;5748:31;5773:5;5748:31;:::i;:::-;5792:18;;5668:12;;;;5830;;;;5635:217;;;5871:5;-1:-1:-1;;;5929:2:90;5914:18;;5901:32;;-1:-1:-1;5945:16:90;;;5942:36;;;5974:1;5971;5964:12;5942:36;5997:63;6052:7;6041:8;6030:9;6026:24;5997:63;:::i;:::-;5987:73;;6113:2;6102:9;6098:18;6085:32;6069:48;;6142:2;6132:8;6129:16;6126:36;;;6158:1;6155;6148:12;6126:36;;;6181:52;6225:7;6214:8;6203:9;6199:24;6181:52;:::i;:::-;4740:1551;;;;-1:-1:-1;4740:1551:90;;6280:3;6265:19;6252:33;;4740:1551;-1:-1:-1;;;4740:1551:90:o;6296:439::-;6349:3;6387:5;6381:12;6414:6;6409:3;6402:19;6440:4;6469;6464:3;6460:14;6453:21;;6508:4;6501:5;6497:16;6531:1;6541:169;6555:6;6552:1;6549:13;6541:169;;;6616:13;;6604:26;;6650:12;;;;6685:15;;;;6577:1;6570:9;6541:169;;;-1:-1:-1;6726:3:90;;6296:439;-1:-1:-1;;;;;6296:439:90:o;6740:261::-;6919:2;6908:9;6901:21;6882:4;6939:56;6991:2;6980:9;6976:18;6968:6;6939:56;:::i;7006:248::-;7074:6;7082;7135:2;7123:9;7114:7;7110:23;7106:32;7103:52;;;7151:1;7148;7141:12;7103:52;-1:-1:-1;;7174:23:90;;;7244:2;7229:18;;;7216:32;;-1:-1:-1;7006:248:90:o;7259:315::-;7327:6;7335;7388:2;7376:9;7367:7;7363:23;7359:32;7356:52;;;7404:1;7401;7394:12;7356:52;7440:9;7427:23;7417:33;;7500:2;7489:9;7485:18;7472:32;7513:31;7538:5;7513:31;:::i;:::-;7563:5;7553:15;;;7259:315;;;;;:::o;7832:456::-;7909:6;7917;7925;7978:2;7966:9;7957:7;7953:23;7949:32;7946:52;;;7994:1;7991;7984:12;7946:52;8033:9;8020:23;8052:31;8077:5;8052:31;:::i;:::-;8102:5;-1:-1:-1;8154:2:90;8139:18;;8126:32;;-1:-1:-1;8210:2:90;8195:18;;8182:32;8223:33;8182:32;8223:33;:::i;:::-;8275:7;8265:17;;;7832:456;;;;;:::o;8293:367::-;8356:8;8366:6;8420:3;8413:4;8405:6;8401:17;8397:27;8387:55;;8438:1;8435;8428:12;8387:55;-1:-1:-1;8461:20:90;;-1:-1:-1;;;;;8493:30:90;;8490:50;;;8536:1;8533;8526:12;8490:50;8573:4;8565:6;8561:17;8549:29;;8633:3;8626:4;8616:6;8613:1;8609:14;8601:6;8597:27;8593:38;8590:47;8587:67;;;8650:1;8647;8640:12;8587:67;8293:367;;;;;:::o;8665:347::-;8716:8;8726:6;8780:3;8773:4;8765:6;8761:17;8757:27;8747:55;;8798:1;8795;8788:12;8747:55;-1:-1:-1;8821:20:90;;-1:-1:-1;;;;;8853:30:90;;8850:50;;;8896:1;8893;8886:12;8850:50;8933:4;8925:6;8921:17;8909:29;;8985:3;8978:4;8969:6;8961;8957:19;8953:30;8950:39;8947:59;;;9002:1;8999;8992:12;9017:1338;9177:6;9185;9193;9201;9209;9217;9225;9233;9286:3;9274:9;9265:7;9261:23;9257:33;9254:53;;;9303:1;9300;9293:12;9254:53;9342:9;9329:23;9361:31;9386:5;9361:31;:::i;:::-;9411:5;-1:-1:-1;9468:2:90;9453:18;;9440:32;9481:33;9440:32;9481:33;:::i;:::-;9533:7;-1:-1:-1;9591:2:90;9576:18;;9563:32;-1:-1:-1;;;;;9644:14:90;;;9641:34;;;9671:1;9668;9661:12;9641:34;9710:70;9772:7;9763:6;9752:9;9748:22;9710:70;:::i;:::-;9799:8;;-1:-1:-1;9684:96:90;-1:-1:-1;9887:2:90;9872:18;;9859:32;;-1:-1:-1;9903:16:90;;;9900:36;;;9932:1;9929;9922:12;9900:36;9971:72;10035:7;10024:8;10013:9;10009:24;9971:72;:::i;:::-;10062:8;;-1:-1:-1;9945:98:90;-1:-1:-1;10150:3:90;10135:19;;10122:33;;-1:-1:-1;10167:16:90;;;10164:36;;;10196:1;10193;10186:12;10164:36;;10235:60;10287:7;10276:8;10265:9;10261:24;10235:60;:::i;:::-;9017:1338;;;;-1:-1:-1;9017:1338:90;;-1:-1:-1;9017:1338:90;;;;;;10314:8;-1:-1:-1;;;9017:1338:90:o;10568:773::-;10690:6;10698;10706;10714;10767:2;10755:9;10746:7;10742:23;10738:32;10735:52;;;10783:1;10780;10773:12;10735:52;10823:9;10810:23;-1:-1:-1;;;;;10893:2:90;10885:6;10882:14;10879:34;;;10909:1;10906;10899:12;10879:34;10948:70;11010:7;11001:6;10990:9;10986:22;10948:70;:::i;:::-;11037:8;;-1:-1:-1;10922:96:90;-1:-1:-1;11125:2:90;11110:18;;11097:32;;-1:-1:-1;11141:16:90;;;11138:36;;;11170:1;11167;11160:12;11138:36;;11209:72;11273:7;11262:8;11251:9;11247:24;11209:72;:::i;:::-;10568:773;;;;-1:-1:-1;11300:8:90;-1:-1:-1;;;;10568:773:90:o;11346:416::-;11439:6;11447;11500:2;11488:9;11479:7;11475:23;11471:32;11468:52;;;11516:1;11513;11506:12;11468:52;11552:9;11539:23;11529:33;;11613:2;11602:9;11598:18;11585:32;-1:-1:-1;;;;;11632:6:90;11629:30;11626:50;;;11672:1;11669;11662:12;11626:50;11695:61;11748:7;11739:6;11728:9;11724:22;11695:61;:::i;:::-;11685:71;;;11346:416;;;;;:::o;11767:118::-;11853:5;11846:13;11839:21;11832:5;11829:32;11819:60;;11875:1;11872;11865:12;11890:382;11955:6;11963;12016:2;12004:9;11995:7;11991:23;11987:32;11984:52;;;12032:1;12029;12022:12;11984:52;12071:9;12058:23;12090:31;12115:5;12090:31;:::i;:::-;12140:5;-1:-1:-1;12197:2:90;12182:18;;12169:32;12210:30;12169:32;12210:30;:::i;12277:348::-;12361:6;12414:2;12402:9;12393:7;12389:23;12385:32;12382:52;;;12430:1;12427;12420:12;12382:52;12470:9;12457:23;-1:-1:-1;;;;;12495:6:90;12492:30;12489:50;;;12535:1;12532;12525:12;12489:50;12558:61;12611:7;12602:6;12591:9;12587:22;12558:61;:::i;12630:475::-;12678:3;12709;12763;12756:5;12752:15;12790:5;12813:1;12823:256;12837:4;12834:1;12831:11;12823:256;;;12906:5;12900:4;12896:16;12891:3;12884:29;12934:38;12967:4;12958:6;12952:13;12934:38;:::i;:::-;12995:4;13057:12;;;;12926:46;;-1:-1:-1;13022:15:90;;;;;12857:1;12850:9;12823:256;;;-1:-1:-1;13095:4:90;;12630:475;-1:-1:-1;;;;;12630:475:90:o;13110:465::-;13163:3;13201:5;13195:12;13228:6;13223:3;13216:19;13254:4;13283;13278:3;13274:14;13267:21;;13322:4;13315:5;13311:16;13345:1;13355:195;13369:6;13366:1;13363:13;13355:195;;;13434:13;;-1:-1:-1;;;;;13430:39:90;13418:52;;13490:12;;;;13525:15;;;;13466:1;13384:9;13355:195;;13580:598;13632:3;13663;13695:5;13689:12;13722:6;13717:3;13710:19;13748:4;13777;13772:3;13768:14;13761:21;;13835:4;13825:6;13822:1;13818:14;13811:5;13807:26;13803:37;13874:4;13867:5;13863:16;13897:1;13907:245;13921:6;13918:1;13915:13;13907:245;;;14008:2;14004:7;13996:5;13990:4;13986:16;13982:30;13977:3;13970:43;14034:38;14067:4;14058:6;14052:13;14034:38;:::i;:::-;14130:12;;;;14026:46;-1:-1:-1;14095:15:90;;;;13943:1;13936:9;13907:245;;;-1:-1:-1;14168:4:90;;13580:598;-1:-1:-1;;;;;;;13580:598:90:o;14638:1263::-;14690:3;14734:5;14728:12;14761:4;14756:3;14749:17;14787:53;14834:4;14829:3;14825:14;14811:12;14787:53;:::i;:::-;14775:65;;14888:4;14881:5;14877:16;14871:23;14936:3;14930:4;14926:14;14919:4;14914:3;14910:14;14903:38;14964:39;14998:4;14982:14;14964:39;:::i;:::-;14950:53;;;15051:4;15044:5;15040:16;15034:23;15101:3;15093:6;15089:16;15082:4;15077:3;15073:14;15066:40;15129:52;15174:6;15158:14;15129:52;:::i;:::-;15115:66;;;15229:4;15222:5;15218:16;15212:23;15279:3;15271:6;15267:16;15260:4;15255:3;15251:14;15244:40;15307:51;15351:6;15335:14;15307:51;:::i;:::-;15293:65;;;15406:4;15399:5;15395:16;15389:23;15456:3;15448:6;15444:16;15437:4;15432:3;15428:14;15421:40;15484:52;15529:6;15513:14;15484:52;:::i;:::-;15470:66;;;15584:4;15577:5;15573:16;15567:23;15634:3;15626:6;15622:16;15615:4;15610:3;15606:14;15599:40;15662:51;15706:6;15690:14;15662:51;:::i;:::-;15648:65;;;15761:4;15754:5;15750:16;15744:23;15811:3;15803:6;15799:16;15792:4;15787:3;15783:14;15776:40;15832:63;15888:6;15872:14;15832:63;:::i;:::-;15825:70;14638:1263;-1:-1:-1;;;;;14638:1263:90:o;15906:849::-;16104:4;16133:2;16173;16162:9;16158:18;16203:2;16192:9;16185:21;16226:6;16261;16255:13;16292:6;16284;16277:22;16330:2;16319:9;16315:18;16308:25;;16392:2;16382:6;16379:1;16375:14;16364:9;16360:30;16356:39;16342:53;;16430:2;16422:6;16418:15;16451:1;16461:265;16475:6;16472:1;16469:13;16461:265;;;16568:2;16564:7;16552:9;16544:6;16540:22;16536:36;16531:3;16524:49;16596:50;16639:6;16630;16624:13;16596:50;:::i;:::-;16586:60;-1:-1:-1;16704:12:90;;;;16669:15;;;;16497:1;16490:9;16461:265;;;-1:-1:-1;16743:6:90;;15906:849;-1:-1:-1;;;;;;;15906:849:90:o;16760:266::-;16945:2;16934:9;16927:21;16908:4;16965:55;17016:2;17005:9;17001:18;16993:6;16965:55;:::i;17031:388::-;17099:6;17107;17160:2;17148:9;17139:7;17135:23;17131:32;17128:52;;;17176:1;17173;17166:12;17128:52;17215:9;17202:23;17234:31;17259:5;17234:31;:::i;:::-;17284:5;-1:-1:-1;17341:2:90;17326:18;;17313:32;17354:33;17313:32;17354:33;:::i;17424:261::-;17603:2;17592:9;17585:21;17566:4;17623:56;17675:2;17664:9;17660:18;17652:6;17623:56;:::i;17690:823::-;17796:6;17804;17812;17820;17828;17836;17889:3;17877:9;17868:7;17864:23;17860:33;17857:53;;;17906:1;17903;17896:12;17857:53;17945:9;17932:23;17964:31;17989:5;17964:31;:::i;:::-;18014:5;-1:-1:-1;18071:2:90;18056:18;;18043:32;18084:33;18043:32;18084:33;:::i;:::-;18136:7;-1:-1:-1;18190:2:90;18175:18;;18162:32;;-1:-1:-1;18241:2:90;18226:18;;18213:32;;-1:-1:-1;18296:3:90;18281:19;;18268:33;-1:-1:-1;;;;;18313:30:90;;18310:50;;;18356:1;18353;18346:12;18310:50;18395:58;18445:7;18436:6;18425:9;18421:22;18395:58;:::i;:::-;17690:823;;;;-1:-1:-1;17690:823:90;;-1:-1:-1;17690:823:90;;18472:8;;17690:823;-1:-1:-1;;;17690:823:90:o;18518:380::-;18597:1;18593:12;;;;18640;;;18661:61;;18715:4;18707:6;18703:17;18693:27;;18661:61;18768:2;18760:6;18757:14;18737:18;18734:38;18731:161;;18814:10;18809:3;18805:20;18802:1;18795:31;18849:4;18846:1;18839:15;18877:4;18874:1;18867:15;18903:474;19165:30;19160:3;19153:43;19135:3;19225:6;19219:13;19280:6;19273:4;19265:6;19261:17;19256:2;19251:3;19247:12;19241:46;19351:1;19310:16;;19328:2;19306:25;19340:13;;;-1:-1:-1;19306:25:90;18903:474;-1:-1:-1;18903:474:90:o;19382:127::-;19443:10;19438:3;19434:20;19431:1;19424:31;19474:4;19471:1;19464:15;19498:4;19495:1;19488:15;19514:127;19575:10;19570:3;19566:20;19563:1;19556:31;19606:4;19603:1;19596:15;19630:4;19627:1;19620:15;19646:168;19719:9;;;19750;;19767:15;;;19761:22;;19747:37;19737:71;;19788:18;;:::i;19819:127::-;19880:10;19875:3;19871:20;19868:1;19861:31;19911:4;19908:1;19901:15;19935:4;19932:1;19925:15;19951:120;19991:1;20017;20007:35;;20022:18;;:::i;:::-;-1:-1:-1;20056:9:90;;19951:120::o;20076:628::-;20381:2;20370:9;20363:21;20344:4;20407:56;20459:2;20448:9;20444:18;20436:6;20407:56;:::i;:::-;20511:9;20503:6;20499:22;20494:2;20483:9;20479:18;20472:50;20545:44;20582:6;20574;20545:44;:::i;:::-;20531:58;;20637:9;20629:6;20625:22;20620:2;20609:9;20605:18;20598:50;20665:33;20691:6;20683;20665:33;:::i;:::-;20657:41;20076:628;-1:-1:-1;;;;;;20076:628:90:o;20709:184::-;20779:6;20832:2;20820:9;20811:7;20807:23;20803:32;20800:52;;;20848:1;20845;20838:12;20800:52;-1:-1:-1;20871:16:90;;20709:184;-1:-1:-1;20709:184:90:o;21710:125::-;21775:9;;;21796:10;;;21793:36;;;21809:18;;:::i;22220:251::-;22290:6;22343:2;22331:9;22322:7;22318:23;22314:32;22311:52;;;22359:1;22356;22349:12;22311:52;22391:9;22385:16;22410:31;22435:5;22410:31;:::i;23072:245::-;23139:6;23192:2;23180:9;23171:7;23167:23;23163:32;23160:52;;;23208:1;23205;23198:12;23160:52;23240:9;23234:16;23259:28;23281:5;23259:28;:::i;23322:128::-;23389:9;;;23410:11;;;23407:37;;;23424:18;;:::i;23725:135::-;23764:3;23785:17;;;23782:43;;23805:18;;:::i;:::-;-1:-1:-1;23852:1:90;23841:13;;23725:135::o;23865:112::-;23897:1;23923;23913:35;;23928:18;;:::i;:::-;-1:-1:-1;23962:9:90;;23865:112::o;24625:331::-;24730:9;24741;24783:8;24771:10;24768:24;24765:44;;;24805:1;24802;24795:12;24765:44;24834:6;24824:8;24821:20;24818:40;;;24854:1;24851;24844:12;24818:40;-1:-1:-1;;24880:23:90;;;24925:25;;;;;-1:-1:-1;24625:331:90:o;25771:665::-;25836:5;25889:3;25882:4;25874:6;25870:17;25866:27;25856:55;;25907:1;25904;25897:12;25856:55;25936:6;25930:13;25962:4;25986:60;26002:43;26042:2;26002:43;:::i;25986:60::-;26068:3;26092:2;26087:3;26080:15;26120:4;26115:3;26111:14;26104:21;;26177:4;26171:2;26168:1;26164:10;26156:6;26152:23;26148:34;26134:48;;26205:3;26197:6;26194:15;26191:35;;;26222:1;26219;26212:12;26191:35;26258:4;26250:6;26246:17;26272:135;26288:6;26283:3;26280:15;26272:135;;;26354:10;;26342:23;;26385:12;;;;26305;;26272:135;;26441:461;26495:5;26548:3;26541:4;26533:6;26529:17;26525:27;26515:55;;26566:1;26563;26556:12;26515:55;26595:6;26589:13;26626:49;26642:32;26671:2;26642:32;:::i;26626:49::-;26700:2;26691:7;26684:19;26746:3;26739:4;26734:2;26726:6;26722:15;26718:26;26715:35;26712:55;;;26763:1;26760;26753:12;26712:55;26821:2;26814:4;26806:6;26802:17;26795:4;26786:7;26782:18;26776:48;26869:1;26844:16;;;26862:4;26840:27;26833:38;;;;26848:7;26441:461;-1:-1:-1;;;26441:461:90:o;26907:1645::-;27004:6;27035:2;27078;27066:9;27057:7;27053:23;27049:32;27046:52;;;27094:1;27091;27084:12;27046:52;27127:9;27121:16;-1:-1:-1;;;;;27197:2:90;27189:6;27186:14;27183:34;;;27213:1;27210;27203:12;27183:34;27236:22;;;;27292:4;27274:16;;;27270:27;27267:47;;;27310:1;27307;27300:12;27267:47;27336:22;;:::i;:::-;27389:2;27383:9;27417:2;27407:8;27404:16;27401:36;;;27433:1;27430;27423:12;27401:36;27456:17;;27504:4;27496:13;;27492:27;-1:-1:-1;27482:55:90;;27533:1;27530;27523:12;27482:55;27562:2;27556:9;27585:60;27601:43;27641:2;27601:43;:::i;27585:60::-;27679:15;;;27761:1;27757:10;;;;27749:19;;27745:28;;;27710:12;;;;27785:19;;;27782:39;;;27817:1;27814;27807:12;27782:39;27841:11;;;;27861:216;27877:6;27872:3;27869:15;27861:216;;;27952:3;27946:10;27969:33;27994:7;27969:33;:::i;:::-;28015:20;;27894:12;;;;28055;;;;27861:216;;;28086:20;;-1:-1:-1;;;28137:11:90;;;28131:18;28161:16;;;28158:36;;;28190:1;28187;28180:12;28158:36;28226:67;28285:7;28274:8;28270:2;28266:17;28226:67;:::i;:::-;28221:2;28214:5;28210:14;28203:91;;28333:2;28329;28325:11;28319:18;28303:34;;28362:2;28352:8;28349:16;28346:36;;;28378:1;28375;28368:12;28346:36;28414:56;28462:7;28451:8;28447:2;28443:17;28414:56;:::i;:::-;28409:2;28402:5;28398:14;28391:80;28517:2;28513;28509:11;28503:18;28498:2;28491:5;28487:14;28480:42;28541:5;28531:15;;;;;;26907:1645;;;;:::o;28816:561::-;-1:-1:-1;;;;;29113:15:90;;;29095:34;;29165:15;;29160:2;29145:18;;29138:43;29212:2;29197:18;;29190:34;;;29255:2;29240:18;;29233:34;;;29075:3;29298;29283:19;;29276:32;;;29038:4;;29325:46;;29351:19;;29343:6;29325:46;:::i;:::-;29317:54;28816:561;-1:-1:-1;;;;;;;28816:561:90:o;29648:306::-;29724:6;29732;29785:2;29773:9;29764:7;29760:23;29756:32;29753:52;;;29801:1;29798;29791:12;29753:52;29833:9;29827:16;29852:28;29874:5;29852:28;:::i;:::-;29944:2;29929:18;;;;29923:25;29899:5;;29923:25;;-1:-1:-1;;;29648:306:90:o;30212:136::-;30251:3;30279:5;30269:39;;30288:18;;:::i;:::-;-1:-1:-1;;;30324:18:90;;30212:136::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "Will()": "535e9891",
        "allMembersOf(uint256)": "eef2e757",
        "asRootValuation(uint256,uint256)": "7f33d800",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "burn(uint256,uint256)": "b390c0ab",
        "burnPath(uint256,uint256)": "f039a733",
        "calculateUserTargetedPreferenceAmount(uint256,uint256,uint256,address)": "0ffd3910",
        "control(uint256)": "7d11e682",
        "createEndpointForOwner(uint256,address)": "45bbbf84",
        "executionAddress()": "78adc790",
        "getAllNodesForRoot(address,address)": "f87cc6b3",
        "getChangePrevalence(uint256,uint256)": "1a61eda6",
        "getChildrenOf(uint256)": "99f45689",
        "getFidPath(uint256)": "f6355a56",
        "getMembraneOf(uint256)": "7e44bffe",
        "getNodeData(uint256,address)": "a6bfbc20",
        "getNodes(uint256[])": "a5541c84",
        "getParentOf(uint256)": "13e75206",
        "getUserNodeSignals(address,uint256)": "150d503d",
        "inParentDenomination(uint256,uint256)": "1e9b388d",
        "inflationOf(uint256)": "765063e5",
        "initSelfControl()": "68dc2747",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isMember(address,uint256)": "85752d03",
        "localizeEndpoint(address,uint256,address)": "28ca8e26",
        "membershipEnforce(address,uint256)": "62593f60",
        "membershipID(uint256)": "f77914c3",
        "mint(uint256,uint256)": "1b2ef1ca",
        "mintInflation(uint256)": "67c394fb",
        "mintMembership(uint256)": "0d78d0c1",
        "mintPath(uint256,uint256)": "791ddaf9",
        "name()": "06fdde03",
        "options(bytes32,uint256)": "20f94427",
        "redistribute(uint256)": "a0ce552d",
        "redistributePath(uint256)": "a0762253",
        "resignal(uint256,address)": "1fae703b",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "sendSignal(uint256,uint256[])": "5b4a26ed",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setControl(address)": "5ac8260c",
        "spawnNode(uint256)": "bfad25e5",
        "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": "114b6e49",
        "spawnRootNode(address)": "af1b55b0",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "taxPolicyPreference(address,uint256)": "1f017841",
        "toAddress(uint256)": "e0051aa9",
        "toID(address)": "0f336348",
        "totalSupply(uint256)": "bd85b039",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Execution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Membrane\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountBalanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadLen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseOrNonFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BurnE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSkip\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Endpoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteSign\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembershipOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembraneNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"No\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoControl\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSoup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTimeDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Noise\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoiseNotVoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNodeMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResignalMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignalOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetIsRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unautorised\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unqualified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnregisteredFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsoundMembership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isControled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"expressedOption\",\"type\":\"bytes32\"}],\"name\":\"ConfigSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"CreatedEndpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldInflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MembershipMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMembrane\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMembrane\",\"type\":\"uint256\"}],\"name\":\"MembraneChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membraneId\",\"type\":\"uint256\"}],\"name\":\"MembraneSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootNodeId\",\"type\":\"uint256\"}],\"name\":\"NewRootNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"Resignaled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AgencyLocus\",\"type\":\"address\"}],\"name\":\"SelfControlAtAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SharesGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"UserNodeSignal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Will\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"allMembersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"asRootValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topVal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserTargetedPreferenceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"control\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createEndpointForOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"endpointAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userIfAny\",\"type\":\"address\"}],\"name\":\"getAllNodesForRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal_\",\"type\":\"uint256\"}],\"name\":\"getChangePrevalence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getChildrenOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getFidPath\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getMembraneOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNodeData\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState\",\"name\":\"nodeData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nodeIds\",\"type\":\"uint256[]\"}],\"name\":\"getNodes\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getParentOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"node_\",\"type\":\"uint256\"}],\"name\":\"getUserNodeSignals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"inParentDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inParentVal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"inflationOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initSelfControl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whoabout_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"whereabout_\",\"type\":\"uint256\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"endpoint_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endpointParent_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"localizeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipEnforce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"s\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"mintInflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"mintMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mintPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"NodeXUserXValue\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valueAtTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistributePath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originator\",\"type\":\"address\"}],\"name\":\"resignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"sendSignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"spawnNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances_\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"meta_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"inflationRate_\",\"type\":\"uint256\"}],\"name\":\"spawnNodeWithMembrane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fungible20_\",\"type\":\"address\"}],\"name\":\"spawnRootNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"taxRate_\",\"type\":\"uint256\"}],\"name\":\"taxPolicyPreference\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"toAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"toID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"parseb\",\"errors\":{\"AccountBalanceOverflow()\":[{\"details\":\"The recipient's balance has overflowed.\"}],\"ArrayLengthsMismatch()\":[{\"details\":\"The lengths of the input arrays are not the same.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"NotOwnerNorApproved()\":[{\"details\":\"Only the token owner or an approved account can manage the tokens.\"}],\"TransferToNonERC1155ReceiverImplementer()\":[{\"details\":\"Cannot safely transfer to a contract that does not implement the ERC1155Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Cannot mint or transfer to the zero address.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Emitted when `amounts` of token `ids` are transferred from `from` to `to` by `operator`.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `amount` of token `id` is transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the Uniform Resource Identifier (URI) for token `id` is updated to `value`. This event is not used in the base contract. You may need to emit this event depending on your URI logic. See: https://eips.ethereum.org/EIPS/eip-1155#metadata\"}},\"kind\":\"dev\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"params\":{\"amount\":\"how many of to price\",\"target_\":\"target node and its context token\"}},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of `id` owned by `owner`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length.\"},\"burn(uint256,uint256)\":{\"params\":{\"amount_\":\"amount to burn\",\"fid_\":\"id of node\"}},\"createEndpointForOwner(uint256,address)\":{\"params\":{\"nodeId_\":\"id of context node\",\"owner\":\"address of agent that will control the endpoint\"},\"returns\":{\"endpointAddress\":\"address of created endpoint\"}},\"getFidPath(uint256)\":{\"params\":{\"fid_\":\"target fid to trace path to from root\"},\"returns\":{\"fids\":\"lineage in chronologic order\"}},\"inParentDenomination(uint256,uint256)\":{\"params\":{\"amt_\":\"how many of to price\",\"id_\":\"target node by id and its context token\"},\"returns\":{\"inParentVal\":\"max price of inputs at current minted inflation\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns whether `operator` is approved to manage the tokens of `owner`.\"},\"isMember(address,uint256)\":{\"params\":{\"whereabout_\":\"you abouting about where exactly\",\"whoabout_\":\"you care about them dont you\"}},\"mint(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"fid_\":\"id to target for mint of kind\"}},\"mintInflation(uint256)\":{\"params\":{\"node\":\"identifier of node context\"}},\"mintMembership(uint256)\":{\"params\":{\"fid_\":\"node for which to mint membership\"}},\"mintPath(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"target_\":\"id to target for mint of kind\"}},\"redistribute(uint256)\":{\"params\":{\"nodeId_\":\"redistribution target group\"}},\"redistributePath(uint256)\":{\"params\":{\"nodeId_\":\"target node to actualize path to and mint inflation for\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event.\"},\"setControl(address)\":{\"params\":{\"newController\":\"address of new controller\"}},\"spawnNode(uint256)\":{\"params\":{\"fid_\":\"context node id\"}},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"params\":{\"balances_\":\"array of required balances for each token\",\"fid_\":\"context (parent) node\",\"inflationRate_\":\"rate for new Node token shares in gwei per second\",\"meta_\":\"metadata string (e.g. IPFS hash) for membrane details\",\"tokens_\":\"array of token addresses for membrane conditions\"}},\"spawnRootNode(address)\":{\"params\":{\"fungible20_\":\"address of ERC20 token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas.\"},\"taxPolicyPreference(address,uint256)\":{\"params\":{\"taxRate_\":\"share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"WillWe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"notice\":\"calculates and returns the value of a number of context tokens in terms of its root reserve\"},\"burn(uint256,uint256)\":{\"notice\":\"burn the amount of targeted node id\"},\"createEndpointForOwner(uint256,address)\":{\"notice\":\"creates an external endpoint for an agent in node contextnode owner can be external\"},\"getFidPath(uint256)\":{\"notice\":\"retrieves token path id array from root to target id\"},\"inParentDenomination(uint256,uint256)\":{\"notice\":\"calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller\"},\"isMember(address,uint256)\":{\"notice\":\"checks if provided address who is member in where id\"},\"mint(uint256,uint256)\":{\"notice\":\"mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve\"},\"mintInflation(uint256)\":{\"notice\":\"mints the inflation of a specific context tokenincreases ratio of reserve to context denomination\"},\"mintMembership(uint256)\":{\"notice\":\"mints membership to calling address if it satisfies membership conditions\"},\"mintPath(uint256,uint256)\":{\"notice\":\"mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root\"},\"options(bytes32,uint256)\":{\"notice\":\"stores a users option for change and node state [ wanted value, lastExpressedAt ]\"},\"redistribute(uint256)\":{\"notice\":\"redistributes eligible acummulated inflationary flows\"},\"redistributePath(uint256)\":{\"notice\":\"redistributes eligible amounts to all nodes on target path and mints inflation for target\"},\"setControl(address)\":{\"notice\":\"sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function\"},\"spawnNode(uint256)\":{\"notice\":\"creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context\"},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"notice\":\"spawns Node with an enforceable membership mechanism and creates new membrane\"},\"spawnRootNode(address)\":{\"notice\":\"spawns core Node for a tokenacts as port for token valuenests all token specific contexts\"}},\"notice\":\"Experimental. Do not use.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WillWe.sol\":\"WillWe\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":@solady/=lib/solady/src/\",\":Will/=lib/Will/\",\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/\",\":src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/\",\":src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/\",\":src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/\",\":will/contracts/=lib/will/packages/contracts/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solady/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581\",\"dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9\"]},\"src/Fun.sol\":{\"keccak256\":\"0x527e943261c72b2d17dae29107aba8e6e8d3f59df11e47ee8bc954fc58393ce9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da4957606837f7130477b19ee6d80203c77a5da194cda995784d8baef5129de3\",\"dweb:/ipfs/QmSjiHm9dfVUr25Ni1H3sUdTWrTncC52pkShYsbqZX58xV\"]},\"src/Fungido.sol\":{\"keccak256\":\"0xc4bd61ff3d24d8e95eadfd12bd84f21fe7b03ce9a8575af3a174498a00fd4df8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://39da7ca34495113d14732684e64917b5ebe6f87b7e0133c9263e019eaa66a5d6\",\"dweb:/ipfs/Qmb3NjG49YWzPoDctfdDbepUj4oY61iyQpP1LtHHtXg6ci\"]},\"src/WillWe.sol\":{\"keccak256\":\"0x9ba7fd8ca0262fb5443502964daa25e1fd34e4115ff293d72c2e3cd5e89af1fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae398d069ee07a21281dc8d27130c60a006b2629decc0372c075454774bfaad6\",\"dweb:/ipfs/QmTc3Wy5BTM868GEnwTstoETbxJtXfbtURejLyDEHfoBgW\"]},\"src/components/PureUtils.sol\":{\"keccak256\":\"0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee\",\"dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC\"]},\"src/interfaces/IExecution.sol\":{\"keccak256\":\"0xfe2c9fa95ff38cf82758c9f8bce0db94478f0d00e0f6a1b8599bda164f00cb3a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c4ce5a56f33097660ffba232cf953cfe435ce754194a37c1c2b43c55cb2705b\",\"dweb:/ipfs/QmXeYC4yykwmSByF2Ge4biYFqe3jB7G31JptYjE3rRuPmb\"]},\"src/interfaces/IMembrane.sol\":{\"keccak256\":\"0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25\",\"dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "Execution",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "Membrane",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccountBalanceOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ArrayLengthsMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BadLen"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BaseOrNonFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BurnE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotSkip"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Disabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EOA"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Endpoint"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExecutionOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "IncompleteSign"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientAmt"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembershipOp"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembraneNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MintE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "No"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoControl"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoSoup"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoTimeDelta"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeAlreadyExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Noise"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoiseNotVoice"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotNodeMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotOwnerNorApproved"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Overreach"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ResignalMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "RootExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SignalOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TargetIsRoot"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToNonERC1155ReceiverImplementer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToZeroAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unautorised"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unqualified"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnregisteredFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsoundMembership"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsupportedTransfer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "isControled"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Burned",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "expressedOption",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ConfigSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CreatedEndpoint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "oldInflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newInflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationRateChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "userAddress",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MemberRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "who",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MembershipMinted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "previousMembrane",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newMembrane",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "membraneId",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Minted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "creator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "rootNodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewRootNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Resignaled",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "AgencyLocus",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SelfControlAtAddress",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SharesGenerated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UserNodeSignal",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "Will",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allMembersOf",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "asRootValuation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "result",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "owners",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "balances",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "topVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnPath"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "childId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateUserTargetedPreferenceAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "control",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createEndpointForOwner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "endpointAddress",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "executionAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "userIfAny",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllNodesForRoot",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChangePrevalence",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChildrenOf",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFidPath",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "fids",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMembraneOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodeData",
                    "outputs": [
                        {
                            "internalType": "struct NodeState",
                            "name": "nodeData",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "nodeIds",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodes",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getParentOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "node_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUserNodeSignals",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amt_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inParentDenomination",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inParentVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inflationOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initSelfControl",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "whoabout_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "whereabout_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isMember",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "endpointParent_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "localizeEndpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "membershipEnforce",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "s",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "membershipID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "node",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintInflation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintMembership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintPath"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "NodeXUserXValue",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "options",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "valueAtTime",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistribute",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistributePath",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "originator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "resignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "sendSignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newController",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setControl"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address[]",
                            "name": "tokens_",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balances_",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "string",
                            "name": "meta_",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNodeWithMembrane",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fungible20_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnRootNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "fID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootToken_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "taxRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "taxPolicyPreference"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "x",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "x",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "params": {
                            "amount": "how many of to price",
                            "target_": "target node and its context token"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "Returns the amount of `id` owned by `owner`."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length."
                    },
                    "burn(uint256,uint256)": {
                        "params": {
                            "amount_": "amount to burn",
                            "fid_": "id of node"
                        }
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "params": {
                            "nodeId_": "id of context node",
                            "owner": "address of agent that will control the endpoint"
                        },
                        "returns": {
                            "endpointAddress": "address of created endpoint"
                        }
                    },
                    "getFidPath(uint256)": {
                        "params": {
                            "fid_": "target fid to trace path to from root"
                        },
                        "returns": {
                            "fids": "lineage in chronologic order"
                        }
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "params": {
                            "amt_": "how many of to price",
                            "id_": "target node by id and its context token"
                        },
                        "returns": {
                            "inParentVal": "max price of inputs at current minted inflation"
                        }
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "Returns whether `operator` is approved to manage the tokens of `owner`."
                    },
                    "isMember(address,uint256)": {
                        "params": {
                            "whereabout_": "you abouting about where exactly",
                            "whoabout_": "you care about them dont you"
                        }
                    },
                    "mint(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "fid_": "id to target for mint of kind"
                        }
                    },
                    "mintInflation(uint256)": {
                        "params": {
                            "node": "identifier of node context"
                        }
                    },
                    "mintMembership(uint256)": {
                        "params": {
                            "fid_": "node for which to mint membership"
                        }
                    },
                    "mintPath(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "target_": "id to target for mint of kind"
                        }
                    },
                    "redistribute(uint256)": {
                        "params": {
                            "nodeId_": "redistribution target group"
                        }
                    },
                    "redistributePath(uint256)": {
                        "params": {
                            "nodeId_": "target node to actualize path to and mint inflation for"
                        }
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event."
                    },
                    "setControl(address)": {
                        "params": {
                            "newController": "address of new controller"
                        }
                    },
                    "spawnNode(uint256)": {
                        "params": {
                            "fid_": "context node id"
                        }
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "params": {
                            "balances_": "array of required balances for each token",
                            "fid_": "context (parent) node",
                            "inflationRate_": "rate for new Node token shares in gwei per second",
                            "meta_": "metadata string (e.g. IPFS hash) for membrane details",
                            "tokens_": "array of token addresses for membrane conditions"
                        }
                    },
                    "spawnRootNode(address)": {
                        "params": {
                            "fungible20_": "address of ERC20 token"
                        }
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas."
                    },
                    "taxPolicyPreference(address,uint256)": {
                        "params": {
                            "taxRate_": "share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "notice": "calculates and returns the value of a number of context tokens in terms of its root reserve"
                    },
                    "burn(uint256,uint256)": {
                        "notice": "burn the amount of targeted node id"
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "notice": "creates an external endpoint for an agent in node contextnode owner can be external"
                    },
                    "getFidPath(uint256)": {
                        "notice": "retrieves token path id array from root to target id"
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "notice": "calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller"
                    },
                    "isMember(address,uint256)": {
                        "notice": "checks if provided address who is member in where id"
                    },
                    "mint(uint256,uint256)": {
                        "notice": "mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve"
                    },
                    "mintInflation(uint256)": {
                        "notice": "mints the inflation of a specific context tokenincreases ratio of reserve to context denomination"
                    },
                    "mintMembership(uint256)": {
                        "notice": "mints membership to calling address if it satisfies membership conditions"
                    },
                    "mintPath(uint256,uint256)": {
                        "notice": "mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root"
                    },
                    "options(bytes32,uint256)": {
                        "notice": "stores a users option for change and node state [ wanted value, lastExpressedAt ]"
                    },
                    "redistribute(uint256)": {
                        "notice": "redistributes eligible acummulated inflationary flows"
                    },
                    "redistributePath(uint256)": {
                        "notice": "redistributes eligible amounts to all nodes on target path and mints inflation for target"
                    },
                    "setControl(address)": {
                        "notice": "sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function"
                    },
                    "spawnNode(uint256)": {
                        "notice": "creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context"
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "notice": "spawns Node with an enforceable membership mechanism and creates new membrane"
                    },
                    "spawnRootNode(address)": {
                        "notice": "spawns core Node for a tokenacts as port for token valuenests all token specific contexts"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "@solady/=lib/solady/src/",
                "Will/=lib/Will/",
                "automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
                "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
                "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/",
                "openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "optimism/=lib/optimism/",
                "prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/",
                "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
                "solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "solady/=lib/solady/src/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/",
                "solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/",
                "src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/",
                "src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/",
                "src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/",
                "src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/",
                "will/contracts/=lib/will/packages/contracts/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/WillWe.sol": "WillWe"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
                "urls": [
                    "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
                    "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
                "urls": [
                    "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
                    "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
                "urls": [
                    "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
                    "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
                "urls": [
                    "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
                    "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
                ],
                "license": "MIT"
            },
            "lib/solady/src/tokens/ERC1155.sol": {
                "keccak256": "0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a",
                "urls": [
                    "bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581",
                    "dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9"
                ],
                "license": "MIT"
            },
            "src/Fun.sol": {
                "keccak256": "0x527e943261c72b2d17dae29107aba8e6e8d3f59df11e47ee8bc954fc58393ce9",
                "urls": [
                    "bzz-raw://da4957606837f7130477b19ee6d80203c77a5da194cda995784d8baef5129de3",
                    "dweb:/ipfs/QmSjiHm9dfVUr25Ni1H3sUdTWrTncC52pkShYsbqZX58xV"
                ],
                "license": "UNLICENSED"
            },
            "src/Fungido.sol": {
                "keccak256": "0xc4bd61ff3d24d8e95eadfd12bd84f21fe7b03ce9a8575af3a174498a00fd4df8",
                "urls": [
                    "bzz-raw://39da7ca34495113d14732684e64917b5ebe6f87b7e0133c9263e019eaa66a5d6",
                    "dweb:/ipfs/Qmb3NjG49YWzPoDctfdDbepUj4oY61iyQpP1LtHHtXg6ci"
                ],
                "license": "UNLICENSED"
            },
            "src/WillWe.sol": {
                "keccak256": "0x9ba7fd8ca0262fb5443502964daa25e1fd34e4115ff293d72c2e3cd5e89af1fa",
                "urls": [
                    "bzz-raw://ae398d069ee07a21281dc8d27130c60a006b2629decc0372c075454774bfaad6",
                    "dweb:/ipfs/QmTc3Wy5BTM868GEnwTstoETbxJtXfbtURejLyDEHfoBgW"
                ],
                "license": "UNLICENSED"
            },
            "src/components/PureUtils.sol": {
                "keccak256": "0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7",
                "urls": [
                    "bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee",
                    "dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC"
                ],
                "license": "MIT"
            },
            "src/interfaces/IExecution.sol": {
                "keccak256": "0xfe2c9fa95ff38cf82758c9f8bce0db94478f0d00e0f6a1b8599bda164f00cb3a",
                "urls": [
                    "bzz-raw://3c4ce5a56f33097660ffba232cf953cfe435ce754194a37c1c2b43c55cb2705b",
                    "dweb:/ipfs/QmXeYC4yykwmSByF2Ge4biYFqe3jB7G31JptYjE3rRuPmb"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IMembrane.sol": {
                "keccak256": "0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc",
                "urls": [
                    "bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25",
                    "dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 54587,
                "contract": "src/WillWe.sol:WillWe",
                "label": "entityCount",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
            },
            {
                "astId": 54589,
                "contract": "src/WillWe.sol:WillWe",
                "label": "executionAddress",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 54591,
                "contract": "src/WillWe.sol:WillWe",
                "label": "Will",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 54594,
                "contract": "src/WillWe.sol:WillWe",
                "label": "M",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(IMembrane)58386"
            },
            {
                "astId": 54599,
                "contract": "src/WillWe.sol:WillWe",
                "label": "totalSupplyOf",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 54605,
                "contract": "src/WillWe.sol:WillWe",
                "label": "childrenOf",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 54610,
                "contract": "src/WillWe.sol:WillWe",
                "label": "parentOf",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 54617,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inflSec",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 54624,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inUseMembraneId",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
            },
            {
                "astId": 54630,
                "contract": "src/WillWe.sol:WillWe",
                "label": "members",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
            },
            {
                "astId": 54637,
                "contract": "src/WillWe.sol:WillWe",
                "label": "options",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 54642,
                "contract": "src/WillWe.sol:WillWe",
                "label": "taxRate",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 54648,
                "contract": "src/WillWe.sol:WillWe",
                "label": "userNodeSignals",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 54652,
                "contract": "src/WillWe.sol:WillWe",
                "label": "control",
                "offset": 0,
                "slot": "13",
                "type": "t_array(t_address)2_storage"
            },
            {
                "astId": 54654,
                "contract": "src/WillWe.sol:WillWe",
                "label": "impersonatingAddress",
                "offset": 0,
                "slot": "15",
                "type": "t_address"
            },
            {
                "astId": 54656,
                "contract": "src/WillWe.sol:WillWe",
                "label": "name",
                "offset": 0,
                "slot": "16",
                "type": "t_string_storage"
            },
            {
                "astId": 54658,
                "contract": "src/WillWe.sol:WillWe",
                "label": "symbol",
                "offset": 0,
                "slot": "17",
                "type": "t_string_storage"
            },
            {
                "astId": 54660,
                "contract": "src/WillWe.sol:WillWe",
                "label": "useBefore",
                "offset": 0,
                "slot": "18",
                "type": "t_bool"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
                "encoding": "inplace",
                "label": "address[2]",
                "numberOfBytes": "64",
                "base": "t_address"
            },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_array(t_uint256)2_storage": {
                "encoding": "inplace",
                "label": "uint256[2]",
                "numberOfBytes": "64",
                "base": "t_uint256"
            },
            "t_array(t_uint256)3_storage": {
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96",
                "base": "t_uint256"
            },
            "t_array(t_uint256)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32",
                "base": "t_uint256"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(IMembrane)58386": {
                "encoding": "inplace",
                "label": "contract IMembrane",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => address[])",
                "numberOfBytes": "32",
                "value": "t_array(t_address)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[2])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)2_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    },
    "ast": {
        "absolutePath": "src/WillWe.sol",
        "id": 57456,
        "exportedSymbols": {
            "Fun": [
                54563
            ],
            "WillWe": [
                57455
            ]
        },
        "nodeType": "SourceUnit",
        "src": "3372:896:69",
        "nodes": [
            {
                "id": 57357,
                "nodeType": "PragmaDirective",
                "src": "3372:23:69",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".25"
                ]
            },
            {
                "id": 57359,
                "nodeType": "ImportDirective",
                "src": "3397:30:69",
                "nodes": [],
                "absolutePath": "src/Fun.sol",
                "file": "./Fun.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 57456,
                "sourceUnit": 54564,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 57358,
                            "name": "Fun",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54563,
                            "src": "3405:3:69",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 57455,
                "nodeType": "ContractDefinition",
                "src": "3505:762:69",
                "nodes": [
                    {
                        "id": 57374,
                        "nodeType": "FunctionDefinition",
                        "src": "3534:76:69",
                        "nodes": [],
                        "body": {
                            "id": 57373,
                            "nodeType": "Block",
                            "src": "3608:2:69",
                            "nodes": [],
                            "statements": []
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 57369,
                                        "name": "Execution",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 57364,
                                        "src": "3587:9:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 57370,
                                        "name": "Membrane",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 57366,
                                        "src": "3598:8:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 57371,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 57368,
                                    "name": "Fun",
                                    "nameLocations": [
                                        "3583:3:69"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 54563,
                                    "src": "3583:3:69"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3583:24:69"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 57367,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57364,
                                    "mutability": "mutable",
                                    "name": "Execution",
                                    "nameLocation": "3554:9:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57374,
                                    "src": "3546:17:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 57363,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3546:7:69",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 57366,
                                    "mutability": "mutable",
                                    "name": "Membrane",
                                    "nameLocation": "3573:8:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57374,
                                    "src": "3565:16:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 57365,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3565:7:69",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3545:37:69"
                        },
                        "returnParameters": {
                            "id": 57372,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3608:0:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 57390,
                        "nodeType": "FunctionDefinition",
                        "src": "3616:127:69",
                        "nodes": [],
                        "body": {
                            "id": 57389,
                            "nodeType": "Block",
                            "src": "3697:46:69",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 57387,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 57382,
                                            "name": "newID",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57380,
                                            "src": "3707:5:69",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 57385,
                                                    "name": "fid_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 57376,
                                                    "src": "3731:4:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 57383,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "3715:5:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$57455_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 57384,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3721:9:69",
                                                "memberName": "spawnNode",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55065,
                                                "src": "3715:15:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 57386,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3715:21:69",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3707:29:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 57388,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3707:29:69"
                                }
                            ]
                        },
                        "baseFunctions": [
                            55065
                        ],
                        "functionSelector": "bfad25e5",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "spawnNode",
                        "nameLocation": "3625:9:69",
                        "overrides": {
                            "id": 57378,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3664:8:69"
                        },
                        "parameters": {
                            "id": 57377,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57376,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3643:4:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57390,
                                    "src": "3635:12:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57375,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3635:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3634:14:69"
                        },
                        "returnParameters": {
                            "id": 57381,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57380,
                                    "mutability": "mutable",
                                    "name": "newID",
                                    "nameLocation": "3690:5:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57390,
                                    "src": "3682:13:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57379,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3682:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3681:15:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 57403,
                        "nodeType": "FunctionDefinition",
                        "src": "3749:105:69",
                        "nodes": [],
                        "body": {
                            "id": 57402,
                            "nodeType": "Block",
                            "src": "3811:43:69",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 57399,
                                                "name": "fid_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 57392,
                                                "src": "3842:4:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 57396,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "3821:5:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_WillWe_$57455_$",
                                                    "typeString": "type(contract super WillWe)"
                                                }
                                            },
                                            "id": 57398,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3827:14:69",
                                            "memberName": "mintMembership",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 55213,
                                            "src": "3821:20:69",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 57400,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3821:26:69",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 57401,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3821:26:69"
                                }
                            ]
                        },
                        "baseFunctions": [
                            55213
                        ],
                        "functionSelector": "0d78d0c1",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintMembership",
                        "nameLocation": "3758:14:69",
                        "overrides": {
                            "id": 57394,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3802:8:69"
                        },
                        "parameters": {
                            "id": 57393,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57392,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3781:4:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57403,
                                    "src": "3773:12:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57391,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3773:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3772:14:69"
                        },
                        "returnParameters": {
                            "id": 57395,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3811:0:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 57419,
                        "nodeType": "FunctionDefinition",
                        "src": "3860:111:69",
                        "nodes": [],
                        "body": {
                            "id": 57418,
                            "nodeType": "Block",
                            "src": "3929:42:69",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 57414,
                                                "name": "fid_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 57405,
                                                "src": "3950:4:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 57415,
                                                "name": "amount_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 57407,
                                                "src": "3956:7:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 57411,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "3939:5:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_WillWe_$57455_$",
                                                    "typeString": "type(contract super WillWe)"
                                                }
                                            },
                                            "id": 57413,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3945:4:69",
                                            "memberName": "mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 55242,
                                            "src": "3939:10:69",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256,uint256)"
                                            }
                                        },
                                        "id": 57416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3939:25:69",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 57417,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3939:25:69"
                                }
                            ]
                        },
                        "baseFunctions": [
                            55242
                        ],
                        "functionSelector": "1b2ef1ca",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "3869:4:69",
                        "overrides": {
                            "id": 57409,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3920:8:69"
                        },
                        "parameters": {
                            "id": 57408,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57405,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3882:4:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57419,
                                    "src": "3874:12:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57404,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3874:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 57407,
                                    "mutability": "mutable",
                                    "name": "amount_",
                                    "nameLocation": "3896:7:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57419,
                                    "src": "3888:15:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57406,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3888:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3873:31:69"
                        },
                        "returnParameters": {
                            "id": 57410,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3929:0:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 57438,
                        "nodeType": "FunctionDefinition",
                        "src": "3977:145:69",
                        "nodes": [],
                        "body": {
                            "id": 57437,
                            "nodeType": "Block",
                            "src": "4071:51:69",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 57435,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 57429,
                                            "name": "topVal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57427,
                                            "src": "4081:6:69",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 57432,
                                                    "name": "fid_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 57421,
                                                    "src": "4101:4:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                {
                                                    "id": 57433,
                                                    "name": "amount_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 57423,
                                                    "src": "4107:7:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 57430,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "4090:5:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$57455_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 57431,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4096:4:69",
                                                "memberName": "burn",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55424,
                                                "src": "4090:10:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 57434,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4090:25:69",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4081:34:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 57436,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4081:34:69"
                                }
                            ]
                        },
                        "baseFunctions": [
                            55424
                        ],
                        "functionSelector": "b390c0ab",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "burn",
                        "nameLocation": "3986:4:69",
                        "overrides": {
                            "id": 57425,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4037:8:69"
                        },
                        "parameters": {
                            "id": 57424,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57421,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3999:4:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57438,
                                    "src": "3991:12:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57420,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3991:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 57423,
                                    "mutability": "mutable",
                                    "name": "amount_",
                                    "nameLocation": "4013:7:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57438,
                                    "src": "4005:15:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57422,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4005:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3990:31:69"
                        },
                        "returnParameters": {
                            "id": 57428,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57427,
                                    "mutability": "mutable",
                                    "name": "topVal",
                                    "nameLocation": "4063:6:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57438,
                                    "src": "4055:14:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57426,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4055:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4054:16:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 57454,
                        "nodeType": "FunctionDefinition",
                        "src": "4128:137:69",
                        "nodes": [],
                        "body": {
                            "id": 57453,
                            "nodeType": "Block",
                            "src": "4214:51:69",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 57451,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 57446,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57444,
                                            "src": "4224:6:69",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 57449,
                                                    "name": "node",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 57440,
                                                    "src": "4253:4:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 57447,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "4233:5:69",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$57455_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 57448,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4239:13:69",
                                                "memberName": "mintInflation",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55639,
                                                "src": "4233:19:69",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 57450,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4233:25:69",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4224:34:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 57452,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4224:34:69"
                                }
                            ]
                        },
                        "baseFunctions": [
                            55639
                        ],
                        "functionSelector": "67c394fb",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintInflation",
                        "nameLocation": "4137:13:69",
                        "overrides": {
                            "id": 57442,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4180:8:69"
                        },
                        "parameters": {
                            "id": 57441,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57440,
                                    "mutability": "mutable",
                                    "name": "node",
                                    "nameLocation": "4159:4:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57454,
                                    "src": "4151:12:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57439,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4151:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4150:14:69"
                        },
                        "returnParameters": {
                            "id": 57445,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 57444,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "4206:6:69",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 57454,
                                    "src": "4198:14:69",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57443,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4198:7:69",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4197:16:69"
                        },
                        "scope": 57455,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 57361,
                            "name": "Fun",
                            "nameLocations": [
                                "3524:3:69"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54563,
                            "src": "3524:3:69"
                        },
                        "id": 57362,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3524:3:69"
                    }
                ],
                "canonicalName": "WillWe",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 57360,
                    "nodeType": "StructuredDocumentation",
                    "src": "3429:75:69",
                    "text": "@title WillWe\n @author parseb\n @notice Experimental. Do not use."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    57455,
                    54563,
                    56986,
                    57750,
                    46933
                ],
                "name": "WillWe",
                "nameLocation": "3514:6:69",
                "scope": 57456,
                "usedErrors": [
                    46106,
                    46109,
                    46112,
                    46115,
                    46118,
                    46121,
                    53162,
                    53164,
                    53166,
                    53168,
                    53170,
                    53172,
                    53174,
                    53176,
                    53178,
                    53180,
                    53182,
                    54709,
                    54711,
                    54713,
                    54715,
                    54717,
                    54719,
                    54721,
                    54723,
                    54725,
                    54727,
                    54729,
                    54731,
                    54733,
                    54735,
                    54737,
                    54739,
                    54741,
                    54743,
                    54745,
                    54747,
                    54749,
                    54751,
                    54753,
                    54755
                ],
                "usedEvents": [
                    46134,
                    46149,
                    46158,
                    46165,
                    53188,
                    53196,
                    53204,
                    53212,
                    53220,
                    53229,
                    54759,
                    54763,
                    54771,
                    54777,
                    54785,
                    54793,
                    54799,
                    54807,
                    54815,
                    54821
                ]
            }
        ],
        "license": "UNLICENSED"
    },
    "id": 69
}