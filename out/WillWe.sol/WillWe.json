{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "Execution",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "Membrane",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "Will",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allMembersOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "asRootValuation",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "owners",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "balances",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "topVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "calculateUserTargetedPreferenceAmount",
            "inputs": [
                {
                    "name": "childId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "control",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "createEndpointForOwner",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "endpointAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "executionAddress",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAllNodesForRoot",
            "inputs": [
                {
                    "name": "rootAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "userIfAny",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "tuple[]",
                            "internalType": "struct UserSignal[]",
                            "components": [
                                {
                                    "name": "MembraneInflation",
                                    "type": "string[2][]",
                                    "internalType": "string[2][]"
                                },
                                {
                                    "name": "lastRedistSignal",
                                    "type": "string[]",
                                    "internalType": "string[]"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChangePrevalence",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChildrenOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFidPath",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "fids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMembraneOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodeData",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodeData",
                    "type": "tuple",
                    "internalType": "struct NodeState",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "tuple[]",
                            "internalType": "struct UserSignal[]",
                            "components": [
                                {
                                    "name": "MembraneInflation",
                                    "type": "string[2][]",
                                    "internalType": "string[2][]"
                                },
                                {
                                    "name": "lastRedistSignal",
                                    "type": "string[]",
                                    "internalType": "string[]"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodes",
            "inputs": [
                {
                    "name": "nodeIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "tuple[]",
                            "internalType": "struct UserSignal[]",
                            "components": [
                                {
                                    "name": "MembraneInflation",
                                    "type": "string[2][]",
                                    "internalType": "string[2][]"
                                },
                                {
                                    "name": "lastRedistSignal",
                                    "type": "string[]",
                                    "internalType": "string[]"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getParentOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUserNodeSignals",
            "inputs": [
                {
                    "name": "signalOrigin",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "parentNodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "UserNodeSignals",
                    "type": "uint256[2][]",
                    "internalType": "uint256[2][]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inParentDenomination",
            "inputs": [
                {
                    "name": "amt_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "inParentVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inflationOf",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initSelfControl",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isMember",
            "inputs": [
                {
                    "name": "whoabout_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "whereabout_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "localizeEndpoint",
            "inputs": [
                {
                    "name": "endpoint_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "endpointParent_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipEnforce",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "s",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipID",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintInflation",
            "inputs": [
                {
                    "name": "node",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintMembership",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "options",
            "inputs": [
                {
                    "name": "NodeXUserXValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "valueAtTime",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redistribute",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "redistributePath",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "resignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "originator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sendSignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setControl",
            "inputs": [
                {
                    "name": "newController",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNode",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNodeWithMembrane",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokens_",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "balances_",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "meta_",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "inflationRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnRootNode",
            "inputs": [
                {
                    "name": "fungible20_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "fID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "taxPolicyPreference",
            "inputs": [
                {
                    "name": "rootToken_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "taxRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "toAddress",
            "inputs": [
                {
                    "name": "x",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "toID",
            "inputs": [
                {
                    "name": "x",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Burned",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ConfigSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "expressedOption",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CreatedEndpoint",
            "inputs": [
                {
                    "name": "endpoint",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationRateChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "oldInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "inflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MemberRemoved",
            "inputs": [
                {
                    "name": "userAddress",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembershipMinted",
            "inputs": [
                {
                    "name": "who",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "previousMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "membraneId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Minted",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewNode",
            "inputs": [
                {
                    "name": "newId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "creator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewRootNode",
            "inputs": [
                {
                    "name": "rootNodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Resignaled",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SelfControlAtAddress",
            "inputs": [
                {
                    "name": "AgencyLocus",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SharesGenerated",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "UserNodeSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AccountBalanceOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AlreadyMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ArrayLengthsMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BadLen",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BaseOrNonFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BurnE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CannotSkip",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Disabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EOA",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Endpoint",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExecutionOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "IncompleteSign",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientAmt",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientBalance",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembershipOp",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembraneNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MintE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "No",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoControl",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoSoup",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoTimeDelta",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeAlreadyExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Noise",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoiseNotVoice",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotNodeMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotOwnerNorApproved",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Overreach",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ResignalMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "RootExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SignalOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TargetIsRoot",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToNonERC1155ReceiverImplementer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToZeroAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unautorised",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unqualified",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnregisteredFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsoundMembership",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsupportedTransfer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "isControled",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x608060405234801561000f575f80fd5b50604051615eea380380615eea83398101604081905261002e91610201565b5f8052600b60209081526103e87fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7655600180546001600160a01b0319166001600160a01b038516908117909155604080516390ef12cd60e01b81529051859385938593859391926390ef12cd926004808401938290030181865afa1580156100b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100dc9190610232565b600280546001600160a01b03199081166001600160a01b03938416179091556003805490911691831691909117905560408051808201909152600a8152692bb4b6362bb2973c3cbd60b11b6020820152600f9061013990826102ea565b5060408051808201909152600481526315d2531360e21b602082015260109061016290826102ea565b505060118054600160ff19909116811790915580546001600160a01b0319166001600160a01b038516908117909155604051633a8f06ab60e21b815230600482015290915063ea3c1aac906024015f604051808303815f87803b1580156101c7575f80fd5b505af11580156101d9573d5f803e3d5ffd5b50505050505050506103a9565b80516001600160a01b03811681146101fc575f80fd5b919050565b5f8060408385031215610212575f80fd5b61021b836101e6565b9150610229602084016101e6565b90509250929050565b5f60208284031215610242575f80fd5b61024b826101e6565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061027a57607f821691505b60208210810361029857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102e557805f5260205f20601f840160051c810160208510156102c35750805b601f840160051c820191505b818110156102e2575f81556001016102cf565b50505b505050565b81516001600160401b0381111561030357610303610252565b610317816103118454610266565b8461029e565b602080601f83116001811461034a575f84156103335750858301515b5f19600386901b1c1916600185901b1785556103a1565b5f85815260208120601f198616915b8281101561037857888601518255948401946001909101908401610359565b508582101561039557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b615b34806103b65f395ff3fe608060405234801561000f575f80fd5b50600436106102fe575f3560e01c806378adc79011610195578063af1b55b0116100e4578063e985e9c51161009e578063f242432a11610079578063f242432a14610769578063f6355a561461077c578063f77914c31461078f578063f87cc6b3146107a2575f80fd5b8063e985e9c51461070b578063eef2e75714610736578063f039a73314610756575f80fd5b8063af1b55b01461068d578063b29eb75c146106a0578063b390c0ab146106b3578063bd85b039146106c6578063bfad25e5146106e5578063e0051aa9146106f8575f80fd5b806395d89b411161014f578063a0ce552d1161012a578063a0ce552d14610627578063a22cb4651461063a578063a5541c841461064d578063a6bfbc201461066d575f80fd5b806395d89b41146105f957806399f4568914610601578063a076225314610614575f80fd5b806378adc79014610587578063791ddaf91461059a5780637d11e682146105ad5780637e44bffe146105c05780637f33d800146105d357806385752d03146105e6575f80fd5b80631f01784111610251578063535e98911161020b57806362593f60116101e657806362593f601461054657806367c394fb1461055957806368dc27471461056c578063765063e514610574575f80fd5b8063535e98911461050d5780635ac8260c146105205780635b4a26ed14610533575f80fd5b80631f0178411461047657806320f944271461048957806328ca8e261461049c5780632eb2c2d6146104af57806345bbbf84146104c25780634e1273f4146104ed575f80fd5b80630ffd3910116102bc578063150d503d11610297578063150d503d1461041d5780631a61eda61461043d5780631b2ef1ca146104505780631e9b388d14610463575f80fd5b80630ffd3910146103d8578063114b6e49146103eb57806313e75206146103fe575f80fd5b8062fdd58e1461030257806301ffc9a71461034157806306fdde03146103815780630d78d0c1146103965780630e89341c146103ab5780630f336348146103be575b5f80fd5b61032e610310366004614bbb565b679a31110384e0b0c96020526014919091525f908152604090205490565b6040519081526020015b60405180910390f35b61037161034f366004614be5565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b6040519015158152602001610338565b6103896107b5565b6040516103389190614c3a565b6103a96103a4366004614c4c565b610841565b005b6103896103b9366004614c4c565b61084d565b61032e6103cc366004614c63565b6001600160a01b031690565b61032e6103e6366004614c7e565b61087e565b61032e6103f9366004614e29565b61095e565b61032e61040c366004614c4c565b5f9081526006602052604090205490565b61043061042b366004614bbb565b610aba565b6040516103389190614f19565b61032e61044b366004614f7f565b610c57565b6103a961045e366004614f7f565b610ca1565b61032e610471366004614f7f565b610caf565b6103a9610484366004614bbb565b610d2a565b61032e610497366004614f7f565b610da1565b6103a96104aa366004614f9f565b610dc3565b6103a96104bd366004615062565b610eae565b6104d56104d0366004615118565b611167565b6040516001600160a01b039091168152602001610338565b6105006104fb366004615146565b611252565b60405161033891906151e6565b6002546104d5906001600160a01b031681565b6103a961052e366004614c63565b6112bf565b6103a96105413660046151f8565b61134b565b610371610554366004614bbb565b61174e565b61032e610567366004614c4c565b611899565b6104d56118a3565b61032e610582366004614c4c565b611a75565b6001546104d5906001600160a01b031681565b6103a96105a8366004614f7f565b611a8c565b6104d56105bb366004614c4c565b611ae4565b61032e6105ce366004614c4c565b611b03565b61032e6105e1366004614f7f565b611b16565b6103716105f4366004614bbb565b611b9d565b610389611bba565b61050061060f366004614c4c565b611bc7565b61032e610622366004614c4c565b611c26565b61032e610635366004614c4c565b611c7e565b6103a9610648366004615248565b611dd7565b61066061065b366004615274565b611df0565b6040516103389190615521565b61068061067b366004615118565b611e9f565b6040516103389190615583565b61032e61069b366004614c63565b6121d9565b6103a96106ae366004615595565b612285565b61032e6106c1366004614f7f565b612300565b61032e6106d4366004614c4c565b5f9081526004602052604090205490565b61032e6106f3366004614c4c565b61230b565b6104d5610706366004614c4c565b612315565b6103716107193660046155e0565b679a31110384e0b0c96020526014919091525f526034600c205490565b610749610744366004614c4c565b612331565b604051610338919061560c565b6103a9610764366004614f7f565b612399565b6103a961077736600461561e565b612484565b61050061078a366004614c4c565b61264c565b61032e61079d366004614c4c565b612758565b6106606107b03660046155e0565b612780565b600f80546107c290615694565b80601f01602080910402602001604051908101604052809291908181526020018280546107ee90615694565b80156108395780601f1061081057610100808354040283529160200191610839565b820191905f5260205f20905b81548152906001019060200180831161081c57829003601f168201915b505050505081565b61084a8161286f565b50565b6060610858826129e2565b60405160200161086891906156c6565b6040516020818303038152906040529050919050565b5f8481526006602052604081205484146108ab57604051635f12529560e01b815260040160405180910390fd5b5f6108e46108b886612315565b5f87815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b679a31110384e0b0c9602090815260148590525f878152604080822054600790935290205491925090633b9aca008211610923575f9350505050610956565b5f6109308461271061572d565b8261093b898661572d565b610945919061572d565b61094f9190615758565b9450505050505b949350505050565b60035460405163333cabc560e01b81525f9182916001600160a01b039091169063333cabc5906109969089908990899060040161576b565b6020604051808303815f875af11580156109b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d691906157ad565b90506109e18761230b565b5f8181526008602052604090208281554260019091015591508215610a1357610a0e83633b9aca0061572d565b610a1a565b64e8d4a510005b5f8381526007602052604081200155604080515f81526020810183905283917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a997611910160405180910390a25f82815260076020526040812083917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf918101546040805192835260208301919091520160405180910390a25095945050505050565b5f818152600560209081526040808320805482518185028101850190935280835260609493830182828015610b0c57602002820191905f5260205f20905b815481526020019060010190808311610af8575b5050505050905080516001600160401b03811115610b2c57610b2c614cbc565b604051908082528060200260200182016040528015610b6557816020015b610b52614a89565b815260200190600190039081610b4a5790505b5091505f5b8151811015610c4e575f8585848481518110610b8857610b88615705565b6020026020010151604051602001610ba2939291906157c4565b60408051601f1981840301815291815281516020928301205f818152600a9093529082209092500154848381518110610bdd57610bdd615705565b60200260200101515f60028110610bf657610bf6615705565b602090810291909101919091525f828152600a9091526040902060010154848381518110610c2657610c26615705565b6020026020010151600160028110610c4057610c40615705565b602002015250600101610b6a565b50505b92915050565b5f808383604051602001610c75929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f908152600a909252902054949350505050565b610cab8282612a71565b5050565b5f8181526004602052604081205415610d21575f82815260046020526040902054610d08610cdc84612315565b5f85815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b610d12908561572d565b610d1c9190615758565b610d23565b5f5b9392505050565b600c546001600160a01b0316610d3e612add565b6001600160a01b031614610d65576040516385ea10fd60e01b815260040160405180910390fd5b80600103610d865760405163023ad70560e31b815260040160405180910390fd5b6001600160a01b039091165f908152600b6020526040902055565b600a602052815f5260405f208160038110610dba575f80fd5b01549150829050565b6001546001600160a01b03163314610dee57604051630fc714ab60e01b815260040160405180910390fd5b610df88183611b9d565b15610e96576001600160a01b038181165f818152600960208181526040832080546001810182559084529083200180546001600160a01b03191694881694909417909355908490610e4991906157ee565b815260208082019290925260409081015f90812080546001810182559082528382200180546001600160a01b0319166001600160a01b0388169081179091558152600490925290205f1990555b610ea96001600160a01b03841683612b23565b505050565b60115460ff1615610f5957610f5988888888808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284375f9201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284375f92019190915250612c2b92505050565b828514610f6d57633b800a465f526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c985088610fab5763ea553b345f526004601cfd5b893314610fcc57335f526034600c2054610fcc57634b6e7f185f526004601cfd5b8660051b5b8015611039576020810390508087013583602052818a01355f5260405f208054808311156110065763f4d678b85f526004601cfd5b8290039055602083905260405f2080548083018181101561102e576301336cea5f526004601cfd5b90915550610fd19050565b505050604051604081528560051b602001604082018160208a03823781604001602084015281602088038383013750888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb60408586010186a4505061109d5f90565b156110b2576110b28888888888888888612eea565b863b1561115d57865f5260405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a001806080850152826020890384840137820160a084015260208401601f19860183800183013750808101830160c401905060208282601c85015f80515af161113e573d1561113e573d5f833e3d82fd5b50805163bc197c8160e01b1461115b57639c05499b5f526004601cfd5b505b5050505050505050565b5f6111728284611b9d565b61118f576040516359c5ba6f60e11b815260040160405180910390fd5b6001546040516311eb232d60e21b8152336004820152602481018590526001600160a01b038481166044830152909116906347ac8cb4906064016020604051808303815f875af11580156111e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112099190615801565b905082826001600160a01b0316826001600160a01b03167fcc812fbe8760ac7f5d76dc25596b5575304a089699833975adb3e253e8c627bd60405160405180910390a492915050565b606083821461126857633b800a465f526004601cfd5b6040519050818152602081018260051b8181016040525b80156112b557602081039050808701358060601b679a31110384e0b0c91760205250808501355f5260405f20548183015261127f565b5050949350505050565b600c5f01546001600160a01b031633146112ec576040516330e1d31f60e21b815260040160405180910390fd5b600d546001600160a01b038281169116036113295750600d8054600c80546001600160a01b03199081166001600160a01b03841617909155169055565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b5f8281526006602052604090205482900361137957604051638c9b017f60e01b815260040160405180910390fd5b5f61138b611385612add565b84611b9d565b600e549091506001600160a01b03161580156113a5575080155b156113c357604051639db14b6d60e01b815260040160405180910390fd5b5f6113ea6113cf612add565b679a31110384e0b0c96020526014525f858152604090205490565b5f858152600460205260409020549091506114089061271090615758565b61142e611413612add565b679a31110384e0b0c96020526014525f868152604090205490565b101561144d5760405163ccf7064560e01b815260040160405180910390fd5b61145684611899565b505f6114636103cc612add565b5f868152600560209081526040808320805482518185028101850190935280835294955092939092918301828280156114b957602002820191905f5260205f20905b8154815260200190600101908083116114a5575b5050600e549394505f938493506001600160a01b031691506114dd9050575f6114e0565b60025b60ff1690505b86518110156116bd575f87828151811061150257611502615705565b602002602001015190505f898683604051602001611533939291909283526020830191909152604082015260600190565b60408051601f198184030181529190528051602090910120600e549091506001600160a01b0316158015906115655750875b801561157e57505f818152600a60205260409020548214155b1561159c5760405163475b00dd60e01b815260040160405180910390fd5b871580156115a957505f82115b156115c75760405163475b00dd60e01b815260040160405180910390fd5b6001831161169657815f036115dd5750506116b5565b825f03611630576115ec612add565b6001600160a01b03168a7f94fb6835215c8e232fdf6bf21658d380697cc552a12a1df09d8cc98fe0d9b88f8460405161162791815260200190565b60405180910390a35b8260010361168457611640612add565b6001600160a01b03168a7f838e39ec3c38514252e486b7ee525a1748e7fc6118536c7640dbbdd2de2fec9c8460405161167b91815260200190565b60405180910390a35b6116918a83858a85612eef565b6116b2565b6116a58a8784868d518a612fe0565b6116af82856157ee565b93505b50505b6001016114e6565b60038751101580156116ce57508115155b80156116dc57508161271014155b156116fa57604051630442bea560e31b815260040160405180910390fd5b61170384612315565b6001600160a01b0316887f8a7531c5a0d68e6295c0d0683ce089e87c3556caf900a8e2d1c558d348bbd8728960405161173c91906151e6565b60405180910390a35050505050505050565b5f61175c8361031084612758565b60011461177c5760405163148fe22160e11b815260040160405180910390fd5b611784612add565b6001600160a01b0316836001600160a01b0316036117b8576117b0836117a984612758565b6001613134565b506001610c51565b6003546001600160a01b03166389160e0e846117d385611b03565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561181a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061183e919061581c565b15905061184a82612758565b9150801561185e5761185e83836001613134565b60405182906001600160a01b038516907f3ac963493df564de734d98633f1145d21512e282ba4c02d3c1011119bf7f2862905f90a392915050565b5f610c51826131e1565b600c545f906001600160a01b0316156118cf5760405163bdc7d58160e01b815260040160405180910390fd5b60015460025460405163bfad25e560e01b81526001600160a01b03918216600482015291169063bd8f46f990309063bfad25e5906024016020604051808303815f875af1158015611922573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061194691906157ad565b6040518263ffffffff1660e01b815260040161196491815260200190565b6020604051808303815f875af1158015611980573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119a49190615801565b600c5f0180546001600160a01b0319166001600160a01b03928316179055600354604080516301abf02960e51b81529051919092169163357e0520916004808301925f92919082900301818387803b1580156119fe575f80fd5b505af1158015611a10573d5f803e3d5ffd5b505050507ff890fc28c3f9900b0f626f2dbd8913e1cb84a7d771c3ca70f19ac3ed52cfde12600c5f60028110611a4857611a48615705565b01546040516001600160a01b03909116815260200160405180910390a150600c546001600160a01b031690565b5f818152600760205260408120815b015492915050565b5f611a968361264c565b90505f5b8151811015611ace57611ac6828281518110611ab857611ab8615705565b602002602001015184610ca1565b600101611a9a565b8015611ade57611ade8484610ca1565b50505050565b600c8160028110611af3575f80fd5b01546001600160a01b0316905081565b5f81815260086020526040812081611a84565b5f80611b218461264c565b90505f805b8251811015611b93578060018451611b3e9190615837565b611b489190615837565b9150828281518110611b5c57611b5c615705565b602002602001015195508560065f8881526020019081526020015f20540315611b9357611b898587610caf565b9450600101611b26565b5092949350505050565b5f6001611bad8461031085612758565b10610c5157506001610c51565b601080546107c290615694565b5f81815260056020908152604091829020805483518184028101840190945280845260609392830182828015611c1a57602002820191905f5260205f20905b815481526020019060010190808311611c06575b50505050509050919050565b5f80611c318361264c565b9050600191505b8051821015611c6f57611c63818381518110611c5657611c56615705565b6020026020010151611c7e565b50816001019150611c38565b611c7883611899565b50610d23835b5f81815260066020526040812054808203611cac57604051636d9430a960e11b815260040160405180910390fd5b5f81815260066020526040902054819003611cc957505f92915050565b611cd281611899565b50604080516020808201869052818301849052825180830384018152606090920190925280519101205f611d23611d0884612315565b679a31110384e0b0c96020526014525f848152604090205490565b5f838152600a6020526040902090915060010154611d419042615837565b5f838152600a6020526040902054611d59919061572d565b935080841115611d67578093505b5f828152600a602052604090204290600101558315611dcf57611dcf611d8c84612315565b611d9587612315565b8587604051602001611dbb906d3932b234b9ba3934b13aba34b7b760911b8152600e0190565b6040516020818303038152906040526132af565b505050919050565b604051633ac4266d60e11b815260040160405180910390fd5b606081516001600160401b03811115611e0b57611e0b614cbc565b604051908082528060200260200182016040528015611e4457816020015b611e31614aa7565b815260200190600190039081611e295790505b5090505f5b8251811015611e9957611e74838281518110611e6757611e67615705565b60200260200101516132bd565b828281518110611e8657611e86615705565b6020908102919091010152600101611e49565b50919050565b611ea7614aa7565b611eb0836132bd565b90506001600160a01b03821615610c5157679a31110384e0b0c960205260148290525f8381526040902054611ee9906129e2565b6129e2565b815161012001525f611f04846001600160a01b0385166157ee565b5f8181526009602052604090205490915015611f5b575f8181526009602052604081208054611f539290611f3a57611f3a615705565b5f918252602090912001546001600160a01b03166135e3565b825161014001525b60408051600180825281830190925290816020015b6040805180820190915260608082526020820152815260200190600190039081611f7057505060c08301525f848152600560205260409020546001600160401b03811115611fc057611fc0614cbc565b604051908082528060200260200182016040528015611ff957816020015b611fe6614aea565b815260200190600190039081611fde5790505b508260c001515f8151811061201057612010615705565b602090810291909101810151919091525f858152600590915260409020546001600160401b0381111561204557612045614cbc565b60405190808252806020026020018201604052801561207857816020015b60608152602001906001900390816120635790505b508260c001515f8151811061208f5761208f615705565b6020026020010151602001819052505f5b5f85815260056020526040902054811015610c4e575f8581526007602052604081206120ce915b01546129e2565b8360c001515f815181106120e4576120e4615705565b60200260200101515f0151828151811061210057612100615705565b602002602001015160016002811061211a5761211a615705565b60200201819052505f848660055f8981526020019081526020015f20848154811061214757612147615705565b905f5260205f200154604051602001612162939291906157c4565b60408051601f1981840301815291815281516020928301205f818152600a909352908220909250612192916120c7565b8460c001515f815181106121a8576121a8615705565b60200260200101516020015183815181106121c5576121c5615705565b6020908102919091010152506001016120a0565b5f816001600160a01b03163b5f0361220457604051637dc5186f60e01b815260040160405180910390fd5b506001600160a01b0381165f818152600660205260409020541561223b57604051633293a2cf60e01b815260040160405180910390fd5b6122458182612b23565b5f8081546122529061584a565b9091555060405181907f4bc7a1fd073ebdf928da09f58ed29b779ed99b26bddee327e87d0be21af8594f905f90a2919050565b600e80546001600160a01b0319166001600160a01b0383161790556122aa838361134b565b600e80546001600160a01b03191690556040516001600160a01b0382168152839033907f081dd7a021608cb1e85f93c3e497da26967bb26442035ffc020ba466aed4049d906020015b60405180910390a3505050565b5f610d2383836135f9565b5f610c518261390b565b5f6001600160a01b03821161232a5781610c51565b5f92915050565b5f81815260096020908152604091829020805483518184028101840190945280845260609392830182828015611c1a57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116123705750505050509050919050565b5f8281526006602052604081205490036123c65760405163bd23392760e01b815260040160405180910390fd5b5f6123d08361264c565b90505f805b82518110156124725780600184516123ed9190615837565b6123f79190615837565b915083612420612405612add565b679a31110384e0b0c96020526014525f878152604090205490565b101561243f57604051632f72e11160e21b815260040160405180910390fd5b6124498585612300565b935082828151811061245d5761245d615705565b602002602001015194508060010190506123d5565b5061247d8484612300565b5050505050565b60115460ff16156125015761250186866124b1876040805180820190915260018152602081019190915290565b60408051808201909152600181526020810188905286868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250612c2b92505050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c96508661253f5763ea553b345f526004601cfd5b87331461256057335f526034600c205461256057634b6e7f185f526004601cfd5b855f5260405f2091508154808611156125805763f4d678b85f526004601cfd5b8581038355508060205260405f2091508154858101818110156125aa576301336cea5f526004601cfd5b909255505060208390528486335f80516020615adf83398151915260405fa4843b156126445760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c84015f8a5af1612626573d15612626573d5f823e3d81fd5b805163f23a6e6160e01b1461264257639c05499b5f526004601cfd5b505b505050505050565b5f818152600660205260409020546060906001905b61266c8460016157ee565b81106126a6575f8181526006602052604090205481146126a65761268f8261584a565b5f9182526006602052604090912054909150612661565b816001600160401b038111156126be576126be614cbc565b6040519080825280602002602001820160405280156126e7578160200160208202803683370190505b5092505f90505b81811015612751575f848152600660205260409020548360016127118486615837565b61271b9190615837565b8151811061272b5761272b615705565b6020908102919091018101919091525f94855260069052604090932054926001016126ee565b5050919050565b5f6804e1003b28d928000082111561277c57610c51678ac7230489e8000083615862565b5090565b6001600160a01b0382165f81815260096020526040902054606091906001600160401b038111156127b3576127b3614cbc565b6040519080825280602002602001820160405280156127ec57816020015b6127d9614aa7565b8152602001906001900390816127d15790505b5091505f5b5f82815260096020526040902054811015610c4e575f828152600960205260409020805461284a91612844918490811061282d5761282d615705565b5f918252602090912001546001600160a01b031690565b85611e9f565b83828151811061285c5761285c615705565b60209081029190910101526001016127f1565b5f81815260066020526040812054900361289c57604051634825e09360e01b815260040160405180910390fd5b5f818152600660205260409020548190036128ca5760405163bd23392760e01b815260040160405180910390fd5b5f818152600460205260409020546001016128f857604051630cf32f7560e21b815260040160405180910390fd5b612909612903612add565b82611b9d565b15612927576040516340803a5f60e11b815260040160405180910390fd5b6003546001600160a01b03166389160e0e612940612add565b61294984611b03565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015612990573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129b4919061581c565b6129d15760405163b2cab42960e01b815260040160405180910390fd5b61084a6129dc612add565b82613a48565b60605f6129ee83613b05565b60010190505f816001600160401b03811115612a0c57612a0c614cbc565b6040519080825280601f01601f191660200182016040528015612a36576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612a4057509392505050565b5f828152600660205260408120549003612a9e57604051635f12529560e01b815260040160405180910390fd5b610cab612aa9612add565b8383604051602001612ac9906766756e6769626c6560c01b815260080190565b604051602081830303815290604052613bdc565b5f80356001600160e01b031916632ca7add760e21b148015612b095750600e546001600160a01b031615155b15612b1e5750600e546001600160a01b031690565b503390565b5f8281526006602052604090205415612b4f5760405163731918fb60e11b815260040160405180910390fd5b5f828152600660205260409020819055818114610cab575f8181526005602090815260408220805460018101825590835290822001839055600990612b938361264c565b5f81518110612ba457612ba4615705565b602002602001015181526020019081526020015f20612bc283612315565b8154600180820184555f938452602080852090920180546001600160a01b0319166001600160a01b0394909416939093179092558483526004905260409091205401612c0c575050565b505f90815260076020526040902064e8d4a51000815542600290910155565b6304ed360560e51b5f356001600160e01b031916011561247d575f5b8084511115612644575f848281518110612c6357612c63615705565b602002602001015190505f848381518110612c8057612c80615705565b602002602001015190505f6001600160a01b0316886001600160a01b031614158015612cb457506001600160a01b03871615155b8015612ccb57505f82815260066020526040902054155b15612ce95760405163ce2d28e160e01b815260040160405180910390fd5b678ac7230489e80000821015612da8575f356001600160e01b031916630d78d0c160e01b141580612d2c57505f356001600160e01b031916630312c9fb60e51b14155b80612d4957505f356001600160e01b031916630af1b55b60e41b14155b80612d6657505f356001600160e01b03191663114b6e4960e01b14155b80612d8357505f356001600160e01b03191663bfad25e560e01b14155b612da057604051630dbd110f60e21b815260040160405180910390fd5b50505061247d565b5f356001600160e01b031916630d9778e560e11b1480612dd957505f356001600160e01b03191663791ddaf960e01b145b15612ee0575f82815260066020526040902054829003612e9557612dfc82612315565b6040516323b872dd60e01b81526001600160a01b0389811660048301523060248301526044820184905291909116906323b872dd906064016020604051808303815f875af1158015612e50573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e74919061581c565b612e905760405162916a1960e51b815260040160405180910390fd5b612ee0565b6011805460ff19169055612ed2612eaa612add565b612eb384612315565b5f85815260066020526040812054908590610777906001903681615875565b6011805460ff191660011790555b5050600101612c47565b61115d565b831561247d57604080516020808201889052818301879052825180830384018152606090920183528151918101919091205f848152600a909252919020600101544203612f4f5760405163d445b7c360e01b815260040160405180910390fd5b835f03612f6857612f638683838887613c50565b612f75565b612f758683838887613e3a565b5f828152600a60209081526040808320426001918201556005835281842080549182018155845292829020909201879055905182815287917fb9fabdd20442c18b28ad124d92670b92dbc9b763d12cd509698e84d798e84cfb910160405180910390a2505050505050565b612feb600283615837565b81511461300b57604051631b9103a360e11b815260040160405180910390fd5b5f85878361301a600288615837565b8151811061302a5761302a615705565b6020026020010151604051602001613044939291906157c4565b60408051808303601f1901815291815281516020928301205f818152600a9093529120549091506127108611801561307a575080155b15613086575050612644565b6127108611156130a95760405163bb82191f60e01b815260040160405180910390fd5b85811461115d5760408051606081018252878152426020808301919091525f828401819052858152600a909152919091206130e5916003614b11565b50613105836130f5600288615837565b81518110611c5657611c56615705565b5061115d83613115600288615837565b8151811061312557613125615705565b60200260200101518984613fcd565b5f8281526004602052604081208054839290613151908490615837565b90915550505f82815260066020526040902054821080156131795750678ac7230489e8000082115b1561319a5761318782611899565b50610ea9613193612add565b838361411e565b6131a583838361411e565b81836001600160a01b03167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f836040516122f391815260200190565b5f818152600660205260408120548290036131fd57505f919050565b5f828152600760205260409020805460029091015461321c9042615837565b613226919061572d565b9050805f0361323657505f919050565b5f8281526007602052604090204290600201556040516834b7333630ba34b7b760b91b602082015261327090839081908490602901612ac9565b817f695f517929cb0a761ce9f28118b11060d9646bcf6668b6fc3dfb89aaddce26e4826040516132a291815260200190565b60405180910390a2919050565b61247d5f868686868661412a565b6132c5614aa7565b6132ce826129e2565b8151525f8281526007602052604081206132e7916120c7565b8151602001526132fc611ee4610cdc84612315565b815160400152613311611ee4611d0884612315565b81516060015261332a611ee4836105e161141382612315565b815160800152613343611ee4836105e16108b882612315565b815160a001525f82815260086020526040812061335f916120c7565b815160c001525f828152600660209081526040808320548151808401879052808301829052825180820384018152606090910183528051908401208452600a909252909120546133b291611ee491611b16565b815160e001525f8281526007602052604090206133d09060026120c7565b815161010001525f828152600460205260409020546133ee906129e2565b815161016001526003545f8381526008602052604090819020549051631ba2a35b60e31b815260048101919091526001600160a01b039091169063dd151ad8906024015f60405180830381865afa15801561344b573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526134729190810190615945565b6040908101516020808401919091525f84815260098252829020805483518184028101840190945280845290918301828280156134d657602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116134b8575b505050505060408201526001546009905f906134fc9085906001600160a01b03166157ee565b81526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561355b57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161353d575b505050505060808201525f8281526005602090815260409182902080548351818402810184019094528084526135c393928301828280156135b957602002820191905f5260205f20905b8154815260200190600101908083116135a5575b5050505050614295565b60608201526135d96135d48361264c565b614295565b60a0820152919050565b6060610c516001600160a01b0383166014614340565b5f8281526006602052604081205481036136265760405163bd23392760e01b815260040160405180910390fd5b5f838152600660205260409020548314613649576136448284610caf565b61364b565b815b5f848152600660205260409020549091508314613707573063f242432a61367185612315565b613679612add565b60065f8881526020019081526020015f2054856040516020016136a69063313ab93760e11b815260040190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016136d5959493929190615a59565b5f604051808303815f87803b1580156136ec575f80fd5b505af11580156136fe573d5f803e3d5ffd5b505050506138f9565b5f600b5f61371486612315565b6001600160a01b0316815260208101919091526040015f20541561376357600b5f61373e86612315565b6001600160a01b03166001600160a01b031681526020019081526020015f205461378e565b5f8052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76545b905061379a8184615758565b90505f6137a78285615837565b90508084116137c9576040516337b936ed60e11b815260040160405180910390fd5b6137d285612315565b60025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1158015613821573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613845919061581c565b80156138d9575061385585612315565b6001600160a01b031663a9059cbb61386b612add565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156138b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138d9919061581c565b6138f657604051632ebc317760e21b815260040160405180910390fd5b50505b610c51613904612add565b8484613134565b5f81815260066020526040812054810361392d5761392b61069b83612315565b505b61393e613938612add565b83611b9d565b15801561395857505f828152600660205260409020548214155b156139765760405163148fe22160e11b815260040160405180910390fd5b5f828152600460205260409020546001016139a457604051630cf32f7560e21b815260040160405180910390fd5b5f8081546139b19061584a565b909155506139c3633b9aca0044615862565b5f546139cf4285615837565b6139d99190615837565b6139e39190615837565b90506139f96139f182612315565b3060016144d9565b613a038183612b23565b333014613a1557613a156129dc612add565b6040513390839083907f907e845f974b1e16735c498eca2c72acd8c3d61c86675d4cab952054450ee358905f90a4919050565b5f8181526009602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b038416179055613acc82613a8b83612758565b6040516bffffffffffffffffffffffff19606087901b1660208201526906d656d626572736869760b41b6034820152603e8101859052600190605e01612ac9565b60405181906001600160a01b038416907fbab4562ae868d1765ed8452e98bba908a974596c4babc3ada5e90e05e3f433fb905f90a35050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310613b435772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310613b6f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613b8d57662386f26fc10000830492506010015b6305f5e1008310613ba5576305f5e100830492506008015b6127108310613bb957612710830492506004015b60648310613bcb576064830492506002015b600a8310610c515760010192915050565b613be884848484614531565b5f8381526004602052604081208054849290613c059084906157ee565b909155505060405182815283906001600160a01b038616907f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff9060200160405180910390a350505050565b6001600160a01b03821080613cd45750600354604051631ba2a35b60e31b8152600481018490526001600160a01b039091169063dd151ad8906024015f60405180830381865afa158015613ca6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052613ccd9190810190615945565b6040015151155b15613cf257604051639cd2c44760e01b815260040160405180910390fd5b613cff85858585856145dc565b5f85815260046020908152604080832054868452600a90925290912054613d2790600261572d565b111561247d576003546040516350885bc560e01b8152600481018790525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613d73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d979190615a9d565b50905080613db85760405163a74ab56560e01b815260040160405180910390fd5b613dc186611899565b505f86815260086020526040812087917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a99761191015460408051918252602082018790520160405180910390a2604080518082018252848152426020808301919091525f898152600890915291909120612642916002614b4b565b613e4785858585856145dc565b5f85815260046020908152604080832054868452600a90925290912054613e6f90600261572d565b111561247d576003546040516350885bc560e01b8152600481018790525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613ebb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613edf9190615a9d565b50905080613f005760405163a74ab56560e01b815260040160405180910390fd5b613f0986611899565b505f8681526007602052604090205486907f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf90613f4a86633b9aca0061572d565b6040805192835260208301919091520160405180910390a25f86815260076020526040902054613f89908790613f8486633b9aca0061572d565b6146c2565b604051806060016040528084633b9aca00613fa4919061572d565b81524260208083018290526040928301919091525f898152600790915220612642916003614b11565b604080516020808201869052818301859052825180830384018152606090920183528151918101919091205f848152600a9092529181205461401590869086906103e6612add565b5f848152600a60205260409020909150600101544210156140495760405163d445b7c360e01b815260040160405180910390fd5b5f838152600a60205260409020600201541561408e575f838152600a602052604080822060020154848352908220805491929091614088908490615837565b90915550505b5f828152600a6020526040812080548392906140ab9084906157ee565b90915550505f84815260076020526040812001545f838152600a60205260408120015411156140f3575f84815260076020526040812001545f838152600a6020526040812001555b5f918252600a6020526040808320426001918201819055948452922091820192909255600201555050565b610ea95f848484614926565b60115460ff1615614172576141728585614157866040805180820190915260018152602081019190915290565b60408051808201909152600181526020810187905285612c2b565b8460601b8460601b8061418c5763ea553b345f526004601cfd5b81679a31110384e0b0c9176020528760601b8281148115176141c257885f526034600c20546141c257634b6e7f185f526004601cfd5b50845f5260405f208054808611156141e15763f4d678b85f526004601cfd5b8590039055679a31110384e0b0c9811760205260405f20805480860181811015614212576301336cea5f526004601cfd5b808355505050836020528060601c8260601c335f80516020615adf83398151915260405fa450506142405f90565b15614281576142818585614267866040805180820190915260018152602081019190915290565b604080518082019091526001815260208101879052611ade565b833b156126445761264485858585856149ff565b60605f82516001600160401b038111156142b1576142b1614cbc565b6040519080825280602002602001820160405280156142e457816020015b60608152602001906001900390816142cf5790505b5090505f5b83518110156143395761431484828151811061430757614307615705565b60200260200101516129e2565b82828151811061432657614326615705565b60209081029190910101526001016142e9565b5092915050565b60605f61434e83600261572d565b6143599060026157ee565b6001600160401b0381111561437057614370614cbc565b6040519080825280601f01601f19166020018201604052801561439a576020820181803683370190505b509050600360fc1b815f815181106143b4576143b4615705565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106143e2576143e2615705565b60200101906001600160f81b03191690815f1a9053505f61440484600261572d565b61440f9060016157ee565b90505b6001811115614486576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061444357614443615705565b1a60f81b82828151811061445957614459615705565b60200101906001600160f81b03191690815f1a90535060049490941c9361447f81615ac9565b9050614412565b508315610d235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b8015159050679a31110384e0b0c960205282601452815f52806034600c2055805f525f1960601c8281168482167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa350505050565b60115460ff161561455e5761455e5f85614157866040805180820190915260018152602081019190915290565b8360601b806145745763ea553b345f526004601cfd5b679a31110384e0b0c960205284601452835f5260405f208054848101818110156145a5576301336cea5f526004601cfd5b808355505050826020528060601c5f335f80516020615adf83398151915260405fa450833b15611ade57611ade5f858585856149ff565b5f848152600a602052604081206001015411801561461957505f848152600a60205260409020600101545f86815260086020526040902060010154105b15614663575f848152600a602052604090206002015415614663575f848152600a60205260408082206002015485835290822080549192909161465d908490615837565b90915550505b60408051606081018252838152426020808301919091528183018490525f878152600a90915291909120614698916003614b11565b505f838152600a6020526040812080548392906146b69084906157ee565b90915550505050505050565b5f8381526005602090815260408083208054825181850281018501909352808352919290919083018282801561471557602002820191905f5260205f20905b815481526020019060010190808311614701575b5050505050905080515f0361472a5750505050565b5f805b82518110156147f1575f83828151811061474957614749615705565b60200260200101518760405160200161476c929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f818152600a90935291205490915061479d81856157ee565b9350633b9aca008111156147e7576147c0858481518110611c5657611c56615705565b505f876147cd888461572d565b6147d79190615758565b5f848152600a6020526040902055505b505060010161472d565b5060018111801561482857505f8581526007602052604090205461481990620186a090615758565b614826620186a083615758565b105b156148ae575f61486661483a87612315565b5f88815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b61488d61487288612315565b679a31110384e0b0c96020526014525f888152604090205490565b6148979190615837565b90506148ac6148a587612315565b8783613134565b505b60408051606081018252848152426020808301829052828401919091525f8881526007909152919091206148e3916003614b11565b50604080518581526020810185905286917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf910160405180910390a25050505050565b60115460ff161561497c5761497c835f614953856040805180820190915260018152602081019190915290565b60408051808201909152600181526020810186905260405180602001604052805f815250612c2b565b8260601b80679a31110384e0b0c917602052808560601b148560601b15176149b857845f526034600c20546149b857634b6e7f185f526004601cfd5b825f5260405f208054808411156149d65763f4d678b85f526004601cfd5b83810382555050816020525f8160601c335f80516020615adf83398151915260405fa450611ade565b60405163f23a6e6181523360208201528560601b60601c604082015283606082015282608082015260a08082015281518060c08301528015614a4b578060e08301826020860160045afa505b6020828260c401601c85015f8a5af1614a6c573d15614a6c573d5f833e3d82fd5b50805163f23a6e6160e01b1461264457639c05499b5f526004601cfd5b60405180604001604052806002906020820280368337509192915050565b6040518060e00160405280614aba614b78565b81526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b60405180604001604052806002905b6060815260200190600190039081614af95790505090565b8260038101928215614b3f579160200282015b82811115614b3f578251825591602001919060010190614b24565b5061277c929150614b93565b8260028101928215614b3f5791602002820182811115614b3f578251825591602001919060010190614b24565b60408051610180810190915260608152600b60208201614af9565b5b8082111561277c575f8155600101614b94565b6001600160a01b038116811461084a575f80fd5b5f8060408385031215614bcc575f80fd5b8235614bd781614ba7565b946020939093013593505050565b5f60208284031215614bf5575f80fd5b81356001600160e01b031981168114610d23575f80fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610d236020830184614c0c565b5f60208284031215614c5c575f80fd5b5035919050565b5f60208284031215614c73575f80fd5b8135610d2381614ba7565b5f805f8060808587031215614c91575f80fd5b8435935060208501359250604085013591506060850135614cb181614ba7565b939692955090935050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b0381118282101715614cf257614cf2614cbc565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614d2057614d20614cbc565b604052919050565b5f6001600160401b03821115614d4057614d40614cbc565b5060051b60200190565b5f82601f830112614d59575f80fd5b81356020614d6e614d6983614d28565b614cf8565b8083825260208201915060208460051b870101935086841115614d8f575f80fd5b602086015b84811015614dab5780358352918301918301614d94565b509695505050505050565b5f6001600160401b03821115614dce57614dce614cbc565b50601f01601f191660200190565b5f82601f830112614deb575f80fd5b8135614df9614d6982614db6565b818152846020838601011115614e0d575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215614e3d575f80fd5b853594506020808701356001600160401b0380821115614e5b575f80fd5b818901915089601f830112614e6e575f80fd5b8135614e7c614d6982614d28565b81815260059190911b8301840190848101908c831115614e9a575f80fd5b938501935b82851015614ec1578435614eb281614ba7565b82529385019390850190614e9f565b985050506040890135925080831115614ed8575f80fd5b614ee48a848b01614d4a565b95506060890135925080831115614ef9575f80fd5b5050614f0788828901614ddc565b95989497509295608001359392505050565b602080825282518282018190525f919060409081850190868401855b82811015614f72578151845f5b6002811015614f5f57825182529188019190880190600101614f42565b5050509284019290850190600101614f35565b5091979650505050505050565b5f8060408385031215614f90575f80fd5b50508035926020909101359150565b5f805f60608486031215614fb1575f80fd5b8335614fbc81614ba7565b9250602084013591506040840135614fd381614ba7565b809150509250925092565b5f8083601f840112614fee575f80fd5b5081356001600160401b03811115615004575f80fd5b6020830191508360208260051b850101111561501e575f80fd5b9250929050565b5f8083601f840112615035575f80fd5b5081356001600160401b0381111561504b575f80fd5b60208301915083602082850101111561501e575f80fd5b5f805f805f805f8060a0898b031215615079575f80fd5b883561508481614ba7565b9750602089013561509481614ba7565b965060408901356001600160401b03808211156150af575f80fd5b6150bb8c838d01614fde565b909850965060608b01359150808211156150d3575f80fd5b6150df8c838d01614fde565b909650945060808b01359150808211156150f7575f80fd5b506151048b828c01615025565b999c989b5096995094979396929594505050565b5f8060408385031215615129575f80fd5b82359150602083013561513b81614ba7565b809150509250929050565b5f805f8060408587031215615159575f80fd5b84356001600160401b038082111561516f575f80fd5b61517b88838901614fde565b90965094506020870135915080821115615193575f80fd5b506151a087828801614fde565b95989497509550505050565b5f815180845260208085019450602084015f5b838110156151db578151875295820195908201906001016151bf565b509495945050505050565b602081525f610d2360208301846151ac565b5f8060408385031215615209575f80fd5b8235915060208301356001600160401b03811115615225575f80fd5b61523185828601614d4a565b9150509250929050565b801515811461084a575f80fd5b5f8060408385031215615259575f80fd5b823561526481614ba7565b9150602083013561513b8161523b565b5f60208284031215615284575f80fd5b81356001600160401b03811115615299575f80fd5b61095684828501614d4a565b5f826101808101835f5b600c8110156152de5783830387526152c8838351614c0c565b60209788019790935091909101906001016152af565b509095945050505050565b5f815180845260208085019450602084015f5b838110156151db5781516001600160a01b0316875295820195908201906001016152fc565b5f8282518085526020808601955060208260051b840101602086015f5b8481101561536c57601f1986840301895261535a838351614c0c565b9884019892509083019060010161533e565b5090979650505050505050565b5f828251808552602080860195506005818360051b8501018287015f5b8581101561545b57601f19878403018a5281518051604080865281518187018190529091606082891b8801810192918a0191908801905f5b8181101561542c57898503605f190183528351858781015f5b6002811015615417578882038352615400828551614c0c565b91508f840193508f830192506001810190506153e7565b5096505050928b0192918b01916001016153ce565b505050509187015185830386890152916154468184615321565b9c88019c955050509185019150600101615396565b509098975050505050505050565b5f815160e0845261547d60e08501826152a5565b9050602083015184820360208601526154968282614c0c565b915050604083015184820360408601526154b082826152e9565b915050606083015184820360608601526154ca8282615321565b915050608083015184820360808601526154e482826152e9565b91505060a083015184820360a08601526154fe8282615321565b91505060c083015184820360c08601526155188282615379565b95945050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561557657603f19888603018452615564858351615469565b94509285019290850190600101615548565b5092979650505050505050565b602081525f610d236020830184615469565b5f805f606084860312156155a7575f80fd5b8335925060208401356001600160401b038111156155c3575f80fd5b6155cf86828701614d4a565b9250506040840135614fd381614ba7565b5f80604083850312156155f1575f80fd5b82356155fc81614ba7565b9150602083013561513b81614ba7565b602081525f610d2360208301846152e9565b5f805f805f8060a08789031215615633575f80fd5b863561563e81614ba7565b9550602087013561564e81614ba7565b9450604087013593506060870135925060808701356001600160401b03811115615676575f80fd5b61568289828a01615025565b979a9699509497509295939492505050565b600181811c908216806156a857607f821691505b602082108103611e9957634e487b7160e01b5f52602260045260245ffd5b7f68747470733a2f2f77696c6c77652e78797a2f6d657461646174612f0000000081525f82518060208501601c85015e5f9201601c0191825250919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c5157610c51615719565b634e487b7160e01b5f52601260045260245ffd5b5f8261576657615766615744565b500490565b606081525f61577d60608301866152e9565b828103602084015261578f81866151ac565b905082810360408401526157a38185614c0c565b9695505050505050565b5f602082840312156157bd575f80fd5b5051919050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b80820180821115610c5157610c51615719565b5f60208284031215615811575f80fd5b8151610d2381614ba7565b5f6020828403121561582c575f80fd5b8151610d238161523b565b81810381811115610c5157610c51615719565b5f6001820161585b5761585b615719565b5060010190565b5f8261587057615870615744565b500690565b5f8085851115615883575f80fd5b8386111561588f575f80fd5b5050820193919092039150565b5f82601f8301126158ab575f80fd5b815160206158bb614d6983614d28565b8083825260208201915060208460051b8701019350868411156158dc575f80fd5b602086015b84811015614dab57805183529183019183016158e1565b5f82601f830112615907575f80fd5b8151615915614d6982614db6565b818152846020838601011115615929575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f6020808385031215615956575f80fd5b82516001600160401b038082111561596c575f80fd5b908401906080828703121561597f575f80fd5b615987614cd0565b825182811115615995575f80fd5b8301601f810188136159a5575f80fd5b80516159b3614d6982614d28565b81815260059190911b8201860190868101908a8311156159d1575f80fd5b928701925b828410156159f85783516159e981614ba7565b825292870192908701906159d6565b84525050508284015182811115615a0d575f80fd5b615a198882860161589c565b85830152506040830151935081841115615a31575f80fd5b615a3d878585016158f8565b6040820152606083015160608201528094505050505092915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90615a9290830184614c0c565b979650505050505050565b5f8060408385031215615aae575f80fd5b8251615ab98161523b565b6020939093015192949293505050565b5f81615ad757615ad7615719565b505f19019056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a26469706673582212201a6f3c5006af7deedfe7035c791bea68c86b787c37ce2cd65d068db5fbcea03964736f6c63430008190033",
        "sourceMap": "3505:762:57:-:0;;;3534:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2138:19:55;;;:7;:19;;;;2160:5;2138:19;:27;2175:16;:32;;-1:-1:-1;;;;;;2175:32:55;-1:-1:-1;;;;;2175:32:55;;;;;;;;2138:19;2224:37;;-1:-1:-1;;;2224:37:55;;;;2175:32;;3598:8:57;;2175:32:55;;3598:8:57;;2175:32:55;;2224:35;;:37;;;;;;;;;;2175:32;2224:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2217:4;:44;;-1:-1:-1;;;;;;2217:44:55;;;-1:-1:-1;;;;;2217:44:55;;;;;;;2271:1;:24;;;;;;;;;;;;;;2306:19;;;;;;;;;;;;-1:-1:-1;;;2306:19:55;;;;:4;;:19;;:4;:19;:::i;:::-;-1:-1:-1;2335:15:55;;;;;;;;;;;;-1:-1:-1;;;2335:15:55;;;;:6;;:15;;:6;:15;:::i;:::-;-1:-1:-1;;2361:9:55;:16;;2373:4;-1:-1:-1;;2361:16:55;;;;;;;;404:26:54;;-1:-1:-1;;;;;;404:26:54::1;-1:-1:-1::0;;;;;404:26:54;::::1;::::0;;::::1;::::0;;;440:44:::1;::::0;-1:-1:-1;;;440:44:54;;478:4:::1;440:44;::::0;::::1;3540:51:67::0;404:26:54;;-1:-1:-1;440:29:54::1;::::0;3513:18:67;;440:44:54::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;316:175:::0;;3534:76:57;;3505:762;;14:177:67;93:13;;-1:-1:-1;;;;;135:31:67;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:208::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;656:40;686:9;656:40;:::i;:::-;646:50;494:208;-1:-1:-1;;;494:208:67:o;707:127::-;768:10;763:3;759:20;756:1;749:31;799:4;796:1;789:15;823:4;820:1;813:15;839:380;918:1;914:12;;;;961;;;982:61;;1036:4;1028:6;1024:17;1014:27;;982:61;1089:2;1081:6;1078:14;1058:18;1055:38;1052:161;;1135:10;1130:3;1126:20;1123:1;1116:31;1170:4;1167:1;1160:15;1198:4;1195:1;1188:15;1052:161;;839:380;;;:::o;1350:518::-;1452:2;1447:3;1444:11;1441:421;;;1488:5;1485:1;1478:16;1532:4;1529:1;1519:18;1602:2;1590:10;1586:19;1583:1;1579:27;1573:4;1569:38;1638:4;1626:10;1623:20;1620:47;;;-1:-1:-1;1661:4:67;1620:47;1716:2;1711:3;1707:12;1704:1;1700:20;1694:4;1690:31;1680:41;;1771:81;1789:2;1782:5;1779:13;1771:81;;;1848:1;1834:16;;1815:1;1804:13;1771:81;;;1775:3;;1441:421;1350:518;;;:::o;2044:1345::-;2164:10;;-1:-1:-1;;;;;2186:30:67;;2183:56;;;2219:18;;:::i;:::-;2248:97;2338:6;2298:38;2330:4;2324:11;2298:38;:::i;:::-;2292:4;2248:97;:::i;:::-;2400:4;;2457:2;2446:14;;2474:1;2469:663;;;;3176:1;3193:6;3190:89;;;-1:-1:-1;3245:19:67;;;3239:26;3190:89;-1:-1:-1;;2001:1:67;1997:11;;;1993:24;1989:29;1979:40;2025:1;2021:11;;;1976:57;3292:81;;2439:944;;2469:663;1297:1;1290:14;;;1334:4;1321:18;;-1:-1:-1;;2505:20:67;;;2623:236;2637:7;2634:1;2631:14;2623:236;;;2726:19;;;2720:26;2705:42;;2818:27;;;;2786:1;2774:14;;;;2653:19;;2623:236;;;2627:3;2887:6;2878:7;2875:19;2872:201;;;2948:19;;;2942:26;-1:-1:-1;;3031:1:67;3027:14;;;3043:3;3023:24;3019:37;3015:42;3000:58;2985:74;;2872:201;;;3119:1;3110:6;3107:1;3103:14;3099:22;3093:4;3086:36;2439:944;;;;;2044:1345;;:::o;3394:203::-;3505:762:57;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106102fe575f3560e01c806378adc79011610195578063af1b55b0116100e4578063e985e9c51161009e578063f242432a11610079578063f242432a14610769578063f6355a561461077c578063f77914c31461078f578063f87cc6b3146107a2575f80fd5b8063e985e9c51461070b578063eef2e75714610736578063f039a73314610756575f80fd5b8063af1b55b01461068d578063b29eb75c146106a0578063b390c0ab146106b3578063bd85b039146106c6578063bfad25e5146106e5578063e0051aa9146106f8575f80fd5b806395d89b411161014f578063a0ce552d1161012a578063a0ce552d14610627578063a22cb4651461063a578063a5541c841461064d578063a6bfbc201461066d575f80fd5b806395d89b41146105f957806399f4568914610601578063a076225314610614575f80fd5b806378adc79014610587578063791ddaf91461059a5780637d11e682146105ad5780637e44bffe146105c05780637f33d800146105d357806385752d03146105e6575f80fd5b80631f01784111610251578063535e98911161020b57806362593f60116101e657806362593f601461054657806367c394fb1461055957806368dc27471461056c578063765063e514610574575f80fd5b8063535e98911461050d5780635ac8260c146105205780635b4a26ed14610533575f80fd5b80631f0178411461047657806320f944271461048957806328ca8e261461049c5780632eb2c2d6146104af57806345bbbf84146104c25780634e1273f4146104ed575f80fd5b80630ffd3910116102bc578063150d503d11610297578063150d503d1461041d5780631a61eda61461043d5780631b2ef1ca146104505780631e9b388d14610463575f80fd5b80630ffd3910146103d8578063114b6e49146103eb57806313e75206146103fe575f80fd5b8062fdd58e1461030257806301ffc9a71461034157806306fdde03146103815780630d78d0c1146103965780630e89341c146103ab5780630f336348146103be575b5f80fd5b61032e610310366004614bbb565b679a31110384e0b0c96020526014919091525f908152604090205490565b6040519081526020015b60405180910390f35b61037161034f366004614be5565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b6040519015158152602001610338565b6103896107b5565b6040516103389190614c3a565b6103a96103a4366004614c4c565b610841565b005b6103896103b9366004614c4c565b61084d565b61032e6103cc366004614c63565b6001600160a01b031690565b61032e6103e6366004614c7e565b61087e565b61032e6103f9366004614e29565b61095e565b61032e61040c366004614c4c565b5f9081526006602052604090205490565b61043061042b366004614bbb565b610aba565b6040516103389190614f19565b61032e61044b366004614f7f565b610c57565b6103a961045e366004614f7f565b610ca1565b61032e610471366004614f7f565b610caf565b6103a9610484366004614bbb565b610d2a565b61032e610497366004614f7f565b610da1565b6103a96104aa366004614f9f565b610dc3565b6103a96104bd366004615062565b610eae565b6104d56104d0366004615118565b611167565b6040516001600160a01b039091168152602001610338565b6105006104fb366004615146565b611252565b60405161033891906151e6565b6002546104d5906001600160a01b031681565b6103a961052e366004614c63565b6112bf565b6103a96105413660046151f8565b61134b565b610371610554366004614bbb565b61174e565b61032e610567366004614c4c565b611899565b6104d56118a3565b61032e610582366004614c4c565b611a75565b6001546104d5906001600160a01b031681565b6103a96105a8366004614f7f565b611a8c565b6104d56105bb366004614c4c565b611ae4565b61032e6105ce366004614c4c565b611b03565b61032e6105e1366004614f7f565b611b16565b6103716105f4366004614bbb565b611b9d565b610389611bba565b61050061060f366004614c4c565b611bc7565b61032e610622366004614c4c565b611c26565b61032e610635366004614c4c565b611c7e565b6103a9610648366004615248565b611dd7565b61066061065b366004615274565b611df0565b6040516103389190615521565b61068061067b366004615118565b611e9f565b6040516103389190615583565b61032e61069b366004614c63565b6121d9565b6103a96106ae366004615595565b612285565b61032e6106c1366004614f7f565b612300565b61032e6106d4366004614c4c565b5f9081526004602052604090205490565b61032e6106f3366004614c4c565b61230b565b6104d5610706366004614c4c565b612315565b6103716107193660046155e0565b679a31110384e0b0c96020526014919091525f526034600c205490565b610749610744366004614c4c565b612331565b604051610338919061560c565b6103a9610764366004614f7f565b612399565b6103a961077736600461561e565b612484565b61050061078a366004614c4c565b61264c565b61032e61079d366004614c4c565b612758565b6106606107b03660046155e0565b612780565b600f80546107c290615694565b80601f01602080910402602001604051908101604052809291908181526020018280546107ee90615694565b80156108395780601f1061081057610100808354040283529160200191610839565b820191905f5260205f20905b81548152906001019060200180831161081c57829003601f168201915b505050505081565b61084a8161286f565b50565b6060610858826129e2565b60405160200161086891906156c6565b6040516020818303038152906040529050919050565b5f8481526006602052604081205484146108ab57604051635f12529560e01b815260040160405180910390fd5b5f6108e46108b886612315565b5f87815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b679a31110384e0b0c9602090815260148590525f878152604080822054600790935290205491925090633b9aca008211610923575f9350505050610956565b5f6109308461271061572d565b8261093b898661572d565b610945919061572d565b61094f9190615758565b9450505050505b949350505050565b60035460405163333cabc560e01b81525f9182916001600160a01b039091169063333cabc5906109969089908990899060040161576b565b6020604051808303815f875af11580156109b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d691906157ad565b90506109e18761230b565b5f8181526008602052604090208281554260019091015591508215610a1357610a0e83633b9aca0061572d565b610a1a565b64e8d4a510005b5f8381526007602052604081200155604080515f81526020810183905283917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a997611910160405180910390a25f82815260076020526040812083917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf918101546040805192835260208301919091520160405180910390a25095945050505050565b5f818152600560209081526040808320805482518185028101850190935280835260609493830182828015610b0c57602002820191905f5260205f20905b815481526020019060010190808311610af8575b5050505050905080516001600160401b03811115610b2c57610b2c614cbc565b604051908082528060200260200182016040528015610b6557816020015b610b52614a89565b815260200190600190039081610b4a5790505b5091505f5b8151811015610c4e575f8585848481518110610b8857610b88615705565b6020026020010151604051602001610ba2939291906157c4565b60408051601f1981840301815291815281516020928301205f818152600a9093529082209092500154848381518110610bdd57610bdd615705565b60200260200101515f60028110610bf657610bf6615705565b602090810291909101919091525f828152600a9091526040902060010154848381518110610c2657610c26615705565b6020026020010151600160028110610c4057610c40615705565b602002015250600101610b6a565b50505b92915050565b5f808383604051602001610c75929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f908152600a909252902054949350505050565b610cab8282612a71565b5050565b5f8181526004602052604081205415610d21575f82815260046020526040902054610d08610cdc84612315565b5f85815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b610d12908561572d565b610d1c9190615758565b610d23565b5f5b9392505050565b600c546001600160a01b0316610d3e612add565b6001600160a01b031614610d65576040516385ea10fd60e01b815260040160405180910390fd5b80600103610d865760405163023ad70560e31b815260040160405180910390fd5b6001600160a01b039091165f908152600b6020526040902055565b600a602052815f5260405f208160038110610dba575f80fd5b01549150829050565b6001546001600160a01b03163314610dee57604051630fc714ab60e01b815260040160405180910390fd5b610df88183611b9d565b15610e96576001600160a01b038181165f818152600960208181526040832080546001810182559084529083200180546001600160a01b03191694881694909417909355908490610e4991906157ee565b815260208082019290925260409081015f90812080546001810182559082528382200180546001600160a01b0319166001600160a01b0388169081179091558152600490925290205f1990555b610ea96001600160a01b03841683612b23565b505050565b60115460ff1615610f5957610f5988888888808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284375f9201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284375f92019190915250612c2b92505050565b828514610f6d57633b800a465f526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c985088610fab5763ea553b345f526004601cfd5b893314610fcc57335f526034600c2054610fcc57634b6e7f185f526004601cfd5b8660051b5b8015611039576020810390508087013583602052818a01355f5260405f208054808311156110065763f4d678b85f526004601cfd5b8290039055602083905260405f2080548083018181101561102e576301336cea5f526004601cfd5b90915550610fd19050565b505050604051604081528560051b602001604082018160208a03823781604001602084015281602088038383013750888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb60408586010186a4505061109d5f90565b156110b2576110b28888888888888888612eea565b863b1561115d57865f5260405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a001806080850152826020890384840137820160a084015260208401601f19860183800183013750808101830160c401905060208282601c85015f80515af161113e573d1561113e573d5f833e3d82fd5b50805163bc197c8160e01b1461115b57639c05499b5f526004601cfd5b505b5050505050505050565b5f6111728284611b9d565b61118f576040516359c5ba6f60e11b815260040160405180910390fd5b6001546040516311eb232d60e21b8152336004820152602481018590526001600160a01b038481166044830152909116906347ac8cb4906064016020604051808303815f875af11580156111e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112099190615801565b905082826001600160a01b0316826001600160a01b03167fcc812fbe8760ac7f5d76dc25596b5575304a089699833975adb3e253e8c627bd60405160405180910390a492915050565b606083821461126857633b800a465f526004601cfd5b6040519050818152602081018260051b8181016040525b80156112b557602081039050808701358060601b679a31110384e0b0c91760205250808501355f5260405f20548183015261127f565b5050949350505050565b600c5f01546001600160a01b031633146112ec576040516330e1d31f60e21b815260040160405180910390fd5b600d546001600160a01b038281169116036113295750600d8054600c80546001600160a01b03199081166001600160a01b03841617909155169055565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b5f8281526006602052604090205482900361137957604051638c9b017f60e01b815260040160405180910390fd5b5f61138b611385612add565b84611b9d565b600e549091506001600160a01b03161580156113a5575080155b156113c357604051639db14b6d60e01b815260040160405180910390fd5b5f6113ea6113cf612add565b679a31110384e0b0c96020526014525f858152604090205490565b5f858152600460205260409020549091506114089061271090615758565b61142e611413612add565b679a31110384e0b0c96020526014525f868152604090205490565b101561144d5760405163ccf7064560e01b815260040160405180910390fd5b61145684611899565b505f6114636103cc612add565b5f868152600560209081526040808320805482518185028101850190935280835294955092939092918301828280156114b957602002820191905f5260205f20905b8154815260200190600101908083116114a5575b5050600e549394505f938493506001600160a01b031691506114dd9050575f6114e0565b60025b60ff1690505b86518110156116bd575f87828151811061150257611502615705565b602002602001015190505f898683604051602001611533939291909283526020830191909152604082015260600190565b60408051601f198184030181529190528051602090910120600e549091506001600160a01b0316158015906115655750875b801561157e57505f818152600a60205260409020548214155b1561159c5760405163475b00dd60e01b815260040160405180910390fd5b871580156115a957505f82115b156115c75760405163475b00dd60e01b815260040160405180910390fd5b6001831161169657815f036115dd5750506116b5565b825f03611630576115ec612add565b6001600160a01b03168a7f94fb6835215c8e232fdf6bf21658d380697cc552a12a1df09d8cc98fe0d9b88f8460405161162791815260200190565b60405180910390a35b8260010361168457611640612add565b6001600160a01b03168a7f838e39ec3c38514252e486b7ee525a1748e7fc6118536c7640dbbdd2de2fec9c8460405161167b91815260200190565b60405180910390a35b6116918a83858a85612eef565b6116b2565b6116a58a8784868d518a612fe0565b6116af82856157ee565b93505b50505b6001016114e6565b60038751101580156116ce57508115155b80156116dc57508161271014155b156116fa57604051630442bea560e31b815260040160405180910390fd5b61170384612315565b6001600160a01b0316887f8a7531c5a0d68e6295c0d0683ce089e87c3556caf900a8e2d1c558d348bbd8728960405161173c91906151e6565b60405180910390a35050505050505050565b5f61175c8361031084612758565b60011461177c5760405163148fe22160e11b815260040160405180910390fd5b611784612add565b6001600160a01b0316836001600160a01b0316036117b8576117b0836117a984612758565b6001613134565b506001610c51565b6003546001600160a01b03166389160e0e846117d385611b03565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561181a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061183e919061581c565b15905061184a82612758565b9150801561185e5761185e83836001613134565b60405182906001600160a01b038516907f3ac963493df564de734d98633f1145d21512e282ba4c02d3c1011119bf7f2862905f90a392915050565b5f610c51826131e1565b600c545f906001600160a01b0316156118cf5760405163bdc7d58160e01b815260040160405180910390fd5b60015460025460405163bfad25e560e01b81526001600160a01b03918216600482015291169063bd8f46f990309063bfad25e5906024016020604051808303815f875af1158015611922573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061194691906157ad565b6040518263ffffffff1660e01b815260040161196491815260200190565b6020604051808303815f875af1158015611980573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119a49190615801565b600c5f0180546001600160a01b0319166001600160a01b03928316179055600354604080516301abf02960e51b81529051919092169163357e0520916004808301925f92919082900301818387803b1580156119fe575f80fd5b505af1158015611a10573d5f803e3d5ffd5b505050507ff890fc28c3f9900b0f626f2dbd8913e1cb84a7d771c3ca70f19ac3ed52cfde12600c5f60028110611a4857611a48615705565b01546040516001600160a01b03909116815260200160405180910390a150600c546001600160a01b031690565b5f818152600760205260408120815b015492915050565b5f611a968361264c565b90505f5b8151811015611ace57611ac6828281518110611ab857611ab8615705565b602002602001015184610ca1565b600101611a9a565b8015611ade57611ade8484610ca1565b50505050565b600c8160028110611af3575f80fd5b01546001600160a01b0316905081565b5f81815260086020526040812081611a84565b5f80611b218461264c565b90505f805b8251811015611b93578060018451611b3e9190615837565b611b489190615837565b9150828281518110611b5c57611b5c615705565b602002602001015195508560065f8881526020019081526020015f20540315611b9357611b898587610caf565b9450600101611b26565b5092949350505050565b5f6001611bad8461031085612758565b10610c5157506001610c51565b601080546107c290615694565b5f81815260056020908152604091829020805483518184028101840190945280845260609392830182828015611c1a57602002820191905f5260205f20905b815481526020019060010190808311611c06575b50505050509050919050565b5f80611c318361264c565b9050600191505b8051821015611c6f57611c63818381518110611c5657611c56615705565b6020026020010151611c7e565b50816001019150611c38565b611c7883611899565b50610d23835b5f81815260066020526040812054808203611cac57604051636d9430a960e11b815260040160405180910390fd5b5f81815260066020526040902054819003611cc957505f92915050565b611cd281611899565b50604080516020808201869052818301849052825180830384018152606090920190925280519101205f611d23611d0884612315565b679a31110384e0b0c96020526014525f848152604090205490565b5f838152600a6020526040902090915060010154611d419042615837565b5f838152600a6020526040902054611d59919061572d565b935080841115611d67578093505b5f828152600a602052604090204290600101558315611dcf57611dcf611d8c84612315565b611d9587612315565b8587604051602001611dbb906d3932b234b9ba3934b13aba34b7b760911b8152600e0190565b6040516020818303038152906040526132af565b505050919050565b604051633ac4266d60e11b815260040160405180910390fd5b606081516001600160401b03811115611e0b57611e0b614cbc565b604051908082528060200260200182016040528015611e4457816020015b611e31614aa7565b815260200190600190039081611e295790505b5090505f5b8251811015611e9957611e74838281518110611e6757611e67615705565b60200260200101516132bd565b828281518110611e8657611e86615705565b6020908102919091010152600101611e49565b50919050565b611ea7614aa7565b611eb0836132bd565b90506001600160a01b03821615610c5157679a31110384e0b0c960205260148290525f8381526040902054611ee9906129e2565b6129e2565b815161012001525f611f04846001600160a01b0385166157ee565b5f8181526009602052604090205490915015611f5b575f8181526009602052604081208054611f539290611f3a57611f3a615705565b5f918252602090912001546001600160a01b03166135e3565b825161014001525b60408051600180825281830190925290816020015b6040805180820190915260608082526020820152815260200190600190039081611f7057505060c08301525f848152600560205260409020546001600160401b03811115611fc057611fc0614cbc565b604051908082528060200260200182016040528015611ff957816020015b611fe6614aea565b815260200190600190039081611fde5790505b508260c001515f8151811061201057612010615705565b602090810291909101810151919091525f858152600590915260409020546001600160401b0381111561204557612045614cbc565b60405190808252806020026020018201604052801561207857816020015b60608152602001906001900390816120635790505b508260c001515f8151811061208f5761208f615705565b6020026020010151602001819052505f5b5f85815260056020526040902054811015610c4e575f8581526007602052604081206120ce915b01546129e2565b8360c001515f815181106120e4576120e4615705565b60200260200101515f0151828151811061210057612100615705565b602002602001015160016002811061211a5761211a615705565b60200201819052505f848660055f8981526020019081526020015f20848154811061214757612147615705565b905f5260205f200154604051602001612162939291906157c4565b60408051601f1981840301815291815281516020928301205f818152600a909352908220909250612192916120c7565b8460c001515f815181106121a8576121a8615705565b60200260200101516020015183815181106121c5576121c5615705565b6020908102919091010152506001016120a0565b5f816001600160a01b03163b5f0361220457604051637dc5186f60e01b815260040160405180910390fd5b506001600160a01b0381165f818152600660205260409020541561223b57604051633293a2cf60e01b815260040160405180910390fd5b6122458182612b23565b5f8081546122529061584a565b9091555060405181907f4bc7a1fd073ebdf928da09f58ed29b779ed99b26bddee327e87d0be21af8594f905f90a2919050565b600e80546001600160a01b0319166001600160a01b0383161790556122aa838361134b565b600e80546001600160a01b03191690556040516001600160a01b0382168152839033907f081dd7a021608cb1e85f93c3e497da26967bb26442035ffc020ba466aed4049d906020015b60405180910390a3505050565b5f610d2383836135f9565b5f610c518261390b565b5f6001600160a01b03821161232a5781610c51565b5f92915050565b5f81815260096020908152604091829020805483518184028101840190945280845260609392830182828015611c1a57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116123705750505050509050919050565b5f8281526006602052604081205490036123c65760405163bd23392760e01b815260040160405180910390fd5b5f6123d08361264c565b90505f805b82518110156124725780600184516123ed9190615837565b6123f79190615837565b915083612420612405612add565b679a31110384e0b0c96020526014525f878152604090205490565b101561243f57604051632f72e11160e21b815260040160405180910390fd5b6124498585612300565b935082828151811061245d5761245d615705565b602002602001015194508060010190506123d5565b5061247d8484612300565b5050505050565b60115460ff16156125015761250186866124b1876040805180820190915260018152602081019190915290565b60408051808201909152600181526020810188905286868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250612c2b92505050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c96508661253f5763ea553b345f526004601cfd5b87331461256057335f526034600c205461256057634b6e7f185f526004601cfd5b855f5260405f2091508154808611156125805763f4d678b85f526004601cfd5b8581038355508060205260405f2091508154858101818110156125aa576301336cea5f526004601cfd5b909255505060208390528486335f80516020615adf83398151915260405fa4843b156126445760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c84015f8a5af1612626573d15612626573d5f823e3d81fd5b805163f23a6e6160e01b1461264257639c05499b5f526004601cfd5b505b505050505050565b5f818152600660205260409020546060906001905b61266c8460016157ee565b81106126a6575f8181526006602052604090205481146126a65761268f8261584a565b5f9182526006602052604090912054909150612661565b816001600160401b038111156126be576126be614cbc565b6040519080825280602002602001820160405280156126e7578160200160208202803683370190505b5092505f90505b81811015612751575f848152600660205260409020548360016127118486615837565b61271b9190615837565b8151811061272b5761272b615705565b6020908102919091018101919091525f94855260069052604090932054926001016126ee565b5050919050565b5f6804e1003b28d928000082111561277c57610c51678ac7230489e8000083615862565b5090565b6001600160a01b0382165f81815260096020526040902054606091906001600160401b038111156127b3576127b3614cbc565b6040519080825280602002602001820160405280156127ec57816020015b6127d9614aa7565b8152602001906001900390816127d15790505b5091505f5b5f82815260096020526040902054811015610c4e575f828152600960205260409020805461284a91612844918490811061282d5761282d615705565b5f918252602090912001546001600160a01b031690565b85611e9f565b83828151811061285c5761285c615705565b60209081029190910101526001016127f1565b5f81815260066020526040812054900361289c57604051634825e09360e01b815260040160405180910390fd5b5f818152600660205260409020548190036128ca5760405163bd23392760e01b815260040160405180910390fd5b5f818152600460205260409020546001016128f857604051630cf32f7560e21b815260040160405180910390fd5b612909612903612add565b82611b9d565b15612927576040516340803a5f60e11b815260040160405180910390fd5b6003546001600160a01b03166389160e0e612940612add565b61294984611b03565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015612990573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129b4919061581c565b6129d15760405163b2cab42960e01b815260040160405180910390fd5b61084a6129dc612add565b82613a48565b60605f6129ee83613b05565b60010190505f816001600160401b03811115612a0c57612a0c614cbc565b6040519080825280601f01601f191660200182016040528015612a36576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612a4057509392505050565b5f828152600660205260408120549003612a9e57604051635f12529560e01b815260040160405180910390fd5b610cab612aa9612add565b8383604051602001612ac9906766756e6769626c6560c01b815260080190565b604051602081830303815290604052613bdc565b5f80356001600160e01b031916632ca7add760e21b148015612b095750600e546001600160a01b031615155b15612b1e5750600e546001600160a01b031690565b503390565b5f8281526006602052604090205415612b4f5760405163731918fb60e11b815260040160405180910390fd5b5f828152600660205260409020819055818114610cab575f8181526005602090815260408220805460018101825590835290822001839055600990612b938361264c565b5f81518110612ba457612ba4615705565b602002602001015181526020019081526020015f20612bc283612315565b8154600180820184555f938452602080852090920180546001600160a01b0319166001600160a01b0394909416939093179092558483526004905260409091205401612c0c575050565b505f90815260076020526040902064e8d4a51000815542600290910155565b6304ed360560e51b5f356001600160e01b031916011561247d575f5b8084511115612644575f848281518110612c6357612c63615705565b602002602001015190505f848381518110612c8057612c80615705565b602002602001015190505f6001600160a01b0316886001600160a01b031614158015612cb457506001600160a01b03871615155b8015612ccb57505f82815260066020526040902054155b15612ce95760405163ce2d28e160e01b815260040160405180910390fd5b678ac7230489e80000821015612da8575f356001600160e01b031916630d78d0c160e01b141580612d2c57505f356001600160e01b031916630312c9fb60e51b14155b80612d4957505f356001600160e01b031916630af1b55b60e41b14155b80612d6657505f356001600160e01b03191663114b6e4960e01b14155b80612d8357505f356001600160e01b03191663bfad25e560e01b14155b612da057604051630dbd110f60e21b815260040160405180910390fd5b50505061247d565b5f356001600160e01b031916630d9778e560e11b1480612dd957505f356001600160e01b03191663791ddaf960e01b145b15612ee0575f82815260066020526040902054829003612e9557612dfc82612315565b6040516323b872dd60e01b81526001600160a01b0389811660048301523060248301526044820184905291909116906323b872dd906064016020604051808303815f875af1158015612e50573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e74919061581c565b612e905760405162916a1960e51b815260040160405180910390fd5b612ee0565b6011805460ff19169055612ed2612eaa612add565b612eb384612315565b5f85815260066020526040812054908590610777906001903681615875565b6011805460ff191660011790555b5050600101612c47565b61115d565b831561247d57604080516020808201889052818301879052825180830384018152606090920183528151918101919091205f848152600a909252919020600101544203612f4f5760405163d445b7c360e01b815260040160405180910390fd5b835f03612f6857612f638683838887613c50565b612f75565b612f758683838887613e3a565b5f828152600a60209081526040808320426001918201556005835281842080549182018155845292829020909201879055905182815287917fb9fabdd20442c18b28ad124d92670b92dbc9b763d12cd509698e84d798e84cfb910160405180910390a2505050505050565b612feb600283615837565b81511461300b57604051631b9103a360e11b815260040160405180910390fd5b5f85878361301a600288615837565b8151811061302a5761302a615705565b6020026020010151604051602001613044939291906157c4565b60408051808303601f1901815291815281516020928301205f818152600a9093529120549091506127108611801561307a575080155b15613086575050612644565b6127108611156130a95760405163bb82191f60e01b815260040160405180910390fd5b85811461115d5760408051606081018252878152426020808301919091525f828401819052858152600a909152919091206130e5916003614b11565b50613105836130f5600288615837565b81518110611c5657611c56615705565b5061115d83613115600288615837565b8151811061312557613125615705565b60200260200101518984613fcd565b5f8281526004602052604081208054839290613151908490615837565b90915550505f82815260066020526040902054821080156131795750678ac7230489e8000082115b1561319a5761318782611899565b50610ea9613193612add565b838361411e565b6131a583838361411e565b81836001600160a01b03167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f836040516122f391815260200190565b5f818152600660205260408120548290036131fd57505f919050565b5f828152600760205260409020805460029091015461321c9042615837565b613226919061572d565b9050805f0361323657505f919050565b5f8281526007602052604090204290600201556040516834b7333630ba34b7b760b91b602082015261327090839081908490602901612ac9565b817f695f517929cb0a761ce9f28118b11060d9646bcf6668b6fc3dfb89aaddce26e4826040516132a291815260200190565b60405180910390a2919050565b61247d5f868686868661412a565b6132c5614aa7565b6132ce826129e2565b8151525f8281526007602052604081206132e7916120c7565b8151602001526132fc611ee4610cdc84612315565b815160400152613311611ee4611d0884612315565b81516060015261332a611ee4836105e161141382612315565b815160800152613343611ee4836105e16108b882612315565b815160a001525f82815260086020526040812061335f916120c7565b815160c001525f828152600660209081526040808320548151808401879052808301829052825180820384018152606090910183528051908401208452600a909252909120546133b291611ee491611b16565b815160e001525f8281526007602052604090206133d09060026120c7565b815161010001525f828152600460205260409020546133ee906129e2565b815161016001526003545f8381526008602052604090819020549051631ba2a35b60e31b815260048101919091526001600160a01b039091169063dd151ad8906024015f60405180830381865afa15801561344b573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526134729190810190615945565b6040908101516020808401919091525f84815260098252829020805483518184028101840190945280845290918301828280156134d657602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116134b8575b505050505060408201526001546009905f906134fc9085906001600160a01b03166157ee565b81526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561355b57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161353d575b505050505060808201525f8281526005602090815260409182902080548351818402810184019094528084526135c393928301828280156135b957602002820191905f5260205f20905b8154815260200190600101908083116135a5575b5050505050614295565b60608201526135d96135d48361264c565b614295565b60a0820152919050565b6060610c516001600160a01b0383166014614340565b5f8281526006602052604081205481036136265760405163bd23392760e01b815260040160405180910390fd5b5f838152600660205260409020548314613649576136448284610caf565b61364b565b815b5f848152600660205260409020549091508314613707573063f242432a61367185612315565b613679612add565b60065f8881526020019081526020015f2054856040516020016136a69063313ab93760e11b815260040190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016136d5959493929190615a59565b5f604051808303815f87803b1580156136ec575f80fd5b505af11580156136fe573d5f803e3d5ffd5b505050506138f9565b5f600b5f61371486612315565b6001600160a01b0316815260208101919091526040015f20541561376357600b5f61373e86612315565b6001600160a01b03166001600160a01b031681526020019081526020015f205461378e565b5f8052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76545b905061379a8184615758565b90505f6137a78285615837565b90508084116137c9576040516337b936ed60e11b815260040160405180910390fd5b6137d285612315565b60025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1158015613821573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613845919061581c565b80156138d9575061385585612315565b6001600160a01b031663a9059cbb61386b612add565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156138b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138d9919061581c565b6138f657604051632ebc317760e21b815260040160405180910390fd5b50505b610c51613904612add565b8484613134565b5f81815260066020526040812054810361392d5761392b61069b83612315565b505b61393e613938612add565b83611b9d565b15801561395857505f828152600660205260409020548214155b156139765760405163148fe22160e11b815260040160405180910390fd5b5f828152600460205260409020546001016139a457604051630cf32f7560e21b815260040160405180910390fd5b5f8081546139b19061584a565b909155506139c3633b9aca0044615862565b5f546139cf4285615837565b6139d99190615837565b6139e39190615837565b90506139f96139f182612315565b3060016144d9565b613a038183612b23565b333014613a1557613a156129dc612add565b6040513390839083907f907e845f974b1e16735c498eca2c72acd8c3d61c86675d4cab952054450ee358905f90a4919050565b5f8181526009602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b038416179055613acc82613a8b83612758565b6040516bffffffffffffffffffffffff19606087901b1660208201526906d656d626572736869760b41b6034820152603e8101859052600190605e01612ac9565b60405181906001600160a01b038416907fbab4562ae868d1765ed8452e98bba908a974596c4babc3ada5e90e05e3f433fb905f90a35050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310613b435772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310613b6f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613b8d57662386f26fc10000830492506010015b6305f5e1008310613ba5576305f5e100830492506008015b6127108310613bb957612710830492506004015b60648310613bcb576064830492506002015b600a8310610c515760010192915050565b613be884848484614531565b5f8381526004602052604081208054849290613c059084906157ee565b909155505060405182815283906001600160a01b038616907f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff9060200160405180910390a350505050565b6001600160a01b03821080613cd45750600354604051631ba2a35b60e31b8152600481018490526001600160a01b039091169063dd151ad8906024015f60405180830381865afa158015613ca6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052613ccd9190810190615945565b6040015151155b15613cf257604051639cd2c44760e01b815260040160405180910390fd5b613cff85858585856145dc565b5f85815260046020908152604080832054868452600a90925290912054613d2790600261572d565b111561247d576003546040516350885bc560e01b8152600481018790525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613d73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d979190615a9d565b50905080613db85760405163a74ab56560e01b815260040160405180910390fd5b613dc186611899565b505f86815260086020526040812087917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a99761191015460408051918252602082018790520160405180910390a2604080518082018252848152426020808301919091525f898152600890915291909120612642916002614b4b565b613e4785858585856145dc565b5f85815260046020908152604080832054868452600a90925290912054613e6f90600261572d565b111561247d576003546040516350885bc560e01b8152600481018790525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613ebb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613edf9190615a9d565b50905080613f005760405163a74ab56560e01b815260040160405180910390fd5b613f0986611899565b505f8681526007602052604090205486907f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf90613f4a86633b9aca0061572d565b6040805192835260208301919091520160405180910390a25f86815260076020526040902054613f89908790613f8486633b9aca0061572d565b6146c2565b604051806060016040528084633b9aca00613fa4919061572d565b81524260208083018290526040928301919091525f898152600790915220612642916003614b11565b604080516020808201869052818301859052825180830384018152606090920183528151918101919091205f848152600a9092529181205461401590869086906103e6612add565b5f848152600a60205260409020909150600101544210156140495760405163d445b7c360e01b815260040160405180910390fd5b5f838152600a60205260409020600201541561408e575f838152600a602052604080822060020154848352908220805491929091614088908490615837565b90915550505b5f828152600a6020526040812080548392906140ab9084906157ee565b90915550505f84815260076020526040812001545f838152600a60205260408120015411156140f3575f84815260076020526040812001545f838152600a6020526040812001555b5f918252600a6020526040808320426001918201819055948452922091820192909255600201555050565b610ea95f848484614926565b60115460ff1615614172576141728585614157866040805180820190915260018152602081019190915290565b60408051808201909152600181526020810187905285612c2b565b8460601b8460601b8061418c5763ea553b345f526004601cfd5b81679a31110384e0b0c9176020528760601b8281148115176141c257885f526034600c20546141c257634b6e7f185f526004601cfd5b50845f5260405f208054808611156141e15763f4d678b85f526004601cfd5b8590039055679a31110384e0b0c9811760205260405f20805480860181811015614212576301336cea5f526004601cfd5b808355505050836020528060601c8260601c335f80516020615adf83398151915260405fa450506142405f90565b15614281576142818585614267866040805180820190915260018152602081019190915290565b604080518082019091526001815260208101879052611ade565b833b156126445761264485858585856149ff565b60605f82516001600160401b038111156142b1576142b1614cbc565b6040519080825280602002602001820160405280156142e457816020015b60608152602001906001900390816142cf5790505b5090505f5b83518110156143395761431484828151811061430757614307615705565b60200260200101516129e2565b82828151811061432657614326615705565b60209081029190910101526001016142e9565b5092915050565b60605f61434e83600261572d565b6143599060026157ee565b6001600160401b0381111561437057614370614cbc565b6040519080825280601f01601f19166020018201604052801561439a576020820181803683370190505b509050600360fc1b815f815181106143b4576143b4615705565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106143e2576143e2615705565b60200101906001600160f81b03191690815f1a9053505f61440484600261572d565b61440f9060016157ee565b90505b6001811115614486576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061444357614443615705565b1a60f81b82828151811061445957614459615705565b60200101906001600160f81b03191690815f1a90535060049490941c9361447f81615ac9565b9050614412565b508315610d235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b8015159050679a31110384e0b0c960205282601452815f52806034600c2055805f525f1960601c8281168482167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa350505050565b60115460ff161561455e5761455e5f85614157866040805180820190915260018152602081019190915290565b8360601b806145745763ea553b345f526004601cfd5b679a31110384e0b0c960205284601452835f5260405f208054848101818110156145a5576301336cea5f526004601cfd5b808355505050826020528060601c5f335f80516020615adf83398151915260405fa450833b15611ade57611ade5f858585856149ff565b5f848152600a602052604081206001015411801561461957505f848152600a60205260409020600101545f86815260086020526040902060010154105b15614663575f848152600a602052604090206002015415614663575f848152600a60205260408082206002015485835290822080549192909161465d908490615837565b90915550505b60408051606081018252838152426020808301919091528183018490525f878152600a90915291909120614698916003614b11565b505f838152600a6020526040812080548392906146b69084906157ee565b90915550505050505050565b5f8381526005602090815260408083208054825181850281018501909352808352919290919083018282801561471557602002820191905f5260205f20905b815481526020019060010190808311614701575b5050505050905080515f0361472a5750505050565b5f805b82518110156147f1575f83828151811061474957614749615705565b60200260200101518760405160200161476c929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f818152600a90935291205490915061479d81856157ee565b9350633b9aca008111156147e7576147c0858481518110611c5657611c56615705565b505f876147cd888461572d565b6147d79190615758565b5f848152600a6020526040902055505b505060010161472d565b5060018111801561482857505f8581526007602052604090205461481990620186a090615758565b614826620186a083615758565b105b156148ae575f61486661483a87612315565b5f88815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b61488d61487288612315565b679a31110384e0b0c96020526014525f888152604090205490565b6148979190615837565b90506148ac6148a587612315565b8783613134565b505b60408051606081018252848152426020808301829052828401919091525f8881526007909152919091206148e3916003614b11565b50604080518581526020810185905286917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf910160405180910390a25050505050565b60115460ff161561497c5761497c835f614953856040805180820190915260018152602081019190915290565b60408051808201909152600181526020810186905260405180602001604052805f815250612c2b565b8260601b80679a31110384e0b0c917602052808560601b148560601b15176149b857845f526034600c20546149b857634b6e7f185f526004601cfd5b825f5260405f208054808411156149d65763f4d678b85f526004601cfd5b83810382555050816020525f8160601c335f80516020615adf83398151915260405fa450611ade565b60405163f23a6e6181523360208201528560601b60601c604082015283606082015282608082015260a08082015281518060c08301528015614a4b578060e08301826020860160045afa505b6020828260c401601c85015f8a5af1614a6c573d15614a6c573d5f833e3d82fd5b50805163f23a6e6160e01b1461264457639c05499b5f526004601cfd5b60405180604001604052806002906020820280368337509192915050565b6040518060e00160405280614aba614b78565b81526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b60405180604001604052806002905b6060815260200190600190039081614af95790505090565b8260038101928215614b3f579160200282015b82811115614b3f578251825591602001919060010190614b24565b5061277c929150614b93565b8260028101928215614b3f5791602002820182811115614b3f578251825591602001919060010190614b24565b60408051610180810190915260608152600b60208201614af9565b5b8082111561277c575f8155600101614b94565b6001600160a01b038116811461084a575f80fd5b5f8060408385031215614bcc575f80fd5b8235614bd781614ba7565b946020939093013593505050565b5f60208284031215614bf5575f80fd5b81356001600160e01b031981168114610d23575f80fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610d236020830184614c0c565b5f60208284031215614c5c575f80fd5b5035919050565b5f60208284031215614c73575f80fd5b8135610d2381614ba7565b5f805f8060808587031215614c91575f80fd5b8435935060208501359250604085013591506060850135614cb181614ba7565b939692955090935050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b0381118282101715614cf257614cf2614cbc565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614d2057614d20614cbc565b604052919050565b5f6001600160401b03821115614d4057614d40614cbc565b5060051b60200190565b5f82601f830112614d59575f80fd5b81356020614d6e614d6983614d28565b614cf8565b8083825260208201915060208460051b870101935086841115614d8f575f80fd5b602086015b84811015614dab5780358352918301918301614d94565b509695505050505050565b5f6001600160401b03821115614dce57614dce614cbc565b50601f01601f191660200190565b5f82601f830112614deb575f80fd5b8135614df9614d6982614db6565b818152846020838601011115614e0d575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215614e3d575f80fd5b853594506020808701356001600160401b0380821115614e5b575f80fd5b818901915089601f830112614e6e575f80fd5b8135614e7c614d6982614d28565b81815260059190911b8301840190848101908c831115614e9a575f80fd5b938501935b82851015614ec1578435614eb281614ba7565b82529385019390850190614e9f565b985050506040890135925080831115614ed8575f80fd5b614ee48a848b01614d4a565b95506060890135925080831115614ef9575f80fd5b5050614f0788828901614ddc565b95989497509295608001359392505050565b602080825282518282018190525f919060409081850190868401855b82811015614f72578151845f5b6002811015614f5f57825182529188019190880190600101614f42565b5050509284019290850190600101614f35565b5091979650505050505050565b5f8060408385031215614f90575f80fd5b50508035926020909101359150565b5f805f60608486031215614fb1575f80fd5b8335614fbc81614ba7565b9250602084013591506040840135614fd381614ba7565b809150509250925092565b5f8083601f840112614fee575f80fd5b5081356001600160401b03811115615004575f80fd5b6020830191508360208260051b850101111561501e575f80fd5b9250929050565b5f8083601f840112615035575f80fd5b5081356001600160401b0381111561504b575f80fd5b60208301915083602082850101111561501e575f80fd5b5f805f805f805f8060a0898b031215615079575f80fd5b883561508481614ba7565b9750602089013561509481614ba7565b965060408901356001600160401b03808211156150af575f80fd5b6150bb8c838d01614fde565b909850965060608b01359150808211156150d3575f80fd5b6150df8c838d01614fde565b909650945060808b01359150808211156150f7575f80fd5b506151048b828c01615025565b999c989b5096995094979396929594505050565b5f8060408385031215615129575f80fd5b82359150602083013561513b81614ba7565b809150509250929050565b5f805f8060408587031215615159575f80fd5b84356001600160401b038082111561516f575f80fd5b61517b88838901614fde565b90965094506020870135915080821115615193575f80fd5b506151a087828801614fde565b95989497509550505050565b5f815180845260208085019450602084015f5b838110156151db578151875295820195908201906001016151bf565b509495945050505050565b602081525f610d2360208301846151ac565b5f8060408385031215615209575f80fd5b8235915060208301356001600160401b03811115615225575f80fd5b61523185828601614d4a565b9150509250929050565b801515811461084a575f80fd5b5f8060408385031215615259575f80fd5b823561526481614ba7565b9150602083013561513b8161523b565b5f60208284031215615284575f80fd5b81356001600160401b03811115615299575f80fd5b61095684828501614d4a565b5f826101808101835f5b600c8110156152de5783830387526152c8838351614c0c565b60209788019790935091909101906001016152af565b509095945050505050565b5f815180845260208085019450602084015f5b838110156151db5781516001600160a01b0316875295820195908201906001016152fc565b5f8282518085526020808601955060208260051b840101602086015f5b8481101561536c57601f1986840301895261535a838351614c0c565b9884019892509083019060010161533e565b5090979650505050505050565b5f828251808552602080860195506005818360051b8501018287015f5b8581101561545b57601f19878403018a5281518051604080865281518187018190529091606082891b8801810192918a0191908801905f5b8181101561542c57898503605f190183528351858781015f5b6002811015615417578882038352615400828551614c0c565b91508f840193508f830192506001810190506153e7565b5096505050928b0192918b01916001016153ce565b505050509187015185830386890152916154468184615321565b9c88019c955050509185019150600101615396565b509098975050505050505050565b5f815160e0845261547d60e08501826152a5565b9050602083015184820360208601526154968282614c0c565b915050604083015184820360408601526154b082826152e9565b915050606083015184820360608601526154ca8282615321565b915050608083015184820360808601526154e482826152e9565b91505060a083015184820360a08601526154fe8282615321565b91505060c083015184820360c08601526155188282615379565b95945050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561557657603f19888603018452615564858351615469565b94509285019290850190600101615548565b5092979650505050505050565b602081525f610d236020830184615469565b5f805f606084860312156155a7575f80fd5b8335925060208401356001600160401b038111156155c3575f80fd5b6155cf86828701614d4a565b9250506040840135614fd381614ba7565b5f80604083850312156155f1575f80fd5b82356155fc81614ba7565b9150602083013561513b81614ba7565b602081525f610d2360208301846152e9565b5f805f805f8060a08789031215615633575f80fd5b863561563e81614ba7565b9550602087013561564e81614ba7565b9450604087013593506060870135925060808701356001600160401b03811115615676575f80fd5b61568289828a01615025565b979a9699509497509295939492505050565b600181811c908216806156a857607f821691505b602082108103611e9957634e487b7160e01b5f52602260045260245ffd5b7f68747470733a2f2f77696c6c77652e78797a2f6d657461646174612f0000000081525f82518060208501601c85015e5f9201601c0191825250919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c5157610c51615719565b634e487b7160e01b5f52601260045260245ffd5b5f8261576657615766615744565b500490565b606081525f61577d60608301866152e9565b828103602084015261578f81866151ac565b905082810360408401526157a38185614c0c565b9695505050505050565b5f602082840312156157bd575f80fd5b5051919050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b80820180821115610c5157610c51615719565b5f60208284031215615811575f80fd5b8151610d2381614ba7565b5f6020828403121561582c575f80fd5b8151610d238161523b565b81810381811115610c5157610c51615719565b5f6001820161585b5761585b615719565b5060010190565b5f8261587057615870615744565b500690565b5f8085851115615883575f80fd5b8386111561588f575f80fd5b5050820193919092039150565b5f82601f8301126158ab575f80fd5b815160206158bb614d6983614d28565b8083825260208201915060208460051b8701019350868411156158dc575f80fd5b602086015b84811015614dab57805183529183019183016158e1565b5f82601f830112615907575f80fd5b8151615915614d6982614db6565b818152846020838601011115615929575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f6020808385031215615956575f80fd5b82516001600160401b038082111561596c575f80fd5b908401906080828703121561597f575f80fd5b615987614cd0565b825182811115615995575f80fd5b8301601f810188136159a5575f80fd5b80516159b3614d6982614d28565b81815260059190911b8201860190868101908a8311156159d1575f80fd5b928701925b828410156159f85783516159e981614ba7565b825292870192908701906159d6565b84525050508284015182811115615a0d575f80fd5b615a198882860161589c565b85830152506040830151935081841115615a31575f80fd5b615a3d878585016158f8565b6040820152606083015160608201528094505050505092915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90615a9290830184614c0c565b979650505050505050565b5f8060408385031215615aae575f80fd5b8251615ab98161523b565b6020939093015192949293505050565b5f81615ad757615ad7615719565b505f19019056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a26469706673582212201a6f3c5006af7deedfe7035c791bea68c86b787c37ce2cd65d068db5fbcea03964736f6c63430008190033",
        "sourceMap": "3505:762:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:334:43;;;;;;:::i;:::-;6250:25;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;;;;616:25:67;;;604:2;589:18;6070:334:43;;;;;;;;19823:385;;;;;;:::i;:::-;20141:10;20001:3;19997:21;;;;20135:17;;;20160:10;20154:17;;20132:40;20180:10;20174:17;;;20129:63;;19823:385;;;;1108:14:67;;1101:22;1083:41;;1071:2;1056:18;19823:385:43;943:187:67;2003:18:55;;;:::i;:::-;;;;;;;:::i;3749:105:57:-;;;;;;:::i;:::-;;:::i;:::-;;20738:175:55;;;;;;:::i;:::-;;:::i;18809:98::-;;;;;;:::i;:::-;-1:-1:-1;;;;;18881:19:55;;18809:98;12021:676:54;;;;;;:::i;:::-;;:::i;7058:648:55:-;;;;;;:::i;:::-;;:::i;19740:103::-;;;;;;:::i;:::-;19796:7;19822:14;;;:8;:14;;;;;;;19740:103;24409:868;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12703:209:54:-;;;;;;:::i;:::-;;:::i;3860:111:57:-;;;;;;:::i;:::-;;:::i;14935:228:55:-;;;;;;:::i;:::-;;:::i;13624:232::-;;;;;;:::i;:::-;;:::i;1724:73::-;;;;;;:::i;:::-;;:::i;12328:470::-;;;;;;:::i;:::-;;:::i;12757:5689:43:-;;;;;;:::i;:::-;;:::i;11646:347:54:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10843:32:67;;;10825:51;;10813:2;10798:18;11646:347:54;10679:203:67;18593:1021:43;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;788:19:55:-;;;;;-1:-1:-1;;;;;788:19:55;;;4372:295;;;;;;:::i;:::-;;:::i;1858:1825:54:-;;;;;;:::i;:::-;;:::i;11041:465:55:-;;;;;;:::i;:::-;;:::i;4128:137:57:-;;;;;;:::i;:::-;;:::i;4824:327:55:-;;;:::i;20002:111::-;;;;;;:::i;:::-;;:::i;751:31::-;;;;;-1:-1:-1;;;;;751:31:55;;;9001:278;;;;;;:::i;:::-;;:::i;1937:25::-;;;;;;:::i;:::-;;:::i;19379:115::-;;;;;;:::i;:::-;;:::i;14178:433::-;;;;;;:::i;:::-;;:::i;19202:171::-;;;;;;:::i;:::-;;:::i;2027:20::-;;;:::i;19618:116::-;;;;;;:::i;:::-;;:::i;10936:390:54:-;;;;;;:::i;:::-;;:::i;9838:907::-;;;;;;:::i;:::-;;:::i;20919:112:55:-;;;;;;:::i;:::-;;:::i;23491:262::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25283:1040::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5453:320::-;;;;;;:::i;:::-;;:::i;1320:291:54:-;;;;;;:::i;:::-;;:::i;3977:145:57:-;;;;;;:::i;:::-;;:::i;20119:114:55:-;;;;;;:::i;:::-;20179:7;20205:21;;;:13;:21;;;;;;;20119:114;3616:127:57;;;;;;:::i;:::-;;:::i;18663:140:55:-;;;;;;:::i;:::-;;:::i;6495:386:43:-;;;;;;:::i;:::-;6721:25;6715:4;6708:39;6767:4;6760:19;;;;6615:11;6792:22;6859:4;-1:-1:-1;6843:21:43;6837:28;;6495:386;19500:112:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10405:494::-;;;;;;:::i;:::-;;:::i;8225:3984:43:-;;;;;;:::i;:::-;;:::i;15346:538:55:-;;;;;;:::i;:::-;;:::i;19849:147::-;;;;;;:::i;:::-;;:::i;23767:399::-;;;;;;:::i;:::-;;:::i;2003:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3749:105:57:-;3821:26;3842:4;3821:20;:26::i;:::-;3749:105;:::o;20738:175:55:-;20802:13;20890:14;:3;:12;:14::i;:::-;20841:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;20827:79;;20738:175;;;:::o;12021:676:54:-;12178:7;12205:17;;;:8;:17;;;;;;:29;;12201:64;;12243:22;;-1:-1:-1;;;12243:22:54;;;;;;;;;;;12201:64;12276:25;12304:50;12314:19;12324:8;12314:9;:19::i;:::-;12335:18;;;;:8;:18;;;;;;6250:25:43;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;12304:50:54;6250:25:43;6244:4;6237:39;;;6296:4;6289:19;;;12364:29:54;6321:16:43;;;6382:4;6366:21;;;6360:28;12461:7:54;:17;;;;;:20;12276:78;;-1:-1:-1;6360:28:43;12520:6:54;12495:31;;12491:45;;12535:1;12528:8;;;;;;;12491:45;12546:23;12630:26;:17;12650:6;12630:26;:::i;:::-;12606:19;12573:30;12597:6;12573:21;:30;:::i;:::-;:52;;;;:::i;:::-;12572:85;;;;:::i;:::-;12546:111;-1:-1:-1;;;;;12021:676:54;;;;;;;:::o;7058:648:55:-;7318:1;;:43;;-1:-1:-1;;;7318:43:55;;7272:13;;;;-1:-1:-1;;;;;7318:1:55;;;;:16;;:43;;7335:7;;7344:9;;7355:5;;7318:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7297:64;;7379:15;7389:4;7379:9;:15::i;:::-;7404:22;;;;:15;:22;;;;;:38;;;7480:15;7475:1;7452:25;;;:43;7404:22;-1:-1:-1;7525:19:55;;:58;;7560:23;:14;7577:6;7560:23;:::i;:::-;7525:58;;;7547:10;7525:58;7505:14;;;;:7;:14;;;;;:17;:78;7598:37;;;7621:1;24256:25:67;;24312:2;24297:18;;24290:34;;;7614:5:55;;7598:37;;24229:18:67;7598:37:55;;;;;;;7678:1;7681:14;;;:7;:14;;;;;7671:5;;7650:49;;7678:1;7681:17;;7650:49;;;24256:25:67;;;24312:2;24297:18;;24290:34;;;;24229:18;7650:49:55;;;;;;;7287:419;7058:648;;;;;;;:::o;24409:868::-;24579:27;24609:24;;;:10;:24;;;;;;;;24579:54;;;;;;;;;;;;;;;;;24528:35;;24579:27;:54;;24609:24;24579:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24678:10;:17;-1:-1:-1;;;;;24661:35:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24643:53;;24712:9;24707:531;24731:10;:17;24727:1;:21;24707:531;;;24843:30;24903:12;24917;24931:10;24942:1;24931:13;;;;;;;;:::i;:::-;;;;;;;24886:59;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;24886:59:55;;;;;;;;;24876:70;;24886:59;24876:70;;;;25079:31;;;;:7;:31;;;;;;24876:70;;-1:-1:-1;25079:34:55;;25055:15;25071:1;25055:18;;;;;;;;:::i;:::-;;;;;;;25074:1;25055:21;;;;;;;:::i;:::-;;;;;;;;;:58;;;;25167:31;;;;:7;:31;;;;;;25199:1;25167:34;;25143:15;25159:1;25143:18;;;;;;;;:::i;:::-;;;;;;;25162:1;25143:21;;;;;;;:::i;:::-;;;;:58;-1:-1:-1;24750:3:55;;24707:531;;;;25248:22;24409:868;;;;;:::o;12703:209:54:-;12787:7;12806:15;12851:7;12860;12834:34;;;;;;;;24856:19:67;;;24900:2;24891:12;;24884:28;24937:2;24928:12;;24699:247;12834:34:54;;;;;;;-1:-1:-1;;12834:34:54;;;;;;12824:45;;12834:34;12824:45;;;;12886:16;;;;:7;:16;;;;;:19;;;-1:-1:-1;;;;12703:209:54:o;3860:111:57:-;3939:25;3950:4;3956:7;3939:10;:25::i;:::-;3860:111;;:::o;14935:228:55:-;15013:19;15058:18;;;:13;:18;;;;;;:23;:98;;15138:18;;;;:13;:18;;;;;;15095:40;15105:14;15152:3;15105:9;:14::i;:::-;15121:13;;;;:8;:13;;;;;;6250:25:43;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;15095:40:55;15088:47;;:4;:47;:::i;:::-;:68;;;;:::i;:::-;15058:98;;;15084:1;15058:98;15044:112;14935:228;-1:-1:-1;;;14935:228:55:o;13624:232::-;13730:7;:10;-1:-1:-1;;;;;13730:10:55;13714:12;:10;:12::i;:::-;-1:-1:-1;;;;;13714:26:55;;13710:52;;13749:13;;-1:-1:-1;;;13749:13:55;;;;;;;;;;;13710:52;13776:8;13788:1;13776:13;13772:37;;13798:11;;-1:-1:-1;;;13798:11:55;;;;;;;;;;;13772:37;-1:-1:-1;;;;;13819:19:55;;;;;;;:7;:19;;;;;:30;13624:232::o;1724:73::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1724:73:55;;-1:-1:-1;1724:73:55:o;12328:470::-;12451:16;;-1:-1:-1;;;;;12451:16:55;12437:10;:30;12433:58;;12476:15;;-1:-1:-1;;;12476:15:55;;;;;;;;;;;12433:58;12505:33;12514:6;12522:15;12505:8;:33::i;:::-;12501:234;;;-1:-1:-1;;;;;18881:19:55;;;12554:21;;;;:7;:21;;;;;;;:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12554:37:55;;;;;;;;;;;:21;12628:15;;12613:30;;;;:::i;:::-;12605:39;;;;;;;;;;;;;;-1:-1:-1;12605:39:55;;;:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12605:55:55;-1:-1:-1;;;;;12605:55:55;;;;;;;;12674:30;;:13;:30;;;;;-1:-1:-1;;12674:50:55;;12501:234;12744:47;-1:-1:-1;;;;;18881:19:55;;12775:15;12744:13;:47::i;:::-;12328:470;;;:::o;12757:5689:43:-;16193:9:55;;;;12958:106:43;;;13003:50;13024:4;13030:2;13034:3;;13003:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13003:50:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13039:7:43;;-1:-1:-1;13039:7:43;;;;13003:50;;;13039:7;;13003:50;13039:7;13003:50;;;;;;;;;-1:-1:-1;;13003:50:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13048:4:43;;-1:-1:-1;13048:4:43;;;;13003:50;;13048:4;;;;13003:50;;;;;;;;;-1:-1:-1;13003:20:43;;-1:-1:-1;;;13003:50:43:i;:::-;13164:14;13152:10;13149:30;13139:162;;13212:10;13206:4;13199:24;13282:4;13276;13269:18;13139:162;13372:4;13368:2;13364:13;13337:25;13334:44;13447:2;13443;13439:11;13412:25;13409:42;13477:12;13471:4;13464:26;13559:12;13555:2;13551:21;13543:29;;13599:10;13595:2;13591:19;13585:25;;13684:2;13674:135;;13719:10;13713:4;13706:24;13790:4;13784;13777:18;13674:135;13917:4;13907:8;13904:18;13894:272;;13955:8;13949:4;13942:22;14013:4;14007;13997:21;13991:28;13981:171;;14056:10;14050:4;14043:24;14129:4;14123;14116:18;13981:171;14286:10;14283:1;14279:18;14264:1482;14300:1;14264:1482;;;14339:4;14336:1;14332:12;14327:17;;14412:1;14396:14;14392:22;14379:36;14548:12;14542:4;14535:26;14628:1;14616:10;14612:18;14599:32;14593:4;14586:46;14696:4;14690;14680:21;14751:15;14745:22;14806:11;14798:6;14795:23;14792:182;;;14862:10;14856:4;14849:24;14943:4;14937;14930:18;14792:182;15023:24;;;14999:49;;15195:4;15188:24;;;15274:4;15268;15258:21;15327:20;;15394:28;;;15450:35;;;15447:197;;;15529:10;15523:4;15516:24;15613:4;15607;15600:18;15447:197;15669:37;;;-1:-1:-1;14264:1482:43;;-1:-1:-1;14264:1482:43;;14268:31;14246:1514;;15851:4;15845:11;15918:4;15915:1;15908:15;15966:10;15963:1;15959:18;15953:4;15949:29;16011:4;16008:1;16004:12;16072:1;16065:4;16053:10;16049:21;16046:1;16033:41;16161:1;16155:4;16151:12;16144:4;16141:1;16137:12;16130:34;16232:1;16225:4;16209:14;16205:25;16201:1;16198;16194:9;16181:53;;16362:2;16356:4;16346:8;16313:31;16306:4;16302:1;16299;16295:9;16291:20;16288:1;16283:82;;;16402:24;16062:4:55;15996:101;;16402:24:43;16398:112;;;16442:57;16470:4;16476:2;16480:3;;16485:7;;16494:4;;16442:27;:57::i;:::-;16682:2;16670:15;16667:1763;;;16717:2;16711:4;16704:16;16793:4;16787:11;16954:10;16951:1;16944:21;17003:8;16996:4;16993:1;16989:12;16982:30;17050:4;17043;17040:1;17036:12;17029:26;17128:4;17121;17118:1;17114:12;17107:26;17176:10;17173:1;17169:18;17163:4;17159:29;17221:4;17218:1;17214:12;17282:1;17275:4;17263:10;17259:21;17256:1;17243:41;17359:1;17353:4;17349:12;17399:1;17392:4;17389:1;17385:12;17378:23;17469:1;17462:4;17446:14;17442:25;17438:1;17435;17431:9;17418:53;17545:9;;17538:4;17531:12;;17524:31;17632:4;17628:22;;-1:-1:-1;;17604:22:43;;17592:9;;;17585:17;;17572:79;;17714:1;17711;17707:9;17694:11;17690:27;17684:4;17680:38;17668:50;;17843:4;17840:1;17834:4;17827;17824:1;17820:12;17817:1;17810:4;17804:11;17797:5;17792:56;17782:338;;17875:16;17872:230;;;18011:16;18005:4;18002:1;17987:41;18063:16;18060:1;18053:27;17872:230;-1:-1:-1;18232:8:43;;-1:-1:-1;;;18229:34:43;18219:197;;18300:10;18294:4;18287:24;18393:4;18387;18380:18;18219:197;;16667:1763;12757:5689;;;;;;;;:::o;11646:347:54:-;11728:23;11768:24;11777:5;11784:7;11768:8;:24::i;:::-;11763:53;;11801:15;;-1:-1:-1;;;11801:15:54;;;;;;;;;;;11763:53;11855:16;;11844:79;;-1:-1:-1;;;11844:79:54;;11896:10;11844:79;;;25321:34:67;25371:18;;;25364:34;;;-1:-1:-1;;;;;25434:15:67;;;25414:18;;;25407:43;11855:16:54;;;;11844:51;;25256:18:67;;11844:79:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11826:97;;11978:7;11971:5;-1:-1:-1;;;;;11938:48:54;11954:15;-1:-1:-1;;;;;11938:48:54;;;;;;;;;;;11646:347;;;;:::o;18593:1021:43:-;18729:25;18861:13;18849:10;18846:29;18836:161;;18908:10;18902:4;18895:24;18978:4;18972;18965:18;18836:161;19028:4;19022:11;19010:23;;19063:10;19053:8;19046:28;19110:4;19100:8;19096:19;19144:10;19141:1;19137:18;19188:1;19185;19181:9;19175:4;19168:23;19269:329;19276:1;19269:329;;;19311:4;19308:1;19304:12;19299:17;;19378:1;19363:13;19359:21;19346:35;19449:5;19445:2;19441:14;19414:25;19411:45;19405:4;19398:59;;19516:1;19504:10;19500:18;19487:32;19481:4;19474:46;19577:4;19571;19561:21;19555:28;19551:1;19548;19544:9;19537:47;19269:329;;;19273:2;;18593:1021;;;;;;:::o;4372:295:55:-;4452:7;4460:1;4452:10;;-1:-1:-1;;;;;4452:10:55;4438;:24;4434:48;;4471:11;;-1:-1:-1;;;4471:11:55;;;;;;;;;;;4434:48;4496:10;;-1:-1:-1;;;;;4496:27:55;;;:10;;:27;4492:169;;-1:-1:-1;4552:10:55;;;:7;4539:23;;-1:-1:-1;;;;;;4539:23:55;;;-1:-1:-1;;;;;4552:10:55;;4539:23;;;;4576:17;;;3749:105:57:o;4492:169:55:-;4624:10;:26;;-1:-1:-1;;;;;;4624:26:55;-1:-1:-1;;;;;4624:26:55;;;;;;;;;;4372:295::o;1858:1825:54:-;1954:21;;;;:8;:21;;;;;;:36;;;1950:63;;1999:14;;-1:-1:-1;;;1999:14:54;;;;;;;;;;;1950:63;2023:13;2039:35;2048:12;:10;:12::i;:::-;2062:11;2039:8;:35::i;:::-;2088:20;;2023:51;;-1:-1:-1;;;;;;2088:20:54;:34;:49;;;;;2128:8;2127:9;2088:49;2084:69;;;2146:7;;-1:-1:-1;;;2146:7:54;;;;;;;;;;;2084:69;2164:23;2190:36;2200:12;:10;:12::i;:::-;6250:25:43;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2190:36:54;2279:26;;;;:13;:26;;;;;;2164:62;;-1:-1:-1;2279:35:54;;2308:6;;2279:35;:::i;:::-;2240:36;2250:12;:10;:12::i;:::-;6250:25:43;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2240:36:54;:74;2236:102;;;2323:15;;-1:-1:-1;;;2323:15:54;;;;;;;;;;;2236:102;2348:26;2362:11;2348:13;:26::i;:::-;;2385:12;2400:18;2405:12;:10;:12::i;2400:18::-;2428:25;2456:23;;;:10;:23;;;;;;;;2428:51;;;;;;;;;;;;;;;;;2385:33;;-1:-1:-1;2428:25:54;;:51;;2456:23;2428:51;;2456:23;2428:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2526:20:54;;2428:51;;-1:-1:-1;2490:14:54;;;;-1:-1:-1;;;;;;2526:20:54;;-1:-1:-1;2526:42:54;;-1:-1:-1;2526:42:54;2567:1;2526:42;;;2563:1;2526:42;2514:54;;;;2578:938;2590:7;:14;2586:1;:18;2578:938;;;2625:19;2647:7;2655:1;2647:10;;;;;;;;:::i;:::-;;;;;;;2625:32;;2671:15;2716:11;2729:4;2735:11;2699:48;;;;;;;;;25902:19:67;;;25946:2;25937:12;;25930:28;;;;25983:2;25974:12;;25967:28;26020:2;26011:12;;25717:312;2699:48:54;;;;-1:-1:-1;;2699:48:54;;;;;;;;;2689:59;;2699:48;2689:59;;;;2766:20;;2689:59;;-1:-1:-1;;;;;;2766:20:54;:34;;;;:46;;;2804:8;2766:46;:84;;;;-1:-1:-1;2816:16:54;;;;:7;:16;;;;;:19;:34;;;2766:84;2762:148;;;2877:18;;-1:-1:-1;;;2877:18:54;;;;;;;;;;;2762:148;2929:8;2928:9;2927:30;;;;;2956:1;2942:11;:15;2927:30;2923:61;;;2966:18;;-1:-1:-1;;;2966:18:54;;;;;;;;;;;2923:61;3007:1;3002;:6;2998:508;;3032:11;3047:1;3032:16;3028:30;;3050:8;;;;3028:30;3080:1;3085;3080:6;3076:72;;3122:12;:10;:12::i;:::-;-1:-1:-1;;;;;3093:55:54;3109:11;3093:55;3136:11;3093:55;;;;616:25:67;;604:2;589:18;;470:177;3093:55:54;;;;;;;;3076:72;3170:1;3175;3170:6;3166:71;;3211:12;:10;:12::i;:::-;-1:-1:-1;;;;;3183:54:54;3198:11;3183:54;3225:11;3183:54;;;;616:25:67;;604:2;589:18;;470:177;3183:54:54;;;;;;;;3166:71;3255:76;3277:11;3290;3303:1;3306:15;3323:7;3255:21;:76::i;:::-;2998:508;;;3370:82;3392:11;3405:4;3411:11;3424:1;3427:7;:14;3443:8;3370:21;:82::i;:::-;3470:21;3480:11;3470:21;;:::i;:::-;;;2998:508;2611:905;;2578:938;2606:3;;2578:938;;;3547:1;3529:7;:14;:19;;:34;;;;-1:-1:-1;3552:11:54;;;3529:34;:54;;;;;3567:6;3577;3567:16;;3529:54;3525:83;;;3592:16;;-1:-1:-1;;;3592:16:54;;;;;;;;;;;3525:83;3651:15;3661:4;3651:9;:15::i;:::-;-1:-1:-1;;;;;3623:53:54;3638:11;3623:53;3668:7;3623:53;;;;;;:::i;:::-;;;;;;;;1940:1743;;;;;;1858:1825;;:::o;11041:465:55:-;11122:6;11144:37;11154:6;11162:18;11175:4;11162:12;:18::i;11144:37::-;11185:1;11144:42;11140:66;;11195:11;;-1:-1:-1;;;11195:11:55;;;;;;;;;;;11140:66;11230:12;:10;:12::i;:::-;-1:-1:-1;;;;;11220:22:55;:6;-1:-1:-1;;;;;11220:22:55;;11216:114;;11258:36;11264:6;11272:18;11285:4;11272:12;:18::i;:::-;11292:1;11258:5;:36::i;:::-;-1:-1:-1;11315:4:55;11308:11;;11216:114;11345:1;;-1:-1:-1;;;;;11345:1:55;:8;11354:6;11362:19;11376:4;11362:13;:19::i;:::-;11345:37;;-1:-1:-1;;;;;;11345:37:55;;;;;;;-1:-1:-1;;;;;26226:32:67;;;11345:37:55;;;26208:51:67;26275:18;;;26268:34;26181:18;;11345:37:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11344:38;11340:42;;11399:18;11412:4;11399:12;:18::i;:::-;11392:25;;11432:1;11428:29;;;11435:22;11441:6;11449:4;11455:1;11435:5;:22::i;:::-;11472:27;;11494:4;;-1:-1:-1;;;;;11472:27:55;;;;;;;;11041:465;;;;:::o;4128:137:57:-;4198:14;4233:25;4253:4;4233:19;:25::i;4824:327:55:-;4892:7;:10;4869:7;;-1:-1:-1;;;;;4892:10:55;:24;4888:50;;4925:13;;-1:-1:-1;;;4925:13:55;;;;;;;;;;;4888:50;4972:16;;5035:4;;5015:26;;-1:-1:-1;;;5015:26:55;;-1:-1:-1;;;;;5035:4:55;;;5015:26;;;616:25:67;4972:16:55;;;4961:53;;5015:4;;:14;;589:18:67;;5015:26:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4961:81;;;;;;;;;;;;;616:25:67;;604:2;589:18;;470:177;4961:81:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4948:7;4956:1;4948:10;:94;;-1:-1:-1;;;;;;4948:94:55;-1:-1:-1;;;;;4948:94:55;;;;;;5053:1;;:17;;;-1:-1:-1;;;5053:17:55;;;;:1;;;;;:15;;:17;;;;;-1:-1:-1;;5053:17:55;;;;;;;-1:-1:-1;5053:1:55;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5085:32;5106:7;5114:1;5106:10;;;;;;;:::i;:::-;;;5085:32;;-1:-1:-1;;;;;5106:10:55;;;10825:51:67;;10813:2;10798:18;5085:32:55;;;;;;;-1:-1:-1;5134:7:55;:10;-1:-1:-1;;;;;5134:10:55;;4824:327::o;20002:111::-;20062:7;20088:15;;;:7;:15;;;;;20062:7;20088:18;;;;20002:111;-1:-1:-1;;20002:111:55:o;9001:278::-;9072:24;9099:19;9110:7;9099:10;:19::i;:::-;9072:46;;9128:9;9147:83;9159:7;:14;9155:1;:18;9147:83;;;9194:25;9199:7;9207:1;9199:10;;;;;;;;:::i;:::-;;;;;;;9211:7;9194:4;:25::i;:::-;9175:3;;9147:83;;;9243:5;;9239:33;;9250:22;9255:7;9264;9250:4;:22::i;:::-;9062:217;;9001:278;;:::o;1937:25::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1937:25:55;;-1:-1:-1;1937:25:55;:::o;19379:115::-;19437:7;19463:21;;;:15;:21;;;;;19437:7;19463:24;;14178:433;14257:7;14276:22;14301:19;14312:7;14301:10;:19::i;:::-;14276:44;;14330:9;14354;14349:233;14369:5;:12;14365:1;:16;14349:233;;;14425:1;14421;14406:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;14402:24;;14450:5;14456:1;14450:8;;;;;;;;:::i;:::-;;;;;;;14440:18;;14497:7;14476:8;:17;14485:7;14476:17;;;;;;;;;;;;:28;14472:39;14506:5;14472:39;14534:37;14555:6;14563:7;14534:20;:37::i;:::-;14525:46;-1:-1:-1;14383:3:55;;14349:233;;;-1:-1:-1;14598:6:55;;14178:433;-1:-1:-1;;;;14178:433:55:o;19202:171::-;19281:4;19352:1;19301:47;19311:9;19322:25;19335:11;19322:12;:25::i;19301:47::-;:52;19297:69;;-1:-1:-1;19362:4:55;19355:11;;2027:20;;;;;;;:::i;19618:116::-;19711:16;;;;:10;:16;;;;;;;;;19704:23;;;;;;;;;;;;;;;;;19676:16;;19704:23;;;19711:16;19704:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19618:116;;;:::o;10936:390:54:-;10997:22;11031:21;11055:19;11066:7;11055:10;:19::i;:::-;11031:43;;11101:1;11084:18;;11112:128;11150:4;:11;11133:14;:28;11112:128;;;11195:34;11208:4;11213:14;11208:20;;;;;;;;:::i;:::-;;;;;;;11195:12;:34::i;:::-;;11163:16;;;;;11112:128;;;11249:22;11263:7;11249:13;:22::i;:::-;;11298:21;11311:7;9838:907;9893:22;9944:17;;;:8;:17;;;;;;9975:11;;;9971:32;;9995:8;;-1:-1:-1;;;9995:8:54;;;;;;;;;;;9971:32;10017:16;;;;:8;:16;;;;;;:26;;;10013:40;;-1:-1:-1;10052:1:54;;9838:907;-1:-1:-1;;9838:907:54:o;10013:40::-;10064:21;10078:6;10064:13;:21::i;:::-;-1:-1:-1;10140:33:54;;;;;;;24856:19:67;;;24891:12;;;24884:28;;;10140:33:54;;;;;;;;;24928:12:67;;;;10140:33:54;;;10129:46;;;;;-1:-1:-1;10213:36:54;10223:17;24884:28:67;10223:9:54;:17::i;:::-;6250:25:43;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;10213:36:54;10332:31;;;;:7;:31;;;;;10186:63;;-1:-1:-1;10364:1:54;10332:34;;10314:52;;:15;:52;:::i;:::-;10276:31;;;;:7;:31;;;;;:34;:91;;;;:::i;:::-;10259:108;;10399:16;10382:14;:33;10378:97;;;10448:16;10431:33;;10378:97;10485:31;;;;:7;:31;;;;;10522:15;;10517:1;10485:34;:52;10552:18;;10548:191;;10586:142;10617:17;10627:6;10617:9;:17::i;:::-;10636:18;10646:7;10636:9;:18::i;:::-;10656:6;10664:14;10680:34;;;;;;-1:-1:-1;;;26898:29:67;;26952:2;26943:12;;26696:265;10680:34:54;;;;;;;;;;;;;10586:13;:142::i;:::-;9917:828;;;9838:907;;;:::o;20919:112:55:-;21014:10;;-1:-1:-1;;;21014:10:55;;;;;;;;;;;23491:262;23558:24;23618:7;:14;-1:-1:-1;;;;;23602:31:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23594:39;;23648:9;23643:104;23667:7;:14;23663:1;:18;23643:104;;;23713:23;23725:7;23733:1;23725:10;;;;;;;;:::i;:::-;;;;;;;23713:11;:23::i;:::-;23702:5;23708:1;23702:8;;;;;;;;:::i;:::-;;;;;;;;;;:34;23683:3;;23643:104;;;;23491:262;;;:::o;25283:1040::-;25355:25;;:::i;:::-;25403:19;25415:6;25403:11;:19::i;:::-;25392:30;-1:-1:-1;;;;;;25436:18:55;;25432:39;25456:15;25432:39;6250:25:43;6244:4;6237:39;6296:4;6289:19;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;25505:34:55;;:32;:34::i;:23::-;:32;:34::i;:::-;25481:18;;:21;;:58;25549:22;25574:19;25587:6;-1:-1:-1;;;;;18881:19:55;;25574;:::i;:::-;25640:1;25607:23;;;:7;:23;;;;;:30;25549:44;;-1:-1:-1;25607:34:55;25603:137;;25702:23;;;;:7;:23;;;;;:26;;25682:47;;25702:23;:26;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;25702:26:55;25682:19;:47::i;:::-;25657:18;;:22;;:72;25603:137;25768:19;;;25785:1;25768:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;25768:19:55;;;;;;;;;;;;-1:-1:-1;;25749:16:55;;;:38;25853:18;;;;:10;:18;;;;;:25;-1:-1:-1;;;;;25837:42:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;25797:8;:16;;;25814:1;25797:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:82;;;;:37;25941:18;;;:10;:18;;;;;;:25;-1:-1:-1;;;;;25928:39:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25889:8;:16;;;25906:1;25889:19;;;;;;;;:::i;:::-;;;;;;;:36;;:78;;;;25983:9;25978:339;26002:18;;;;:10;:18;;;;;:25;25998:29;;25978:339;;;26094:15;;;;:7;:15;;;;;:29;;:18;;;:27;:29::i;:::-;26048:8;:16;;;26065:1;26048:19;;;;;;;;:::i;:::-;;;;;;;:37;;;26086:1;26048:40;;;;;;;;:::i;:::-;;;;;;;26089:1;26048:43;;;;;;;:::i;:::-;;;;:75;;;;26138:15;26183:4;26189:6;26197:10;:18;26208:6;26197:18;;;;;;;;;;;26216:1;26197:21;;;;;;;;:::i;:::-;;;;;;;;;26166:53;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;26166:53:55;;;;;;;;;26156:64;;26166:53;26156:64;;;;26276:16;;;;:7;:16;;;;;;26156:64;;-1:-1:-1;26276:30:55;;:19;;:30;26234:8;:16;;;26251:1;26234:19;;;;;;;;:::i;:::-;;;;;;;:36;;;26271:1;26234:39;;;;;;;;:::i;:::-;;;;;;;;;;:72;-1:-1:-1;26029:3:55;;25978:339;;5453:320;5521:11;5548;-1:-1:-1;;;;;5548:23:55;;5575:1;5548:28;5544:46;;5585:5;;-1:-1:-1;;;5585:5:55;;;;;;;;;;;5544:46;-1:-1:-1;;;;;;18881:19:55;;5638:13;;;;:8;:13;;;;;;:18;5634:43;;5665:12;;-1:-1:-1;;;5665:12:55;;;;;;;;;;;5634:43;5688:23;5702:3;5707;5688:13;:23::i;:::-;5723:11;;5721:13;;;;;:::i;:::-;;;;-1:-1:-1;5750:16:55;;5762:3;;5750:16;;;;;5453:320;;;:::o;1320:291:54:-;1430:20;:33;;-1:-1:-1;;;;;;1430:33:54;-1:-1:-1;;;;;1430:33:54;;;;;1473:32;1484:11;1497:7;1473:10;:32::i;:::-;1522:20;1515:27;;-1:-1:-1;;;;;;1515:27:54;;;1557:47;;-1:-1:-1;;;;;10843:32:67;;10825:51;;1580:11:54;;1568:10;;1557:47;;10813:2:67;10798:18;1557:47:54;;;;;;;;1320:291;;;:::o;3977:145:57:-;4055:14;4090:25;4101:4;4107:7;4090:10;:25::i;3616:127::-;3682:13;3715:21;3731:4;3715:15;:21::i;18663:140:55:-;18714:7;-1:-1:-1;;;;;18740:21:55;;:56;;18793:1;18740:56;;;18772:1;18733:63;18663:140;-1:-1:-1;;18663:140:55:o;19500:112::-;19592:13;;;;:7;:13;;;;;;;;;19585:20;;;;;;;;;;;;;;;;;19557:16;;19585:20;;;19592:13;19585:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19585:20:55;;;;;;;;;;;;;;;;;;;;;;19500:112;;;:::o;10405:494::-;10479:17;;;;:8;:17;;;;;;:22;;10475:54;;10510:19;;-1:-1:-1;;;10510:19:55;;;;;;;;;;;10475:54;10540:22;10565:19;10576:7;10565:10;:19::i;:::-;10540:44;;10594:9;10618;10613:249;10633:5;:12;10629:1;:16;10613:249;;;10689:1;10685;10670:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;10666:24;;10743:6;10708:32;10718:12;:10;:12::i;:::-;6250:25:43;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;10708:32:55;:41;10704:71;;;10758:17;;-1:-1:-1;;;10758:17:55;;;;;;;;;;;10704:71;10798:21;10803:7;10812:6;10798:4;:21::i;:::-;10789:30;;10843:5;10849:1;10843:8;;;;;;;;:::i;:::-;;;;;;;10833:18;;10647:3;;;;;10613:249;;;;10871:21;10876:7;10885:6;10871:4;:21::i;:::-;;10465:434;;10405:494;;:::o;8225:3984:43:-;16193:9:55;;;;8397:122:43;;;8442:66;8463:4;8469:2;8473:11;8481:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;8473:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;8503:4;;8442:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8442:20:43;;-1:-1:-1;;;8442:66:43:i;:::-;8652:4;8648:2;8644:13;8617:25;8614:44;8727:2;8723;8719:11;8692:25;8689:42;8757:12;8751:4;8744:26;8839:12;8835:2;8831:21;8823:29;;8879:10;8875:2;8871:19;8865:25;;8964:2;8954:135;;8999:10;8993:4;8986:24;9070:4;9064;9057:18;8954:135;9197:4;9187:8;9184:18;9174:272;;9235:8;9229:4;9222:22;9293:4;9287;9277:21;9271:28;9261:171;;9336:10;9330:4;9323:24;9409:4;9403;9396:18;9261:171;9555:2;9549:4;9542:16;9614:4;9608;9598:21;9575:44;;9661:15;9655:22;9708:11;9700:6;9697:23;9694:158;;;9756:10;9750:4;9743:24;9829:4;9823;9816:18;9694:158;9910:6;9897:11;9893:24;9876:15;9869:49;;10039:10;10033:4;10026:24;10104:4;10098;10088:21;10067:42;;10155:13;10149:20;10229:6;10212:15;10208:28;10275:15;10259:14;10256:35;10253:173;;;10327:10;10321:4;10314:24;10403:4;10397;10390:18;10253:173;10443:37;;;-1:-1:-1;;10560:4:43;10553:20;;;10653:2;10647:4;10637:8;-1:-1:-1;;;;;;;;;;;10597:4:43;10591;10586:70;10962:2;10950:15;10947:1246;;;11040:4;11034:11;11151:10;11148:1;11141:21;11200:8;11193:4;11190:1;11186:12;11179:30;11247:4;11240;11237:1;11233:12;11226:26;11290:2;11283:4;11280:1;11276:12;11269:24;11331:6;11324:4;11321:1;11317:12;11310:28;11376:4;11369;11366:1;11362:12;11355:26;11459:11;11453:4;11449:22;11442:4;11429:11;11425:22;11418:4;11415:1;11411:12;11398:74;11606:4;11603:1;11589:11;11583:4;11579:22;11572:4;11569:1;11565:12;11562:1;11558:2;11551:5;11546:65;11536:347;;11638:16;11635:230;;;11774:16;11768:4;11765:1;11750:41;11826:16;11823:1;11816:27;11635:230;11995:8;;-1:-1:-1;;;11992:34:43;11982:197;;12063:10;12057:4;12050:24;12156:4;12150;12143:18;11982:197;;10947:1246;8225:3984;;;;;;:::o;15346:538:55:-;15434:16;15481:14;;;:8;:14;;;;;;15401:21;;15453:1;;15505:154;15523:8;:4;15530:1;15523:8;:::i;:::-;15512:6;:20;15505:154;;15562:16;;;;:8;:16;;;;;;15548:37;;15580:5;15548:37;15599:10;;;:::i;:::-;15632:16;;;;:8;:16;;;;;;;15599:10;;-1:-1:-1;15505:154:55;;;15689:8;-1:-1:-1;;;;;15675:23:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15675:23:55;;15668:30;;15709:13;;;15732:146;15754:8;15745:6;:17;15732:146;;;15818:14;;;;:8;:14;;;;;;15788:4;15813:1;15793:17;15804:6;15793:8;:17;:::i;:::-;:21;;;;:::i;:::-;15788:27;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;15853:14;;;;:8;:14;;;;;;;;15764:8;;15732:146;;;15424:460;;15346:538;;;:::o;19849:147::-;19906:7;19936:8;19929:4;:15;19925:43;;;19953:15;19960:8;19953:4;:15;:::i;19925:43::-;-1:-1:-1;19985:4:55;19849:147::o;23767:399::-;-1:-1:-1;;;;;18881:19:55;;23922:14;23990:15;;;:7;:15;;;;;:22;23882:24;;18881:19;-1:-1:-1;;;;;23974:39:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23966:47;;24028:9;24023:137;24047:15;;;;:7;:15;;;;;:22;24043:26;;24023:137;;;24118:15;;;;:7;:15;;;;;:18;;24101:48;;24113:24;;24134:1;;24118:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24118:18:55;;18809:98;24113:24;24139:9;24101:11;:48::i;:::-;24090:5;24096:1;24090:8;;;;;;;;:::i;:::-;;;;;;;;;;:59;24071:3;;24023:137;;7856:445;7923:14;;;;:8;:14;;;;;;:19;;7919:46;;7951:14;;-1:-1:-1;;;7951:14:55;;;;;;;;;;;7919:46;7979:14;;;;:8;:14;;;;;;:22;;;7975:54;;8010:19;;-1:-1:-1;;;8010:19:55;;;;;;;;;;;7975:54;8043:19;;;;:13;:19;;;;;;:40;;8039:63;;8092:10;;-1:-1:-1;;;8092:10:55;;;;;;;;;;;8039:63;8116:28;8125:12;:10;:12::i;:::-;8139:4;8116:8;:28::i;:::-;8112:56;;;8153:15;;-1:-1:-1;;;8153:15:55;;;;;;;;;;;8112:56;8183:1;;-1:-1:-1;;;;;8183:1:55;:8;8192:12;:10;:12::i;:::-;8206:19;8220:4;8206:13;:19::i;:::-;8183:43;;-1:-1:-1;;;;;;8183:43:55;;;;;;;-1:-1:-1;;;;;26226:32:67;;;8183:43:55;;;26208:51:67;26275:18;;;26268:34;26181:18;;8183:43:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8178:70;;8235:13;;-1:-1:-1;;;8235:13:55;;;;;;;;;;;8178:70;8259:35;8275:12;:10;:12::i;:::-;8289:4;8259:15;:35::i;447:696:32:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;-1:-1:-1;;;;;627:18:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:32;-1:-1:-1;604:41:32;-1:-1:-1;765:28:32;;;781:2;765:28;820:280;-1:-1:-1;;851:5:32;-1:-1:-1;;;985:2:32;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:32;820:280;1064:21;-1:-1:-1;1120:6:32;447:696;-1:-1:-1;;;447:696:32:o;8539:205:55:-;8613:14;;;;:8;:14;;;;;;:19;;8609:54;;8641:22;;-1:-1:-1;;;8641:22:55;;;;;;;;;;;8609:54;8673:64;8679:12;:10;:12::i;:::-;8693:4;8699:7;8708:28;;;;;;-1:-1:-1;;;27425:23:67;;27473:1;27464:11;;27223:258;8708:28:55;;;;;;;;;;;;;8673:5;:64::i;1617:235:54:-;1671:7;1694;;-1:-1:-1;;;;;;1694:7:54;-1:-1:-1;;;1694:33:54;:71;;;;-1:-1:-1;1731:20:54;;-1:-1:-1;;;;;1731:20:54;:34;;1694:71;1690:129;;;-1:-1:-1;1788:20:54;;-1:-1:-1;;;;;1788:20:54;;1617:235::o;1690:129::-;-1:-1:-1;1835:10:54;;1617:235::o;12804:488:55:-;12883:15;;;;:8;:15;;;;;;:20;12879:52;;12912:19;;-1:-1:-1;;;12912:19:55;;;;;;;;;;;12879:52;12941:15;;;;:8;:15;;;;;:26;;;12981:17;;;12977:309;;13014:20;;;;:10;:20;;;;;;;:32;;;;;;;;;;;;;;;;;13060:7;;13068:20;13025:8;13068:10;:20::i;:::-;13089:1;13068:23;;;;;;;;:::i;:::-;;;;;;;13060:32;;;;;;;;;;;13098:16;13108:5;13098:9;:16::i;:::-;13060:55;;;;;;;;-1:-1:-1;13060:55:55;;;;;;;;;;;;-1:-1:-1;;;;;;13060:55:55;-1:-1:-1;;;;;13060:55:55;;;;;;;;;;;13133:20;;;:13;:20;;;;;;;:41;13129:54;;12804:488;;:::o;13129:54::-;-1:-1:-1;13196:14:55;;;;:7;:14;;;;;13216:10;13196:30;;13260:15;13255:1;13240:17;;;:35;12804:488::o;16215:1677::-;-1:-1:-1;;;16424:7:55;;-1:-1:-1;;;;;;16424:7:55;:42;16420:79;16482:7;16420:79;16513:9;16508:1378;16537:1;16524:3;:10;:14;16508:1378;;;16555:17;16575:3;16579:1;16575:6;;;;;;;;:::i;:::-;;;;;;;16555:26;;16595:18;16616:7;16624:1;16616:10;;;;;;;;:::i;:::-;;;;;;;16595:31;;16661:1;-1:-1:-1;;;;;16645:18:55;:4;-1:-1:-1;;;;;16645:18:55;;;:38;;;;-1:-1:-1;;;;;;16667:16:55;;;;16645:38;16644:70;;;;-1:-1:-1;16689:19:55;;;;:8;:19;;;;;;:24;16644:70;16640:104;;;16723:21;;-1:-1:-1;;;16723:21:55;;;;;;;;;;;16640:104;16775:8;16763:9;:20;16759:479;;;16856:7;;-1:-1:-1;;;;;;16856:7:55;-1:-1:-1;;;16856:39:55;;;16855:89;;-1:-1:-1;16901:7:55;;-1:-1:-1;;;;;;16901:7:55;-1:-1:-1;;;16901:42:55;;16855:89;:161;;;-1:-1:-1;16977:7:55;;-1:-1:-1;;;;;;16977:7:55;-1:-1:-1;;;16977:38:55;;16855:161;:213;;;-1:-1:-1;17021:7:55;;-1:-1:-1;;;;;;17021:7:55;-1:-1:-1;;;17021:46:55;;16855:213;:281;;;-1:-1:-1;17101:7:55;;-1:-1:-1;;;;;;17101:7:55;-1:-1:-1;;;17101:34:55;;16855:281;16803:395;;17184:14;;-1:-1:-1;;;17184:14:55;;;;;;;;;;;16803:395;17217:7;;;;;16759:479;17256:7;;-1:-1:-1;;;;;;17256:7:55;-1:-1:-1;;;17256:29:55;;:66;;-1:-1:-1;17289:7:55;;-1:-1:-1;;;;;;17289:7:55;-1:-1:-1;;;17289:33:55;17256:66;17252:564;;;17346:19;;;;:8;:19;;;;;;:32;;;17342:460;;17414:20;17424:9;17414;:20::i;:::-;17407:72;;-1:-1:-1;;;17407:72:55;;-1:-1:-1;;;;;27744:15:67;;;17407:72:55;;;27726:34:67;17461:4:55;27776:18:67;;;27769:43;27828:18;;;27821:34;;;17407:41:55;;;;;;;27661:18:67;;17407:72:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17402:158;;17514:23;;-1:-1:-1;;;17514:23:55;;;;;;;;;;;17402:158;17342:460;;;17606:9;:17;;-1:-1:-1;;17606:17:55;;;17645:100;17662:12;:10;:12::i;:::-;17676:20;17686:9;17676;:20::i;:::-;17698:19;;;;:8;:19;;;;;;;17719:10;;17731:13;;17742:1;;17731:8;17698:19;17731:13;:::i;17645:100::-;17767:9;:16;;-1:-1:-1;;17767:16:55;17779:4;17767:16;;;17342:460;-1:-1:-1;;17858:3:55;;16508:1378;;43437:310:43;43637:104;;3689:755:54;3878:24;;3895:7;3878:24;3939:37;;;;;;;24856:19:67;;;24891:12;;;24884:28;;;3939:37:54;;;;;;;;;24928:12:67;;;;3939:37:54;;3929:48;;;;;;;;;-1:-1:-1;4011:16:54;;;:7;:16;;;;;;4028:1;4011:19;;3992:15;:38;3988:64;;4039:13;;-1:-1:-1;;;4039:13:54;;;;;;;;;;;3988:64;4066:5;4075:1;4066:10;4062:227;;4092:77;4114:11;4127:7;4136;4145:6;4153:15;4092:21;:77::i;:::-;4062:227;;;4200:78;4223:11;4236:7;4245;4254:6;4262:15;4200:22;:78::i;:::-;4299:16;;;;:7;:16;;;;;;;;4321:15;4316:1;4299:19;;;:37;4346:10;:28;;;;;:41;;;;;;;;;;;;;;;;;;;4403:34;;616:25:67;;;4416:11:54;;4403:34;;589:18:67;4403:34:54;;;;;;;3868:576;3689:755;;;;;:::o;7254:867::-;7497:17;7513:1;7497:13;:17;:::i;:::-;7477:8;:15;:38;7473:59;;7524:8;;-1:-1:-1;;;7524:8:54;;;;;;;;;;;7473:59;7542:30;7630:4;7638:11;7651:8;7660:9;7668:1;7660:5;:9;:::i;:::-;7651:19;;;;;;;;:::i;:::-;;;;;;;7597:74;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;7597:74:54;;;;;;7587:85;;7597:74;7587:85;;;;7682:18;7703:31;;;:7;:31;;;;;:34;7587:85;;-1:-1:-1;7760:6:54;7751:15;;:34;;;;-1:-1:-1;7770:15:54;;7751:34;7747:47;;;7787:7;;;;7747:47;7816:6;7807;:15;7803:40;;;7831:12;;-1:-1:-1;;;7831:12:54;;;;;;;;;;;7803:40;7872:6;7858:10;:20;7854:261;;7894:62;;;;;;;;;;;7937:15;7894:62;;;;;;;;-1:-1:-1;7894:62:54;;;;;;:31;;;:7;:31;;;;;;;:62;;;;:::i;:::-;-1:-1:-1;7970:33:54;7983:8;7992:9;8000:1;7992:5;:9;:::i;:::-;7983:19;;;;;;;;:::i;7970:33::-;-1:-1:-1;8017:87:54;8047:8;8056:9;8064:1;8056:5;:9;:::i;:::-;8047:19;;;;;;;;:::i;:::-;;;;;;;8068:11;8081:22;8017:29;:87::i;18120:381:55:-;18205:17;;;;:13;:17;;;;;:27;;18226:6;;18205:17;:27;;18226:6;;18205:27;:::i;:::-;;;;-1:-1:-1;;18247:12:55;;;;:8;:12;;;;;;:17;-1:-1:-1;18247:34:55;;;;;18273:8;18268:2;:13;18247:34;18243:213;;;18297:17;18311:2;18297:13;:17::i;:::-;;18328:37;18340:12;:10;:12::i;:::-;18354:2;18358:6;18328:11;:37::i;18243:213::-;18416:29;18428:4;18434:2;18438:6;18416:11;:29::i;:::-;18483:2;18477:4;-1:-1:-1;;;;;18470:24:55;;18487:6;18470:24;;;;616:25:67;;604:2;589:18;;470:177;11690:412:55;11751:14;11781;;;:8;:14;;;;;;:22;;;11777:36;;-1:-1:-1;11812:1:55;;11690:412;-1:-1:-1;11690:412:55:o;11777:36::-;11871:13;;;;:7;:13;;;;;:16;;11865:1;11851:16;;;;11833:34;;:15;:34;:::i;:::-;11832:55;;;;:::i;:::-;11823:64;;11901:6;11911:1;11901:11;11897:25;;-1:-1:-1;11921:1:55;;11690:412;-1:-1:-1;11690:412:55:o;11897:25::-;11932:13;;;;:7;:13;;;;;11951:15;;11946:1;11932:16;:34;12021:29;;-1:-1:-1;;;12021:29:55;;;28586:24:67;11977:74:55;;11999:4;;;;12013:6;;28626:11:67;;12021:29:55;28384:259:67;11977:74:55;12082:4;12066:29;12088:6;12066:29;;;;616:25:67;;604:2;589:18;;470:177;12066:29:55;;;;;;;;11690:412;;;:::o;32884:203:43:-;33027:53;33049:1;33053:4;33059:2;33063;33067:6;33075:4;33027:13;:53::i;21270:2215:55:-;21329:25;;:::i;:::-;21418:17;:6;:15;:17::i;:::-;21394:18;;:41;:18;21515:15;;;:7;21394:21;21515:15;;;;:29;;:18;;:29;21491:18;;:21;;:53;21650:57;:46;21660:17;21670:6;21660:9;:17::i;21650:57::-;21626:18;;:21;;:81;21814:47;:36;21824:17;21834:6;21824:9;:17::i;21814:47::-;21790:18;;:21;;:71;21967:74;21968:61;21984:6;21992:36;22002:17;21984:6;22002:9;:17::i;21967:74::-;21943:18;;:21;;:98;22148:84;22149:71;22165:6;22173:46;22183:17;22165:6;22183:9;:17::i;22148:84::-;22124:18;;:21;;:108;22306:23;;;;:15;22124:21;22306:23;;;;22305:39;;22306:26;;22305:39;22281:18;;:21;;:63;22493:16;;;;22300:1;22281:21;22493:16;;;;;;;;22529:42;;;;;24856:19:67;;;24891:12;;;24884:28;;;22529:42:55;;;;;;;;;24928:12:67;;;;22529:42:55;;22519:53;;;;;;22511:62;;:7;:62;;;;;;:65;22463:135;;22477:100;;:15;:100::i;22463:135::-;22439:18;;:21;;:159;22678:15;;;;22458:1;22439:21;22678:15;;;;:29;;22694:1;22678:18;;:29;22654:18;;:21;;:53;22908:21;;;;:13;22654:21;22908;;;;;:32;;:30;:32::i;:::-;22883:18;;:22;;:57;23009:1;;;23027:23;;;:15;22883:22;23027:23;;;;;;:26;23009:45;;-1:-1:-1;;;23009:45:55;;;;;616:25:67;;;;-1:-1:-1;;;;;23009:1:55;;;;:17;;589:18:67;;23009:45:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23009:45:55;;;;;;;;;;;;:::i;:::-;:50;;;;;22985:21;;;;:74;;;;23132:15;;;;:7;:15;;;;;23107:40;;;;;;;;;;;;;;;;;23132:15;;23107:40;;23132:15;23107:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23107:40:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23107:22:55;;;:40;23200:16;;23187:7;;:40;;23195:31;;23220:6;;-1:-1:-1;;;;;23200:16:55;23195:31;:::i;:::-;23187:40;;;;;;;;;;;23158:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23158:69:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23158:26:55;;;:69;23331:18;;;;:10;:18;;;;;;;;;23308:42;;;;;;;;;;;;;;;;;;;;;;23331:18;23308:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:42::i;:::-;23283:22;;;:67;23436:42;23459:18;23470:6;23459:10;:18::i;:::-;23436:22;:42::i;:::-;23416:17;;;:62;:8;21270:2215;-1:-1:-1;21270:2215:55:o;2407:149:32:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:32;;343:2;2497:11;:52::i;9406:993:55:-;9475:14;9505;;;:8;:14;;;;;;:19;;9501:51;;9533:19;;-1:-1:-1;;;9533:19:55;;;;;;;;;;;9501:51;9571:14;;;;:8;:14;;;;;;:22;;:70;;9606:35;9627:7;9636:4;9606:20;:35::i;:::-;9571:70;;;9596:7;9571:70;9655:14;;;;:8;:14;;;;;;9562:79;;-1:-1:-1;9655:22:55;;9651:698;;9693:4;:21;9715:15;9725:4;9715:9;:15::i;:::-;9732:12;:10;:12::i;:::-;9746:8;:14;9755:4;9746:14;;;;;;;;;;;;9762:6;9770:24;;;;;;-1:-1:-1;;;31636:19:67;;31680:1;31671:11;;31434:254;9770:24:55;;;;;;;;;;;;;9693:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9651:698;;;9826:17;9846:7;:24;9854:15;9864:4;9854:9;:15::i;:::-;-1:-1:-1;;;;;9846:24:55;;;;;;;;;;;;-1:-1:-1;9846:24:55;;:29;:78;;9900:7;:24;9908:15;9918:4;9908:9;:15::i;:::-;-1:-1:-1;;;;;9900:24:55;-1:-1:-1;;;;;9900:24:55;;;;;;;;;;;;;9846:78;;;9878:19;;;:7;:19;;;;9846:78;9826:98;-1:-1:-1;9950:19:55;9826:98;9950:7;:19;:::i;:::-;9938:31;-1:-1:-1;9983:20:55;10006:19;9938:31;10006:7;:19;:::i;:::-;9983:42;;10054:12;10043:7;:23;10039:40;;10075:4;;-1:-1:-1;;;10075:4:55;;;;;;;;;;;10039:40;10145:15;10155:4;10145:9;:15::i;:::-;10171:4;;10138:49;;-1:-1:-1;;;10138:49:55;;-1:-1:-1;;;;;10171:4:55;;;10138:49;;;26208:51:67;26275:18;;;26268:34;;;10138:32:55;;;;;26181:18:67;;10138:49:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;;;10222:15;10232:4;10222:9;:15::i;:::-;-1:-1:-1;;;;;10215:32:55;;10248:12;:10;:12::i;:::-;10215:60;;-1:-1:-1;;;;;;10215:60:55;;;;;;;-1:-1:-1;;;;;26226:32:67;;;10215:60:55;;;26208:51:67;26275:18;;;26268:34;;;26181:18;;10215:60:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10094:244;;10315:23;;-1:-1:-1;;;10315:23:55;;;;;;;;;;;10094:244;9812:537;;9651:698;10358:34;10364:12;:10;:12::i;:::-;10378:4;10384:7;10358:5;:34::i;5971:651::-;6028:13;6057:14;;;:8;:14;;;;;;:19;;6053:55;;6078:30;6092:15;6102:4;6092:9;:15::i;6078:30::-;;6053:55;6123:28;6132:12;:10;:12::i;:::-;6146:4;6123:8;:28::i;:::-;6122:29;:57;;;;-1:-1:-1;6156:14:55;;;;:8;:14;;;;;;:22;;;6122:57;6118:81;;;6188:11;;-1:-1:-1;;;6188:11:55;;;;;;;;;;;6118:81;6213:19;;;;:13;:19;;;;;;:40;;6209:63;;6262:10;;-1:-1:-1;;;6262:10:55;;;;;;;;;;;6209:63;6285:11;;6283:13;;;;;:::i;:::-;;;;-1:-1:-1;6355:29:55;6374:10;6355:16;:29;:::i;:::-;6340:11;;6315:22;6322:15;6315:4;:22;:::i;:::-;:36;;;;:::i;:::-;:70;;;;:::i;:::-;6307:78;;6395:57;6414:16;6424:5;6414:9;:16::i;:::-;6440:4;6447;6395:18;:57::i;:::-;6462:26;6476:5;6483:4;6462:13;:26::i;:::-;6502:10;6524:4;6502:27;6498:69;;6531:36;6547:12;:10;:12::i;6531:36::-;6583:32;;6604:10;;6598:4;;6591:5;;6583:32;;;;;5971:651;;;:::o;12108:214::-;12175:11;;;;:7;:11;;;;;;;:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12175:20:55;-1:-1:-1;;;;;12175:20:55;;;;;12206:70;12175:20;12216:16;12175:11;12216:12;:16::i;:::-;12237:38;;-1:-1:-1;;32537:2:67;32533:15;;;32529:53;12237:38:55;;;32517:66:67;-1:-1:-1;;;32599:12:67;;;32592:34;32642:12;;;32635:28;;;12234:1:55;;32679:12:67;;12237:38:55;32259:438:67;12206:70:55;12291:24;;12312:2;;-1:-1:-1;;;;;12291:24:55;;;;;;;;12108:214;;:::o;10139:916:36:-;10192:7;;-1:-1:-1;;;10267:17:36;;10263:103;;-1:-1:-1;;;10304:17:36;;;-1:-1:-1;10349:2:36;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:36;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:36;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:36;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:36;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:36;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:36:o;17898:216:55:-;18000:33;18012:2;18016;18020:6;18028:4;18000:11;:33::i;:::-;18043:17;;;;:13;:17;;;;;:27;;18064:6;;18043:17;:27;;18064:6;;18043:27;:::i;:::-;;;;-1:-1:-1;;18085:22:55;;616:25:67;;;18096:2:55;;-1:-1:-1;;;;;18085:22:55;;;;;604:2:67;589:18;18085:22:55;;;;;;;17898:216;;;;:::o;4450:772:54:-;-1:-1:-1;;;;;4645:26:54;;;:79;;-1:-1:-1;4681:1:54;;:25;;-1:-1:-1;;;4681:25:54;;;;;616::67;;;-1:-1:-1;;;;;4681:1:54;;;;:17;;589:18:67;;4681:25:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4681:25:54;;;;;;;;;;;;:::i;:::-;:30;;;4675:44;:49;4645:79;4641:110;;;4733:18;;-1:-1:-1;;;4733:18:54;;;;;;;;;;;4641:110;4761:75;4781:11;4794:7;4803;4812:6;4820:15;4761:19;:75::i;:::-;4876:26;;;;:13;:26;;;;;;;;;4850:16;;;:7;:16;;;;;;:19;:23;;4872:1;4850:23;:::i;:::-;:52;4846:370;;;4930:1;;:29;;-1:-1:-1;;;4930:29:54;;;;;616:25:67;;;4919:6:54;;-1:-1:-1;;;;;4930:1:54;;:16;;589:18:67;;4930:29:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4918:41;;;4978:1;4973:34;;4988:19;;-1:-1:-1;;;4988:19:54;;;;;;;;;;;4973:34;5021:26;5035:11;5021:13;:26::i;:::-;-1:-1:-1;5095:28:54;;;;:15;:28;;;;;5082:11;;5066:69;;5095:31;;5066:69;;;24256:25:67;;;24312:2;24297:18;;24290:34;;;24229:18;5066:69:54;;;;;;;5149:56;;;;;;;;;;;5189:15;5149:56;;;;;;;;-1:-1:-1;5149:28:54;;;:15;:28;;;;;;;:56;;;;:::i;5228:768::-;5420:75;5440:11;5453:7;5462;5471:6;5479:15;5420:19;:75::i;:::-;5535:26;;;;:13;:26;;;;;;;;;5509:16;;;:7;:16;;;;;;:19;:23;;5531:1;5509:23;:::i;:::-;:52;5505:485;;;5589:1;;:29;;-1:-1:-1;;;5589:29:54;;;;;616:25:67;;;5578:6:54;;-1:-1:-1;;;;;5589:1:54;;:16;;589:18:67;;5589:29:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5577:41;;;5637:1;5632:34;;5647:19;;-1:-1:-1;;;5647:19:54;;;;;;;;;;;5632:34;5680:26;5694:11;5680:13;:26::i;:::-;-1:-1:-1;5759:20:54;;;;:7;:20;;;;;:23;:20;;5725:75;;5784:15;:6;5793;5784:15;:::i;:::-;5725:75;;;24256:25:67;;;24312:2;24297:18;;24290:34;;;;24229:18;5725:75:54;;;;;;;5850:20;;;;:7;:20;;;;;:23;5814:77;;5850:20;;5875:15;:6;5884;5875:15;:::i;:::-;5814:22;:77::i;:::-;5905:74;;;;;;;;5929:6;5938;5929:15;;;;:::i;:::-;5905:74;;5946:15;5905:74;;;;;;;;;;;;;;;-1:-1:-1;5905:20:54;;;:7;:20;;;;:74;;;;:::i;8663:1048::-;8836:35;;;;;;;24856:19:67;;;24891:12;;;24884:28;;;8836:35:54;;;;;;;;;24928:12:67;;;;8836:35:54;;8826:46;;;;;;;;;-1:-1:-1;8977:31:54;;;:7;:31;;;;;;:34;8920:106;;24856:19:67;;24884:28;;9013:12:54;:10;:12::i;8920:106::-;9062:31;;;;:7;:31;;;;;8882:144;;-1:-1:-1;9094:1:54;9062:34;;9043:15;:53;;9037:82;;9106:13;;-1:-1:-1;;;9106:13:54;;;;;;;;;;;9037:82;9170:1;9133:31;;;:7;:31;;;;;9165:1;9133:34;;:38;9129:147;;9231:31;;;;:7;:31;;;;;;9263:1;9231:34;;9187:37;;;;;;:78;;9231:34;;9187:37;;:78;;9231:34;;9187:78;:::i;:::-;;;;-1:-1:-1;;9129:147:54;9286:37;;;;:7;:37;;;;;:59;;9330:15;;9286:37;:59;;9330:15;;9286:59;:::i;:::-;;;;-1:-1:-1;;9402:17:54;;;;:7;:17;;;;;:20;;9359:37;;;;:7;:37;;;;;:40;;:63;9355:157;;;9481:17;;;;:7;:17;;;;;:20;;9438:37;;;;:7;:37;;;;;:40;:63;9355:157;9522:37;;;;:7;:37;;;;;;9565:15;9560:1;9522:40;;;:58;;;9590:31;;;;;:34;;;:52;;;;9684:1;9652:34;:52;-1:-1:-1;;8663:1048:54:o;25830:126:43:-;25914:35;25928:1;25932:4;25938:2;25942:6;25914:5;:35::i;33594:2706::-;16193:9:55;;;;33783:122:43;;;33828:66;33849:4;33855:2;33859:11;33867:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;33859:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;33889:4;33828:20;:66::i;:::-;34001:4;33997:2;33993:13;34038:2;34034;34030:11;34115:3;34105:136;;34151:10;34145:4;34138:24;34222:4;34216;34209:18;34105:136;34297:5;34270:25;34267:36;34261:4;34254:50;34484:2;34480;34476:11;34534:5;34529:3;34526:14;34520:3;34513:11;34510:31;34500:279;;34574:2;34568:4;34561:16;34626:4;34620;34610:21;34604:28;34594:171;;34669:10;34663:4;34656:24;34742:4;34736;34729:18;34594:171;34500:279;34888:2;34882:4;34875:16;34947:4;34941;34931:21;34994:15;34988:22;35041:11;35033:6;35030:23;35027:158;;;35089:10;35083:4;35076:24;35162:4;35156;35149:18;35027:158;35226:24;;;35202:49;;35375:25;35372:34;;35366:4;35359:48;35461:4;35455;35445:21;35506:20;;35565:28;;;35613:35;;;35610:173;;;35684:10;35678:4;35671:24;35760:4;35754;35747:18;35610:173;35822:14;35807:13;35800:37;;;;35923:6;35917:4;35910:20;36071:3;36067:2;36063:12;36055:5;36051:2;36047:14;36037:8;-1:-1:-1;;;;;;;;;;;35997:4:43;35991;35986:90;;;36099:24;16062:4:55;15996:101;;36099:24:43;36095:120;;;36139:65;36159:4;36165:2;36169:11;36177:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;36169:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;36182:15;47801:303;36139:65;43964:14;;36224:69;;;36242:51;36266:4;36272:2;36276;36280:6;36288:4;36242:23;:51::i;144:304:60:-;223:15;250:22;288:5;:12;-1:-1:-1;;;;;275:26:60;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:51;;317:9;312:106;336:5;:12;332:1;:16;312:106;;;381:26;398:5;404:1;398:8;;;;;;;;:::i;:::-;;;;;;;381:16;:26::i;:::-;369:6;376:1;369:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;350:3;;312:106;;;-1:-1:-1;435:6:60;144:304;-1:-1:-1;;144:304:60:o;1818:437:32:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:32;;1918:47;;-1:-1:-1;;;1975:6:32;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:32;;;;;;;;;-1:-1:-1;;;2000:6:32;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:32;;;;;;;;-1:-1:-1;2030:9:32;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:32;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:32;;;;;;;;-1:-1:-1;2141:1:32;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:32;;2162:55;;;;-1:-1:-1;;;2162:55:32;;33609:2:67;2162:55:32;;;33591:21:67;;;33628:18;;;33621:30;33687:34;33667:18;;;33660:62;33739:18;;2162:55:32;;;;;;;31804:707:43;32034:10;32027:18;32020:26;32006:40;;32135:25;32129:4;32122:39;32187:2;32181:4;32174:16;32216:8;32210:4;32203:22;32268:10;32261:4;32255;32245:21;32238:41;32353:10;32347:4;32340:24;32398:1;32394:6;32390:2;32386:15;32485:8;32482:1;32478:16;32473:2;32470:1;32466:10;32431:33;32425:4;32419;32414:81;;31804:707;;;:::o;20805:1574::-;16193:9:55;;;;20906:128:43;;;20951:72;20980:1;20984:2;20988:11;20996:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;20951:72;21128:2;21124;21120:11;21205:3;21195:136;;21241:10;21235:4;21228:24;21312:4;21306;21299:18;21195:136;21438:25;21432:4;21425:39;21494:2;21488:4;21481:16;21527:2;21521:4;21514:16;21584:4;21578;21568:21;21635:13;21629:20;21709:6;21692:15;21688:28;21755:15;21739:14;21736:35;21733:173;;;21807:10;21801:4;21794:24;21883:4;21877;21870:18;21733:173;21945:14;21930:13;21923:37;;;;22046:6;22040:4;22033:20;22138:3;22134:2;22130:12;22127:1;22117:8;-1:-1:-1;;;;;;;;;;;22077:4:43;22071;22066:77;-1:-1:-1;43964:14:43;;22297:75;;;22315:57;22347:1;22351:2;22355;22359:6;22367:4;22315:23;:57::i;8127:530:54:-;8342:1;8320:16;;;:7;:16;;;;;8337:1;8320:19;;:23;:82;;;;-1:-1:-1;8382:16:54;;;;:7;:16;;;;;8399:1;8382:19;;8348:28;;;;:15;:28;;;;;8377:1;8348:31;;:53;8320:82;8316:216;;;8444:1;8422:16;;;:7;:16;;;;;8439:1;8422:19;;:23;8418:104;;8488:16;;;;:7;:16;;;;;;8505:1;8488:19;;8465:16;;;;;;:42;;8488:19;;8465:16;;:42;;8488:19;;8465:42;:::i;:::-;;;;-1:-1:-1;;8418:104:54;8541:61;;;;;;;;;;;8569:15;8541:61;;;;;;;;;;;;;;-1:-1:-1;8541:16:54;;;:7;:16;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;8612:16:54;;;;:7;:16;;;;;:38;;8635:15;;8612:16;:38;;8635:15;;8612:38;:::i;:::-;;;;-1:-1:-1;;;;;;;8127:530:54:o;6002:1246::-;6102:25;6130:18;;;:10;:18;;;;;;;;6102:46;;;;;;;;;;;;;;;;;;;6130:18;;6102:46;;;6130:18;6102:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:8;:15;6181:1;6162:20;6158:33;;6184:7;6002:1246;;;:::o;6158:33::-;6200:30;;6240:544;6264:8;:15;6260:1;:19;6240:544;;;6300:30;6360:8;6369:1;6360:11;;;;;;;;:::i;:::-;;;;;;;6373:6;6343:37;;;;;;;;24856:19:67;;;24900:2;24891:12;;24884:28;24937:2;24928:12;;24699:247;6343:37:54;;;;;;;-1:-1:-1;;6343:37:54;;;;;;6333:48;;6343:37;6333:48;;;;6395:26;6424:31;;;:7;:31;;;;;:34;6333:48;;-1:-1:-1;6472:44:54;6424:34;6472:44;;:::i;:::-;;;6556:6;6535:18;:27;6531:243;;;6582:25;6595:8;6604:1;6595:11;;;;;;;;:::i;6582:25::-;-1:-1:-1;6625:22:54;6683:7;6651:28;6672:7;6651:18;:28;:::i;:::-;6650:40;;;;:::i;:::-;6708:31;;;;:7;:31;;;;;:51;-1:-1:-1;6531:243:54;-1:-1:-1;;6281:3:54;;6240:544;;;;6824:1;6799:22;:26;6798:97;;;;-1:-1:-1;6867:15:54;;;;:7;:15;;;;;:18;:27;;6888:6;;6867:27;:::i;:::-;6831:31;6856:6;6831:22;:31;:::i;:::-;6830:65;6798:97;6794:314;;;6911:21;6990:46;7000:17;7010:6;7000:9;:17::i;:::-;7019:16;;;;:8;:16;;;;;;6250:25:43;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;6990:46:54;6951:36;6961:17;6971:6;6961:9;:17::i;:::-;6250:25:43;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;6951:36:54;:85;;;;:::i;:::-;6911:125;;7050:47;7056:17;7066:6;7056:9;:17::i;:::-;7075:6;7083:13;7050:5;:47::i;:::-;6897:211;6794:314;7118:61;;;;;;;;;;;7146:15;7118:61;;;;;;;;;;;;;;-1:-1:-1;7118:15:54;;;:7;:15;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;7195:46:54;;;24256:25:67;;;24312:2;24297:18;;24290:34;;;7216:6:54;;7195:46;;24229:18:67;7195:46:54;;;;;;;6092:1156;;6002:1246;;;:::o;26269:1652:43:-;16193:9:55;;;;26365:128:43;;;26410:72;26431:4;26445:1;26449:11;26457:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;26449:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;26410:72;;;;;;;;;;;;:20;:72::i;:::-;26589:4;26585:2;26581:13;26650:5;26623:25;26620:36;26614:4;26607:50;26868:5;26863:2;26859;26855:11;26852:22;26846:2;26842;26838:11;26831:19;26828:47;26818:295;;26908:2;26902:4;26895:16;26960:4;26954;26944:21;26938:28;26928:171;;27003:10;26997:4;26990:24;27076:4;27070;27063:18;26928:171;27222:2;27216:4;27209:16;27281:4;27275;27265:21;27328:15;27322:22;27375:11;27367:6;27364:23;27361:158;;;27423:10;27417:4;27410:24;27496:4;27490;27483:18;27361:158;27577:6;27564:11;27560:24;27543:15;27536:49;;;27671:6;27665:4;27658:20;27768:1;27760:5;27756:2;27752:14;27742:8;-1:-1:-1;;;;;;;;;;;27702:4:43;27696;27691:79;-1:-1:-1;27789:126:43;;44187:1433;44475:4;44469:11;44578:10;44575:1;44568:21;44623:8;44616:4;44613:1;44609:12;44602:30;44682:4;44678:2;44674:13;44670:2;44666:22;44659:4;44656:1;44652:12;44645:44;44723:2;44716:4;44713:1;44709:12;44702:24;44760:6;44753:4;44750:1;44746:12;44739:28;44801:4;44794;44791:1;44787:12;44780:26;44834:4;44828:11;44873:1;44866:4;44863:1;44859:12;44852:23;44891:1;44888:71;;;44954:1;44947:4;44944:1;44940:12;44937:1;44930:4;44924;44920:15;44917:1;44910:5;44899:57;44895:62;44888:71;45075:4;45072:1;45068;45062:4;45058:12;45051:4;45048:1;45044:12;45041:1;45037:2;45030:5;45025:55;45015:313;;45103:16;45100:214;;;45231:16;45225:4;45222:1;45207:41;45279:16;45276:1;45269:27;45100:214;-1:-1:-1;45432:8:43;;-1:-1:-1;;;45429:34:43;45419:185;;45496:10;45490:4;45483:24;45585:4;45579;45572:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:67;-1:-1:-1;;;;;89:31:67;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:67:o;652:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;;857:32:67;;847:43;;837:71;;904:1;901;894:12;1135:289;1177:3;1215:5;1209:12;1242:6;1237:3;1230:19;1298:6;1291:4;1284:5;1280:16;1273:4;1268:3;1264:14;1258:47;1350:1;1343:4;1334:6;1329:3;1325:16;1321:27;1314:38;1413:4;1406:2;1402:7;1397:2;1389:6;1385:15;1381:29;1376:3;1372:39;1368:50;1361:57;;;1135:289;;;;:::o;1429:220::-;1578:2;1567:9;1560:21;1541:4;1598:45;1639:2;1628:9;1624:18;1616:6;1598:45;:::i;1654:180::-;1713:6;1766:2;1754:9;1745:7;1741:23;1737:32;1734:52;;;1782:1;1779;1772:12;1734:52;-1:-1:-1;1805:23:67;;1654:180;-1:-1:-1;1654:180:67:o;1839:247::-;1898:6;1951:2;1939:9;1930:7;1926:23;1922:32;1919:52;;;1967:1;1964;1957:12;1919:52;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;2091:452::-;2177:6;2185;2193;2201;2254:3;2242:9;2233:7;2229:23;2225:33;2222:53;;;2271:1;2268;2261:12;2222:53;2307:9;2294:23;2284:33;;2364:2;2353:9;2349:18;2336:32;2326:42;;2415:2;2404:9;2400:18;2387:32;2377:42;;2469:2;2458:9;2454:18;2441:32;2482:31;2507:5;2482:31;:::i;:::-;2091:452;;;;-1:-1:-1;2091:452:67;;-1:-1:-1;;2091:452:67:o;2548:127::-;2609:10;2604:3;2600:20;2597:1;2590:31;2640:4;2637:1;2630:15;2664:4;2661:1;2654:15;2680:253;2752:2;2746:9;2794:4;2782:17;;-1:-1:-1;;;;;2814:34:67;;2850:22;;;2811:62;2808:88;;;2876:18;;:::i;:::-;2912:2;2905:22;2680:253;:::o;2938:275::-;3009:2;3003:9;3074:2;3055:13;;-1:-1:-1;;3051:27:67;3039:40;;-1:-1:-1;;;;;3094:34:67;;3130:22;;;3091:62;3088:88;;;3156:18;;:::i;:::-;3192:2;3185:22;2938:275;;-1:-1:-1;2938:275:67:o;3218:183::-;3278:4;-1:-1:-1;;;;;3303:6:67;3300:30;3297:56;;;3333:18;;:::i;:::-;-1:-1:-1;3378:1:67;3374:14;3390:4;3370:25;;3218:183::o;3406:668::-;3460:5;3513:3;3506:4;3498:6;3494:17;3490:27;3480:55;;3531:1;3528;3521:12;3480:55;3567:6;3554:20;3593:4;3617:60;3633:43;3673:2;3633:43;:::i;:::-;3617:60;:::i;:::-;3699:3;3723:2;3718:3;3711:15;3751:4;3746:3;3742:14;3735:21;;3808:4;3802:2;3799:1;3795:10;3787:6;3783:23;3779:34;3765:48;;3836:3;3828:6;3825:15;3822:35;;;3853:1;3850;3843:12;3822:35;3889:4;3881:6;3877:17;3903:142;3919:6;3914:3;3911:15;3903:142;;;3985:17;;3973:30;;4023:12;;;;3936;;3903:142;;;-1:-1:-1;4063:5:67;3406:668;-1:-1:-1;;;;;;3406:668:67:o;4079:187::-;4128:4;-1:-1:-1;;;;;4153:6:67;4150:30;4147:56;;;4183:18;;:::i;:::-;-1:-1:-1;4249:2:67;4228:15;-1:-1:-1;;4224:29:67;4255:4;4220:40;;4079:187::o;4271:464::-;4314:5;4367:3;4360:4;4352:6;4348:17;4344:27;4334:55;;4385:1;4382;4375:12;4334:55;4421:6;4408:20;4452:49;4468:32;4497:2;4468:32;:::i;4452:49::-;4526:2;4517:7;4510:19;4572:3;4565:4;4560:2;4552:6;4548:15;4544:26;4541:35;4538:55;;;4589:1;4586;4579:12;4538:55;4654:2;4647:4;4639:6;4635:17;4628:4;4619:7;4615:18;4602:55;4702:1;4677:16;;;4695:4;4673:27;4666:38;;;;4681:7;4271:464;-1:-1:-1;;;4271:464:67:o;4740:1551::-;4895:6;4903;4911;4919;4927;4980:3;4968:9;4959:7;4955:23;4951:33;4948:53;;;4997:1;4994;4987:12;4948:53;5033:9;5020:23;5010:33;;5062:2;5115;5104:9;5100:18;5087:32;-1:-1:-1;;;;;5179:2:67;5171:6;5168:14;5165:34;;;5195:1;5192;5185:12;5165:34;5233:6;5222:9;5218:22;5208:32;;5278:7;5271:4;5267:2;5263:13;5259:27;5249:55;;5300:1;5297;5290:12;5249:55;5336:2;5323:16;5359:60;5375:43;5415:2;5375:43;:::i;5359:60::-;5453:15;;;5535:1;5531:10;;;;5523:19;;5519:28;;;5484:12;;;;5559:19;;;5556:39;;;5591:1;5588;5581:12;5556:39;5615:11;;;;5635:217;5651:6;5646:3;5643:15;5635:217;;;5731:3;5718:17;5748:31;5773:5;5748:31;:::i;:::-;5792:18;;5668:12;;;;5830;;;;5635:217;;;5871:5;-1:-1:-1;;;5929:2:67;5914:18;;5901:32;;-1:-1:-1;5945:16:67;;;5942:36;;;5974:1;5971;5964:12;5942:36;5997:63;6052:7;6041:8;6030:9;6026:24;5997:63;:::i;:::-;5987:73;;6113:2;6102:9;6098:18;6085:32;6069:48;;6142:2;6132:8;6129:16;6126:36;;;6158:1;6155;6148:12;6126:36;;;6181:52;6225:7;6214:8;6203:9;6199:24;6181:52;:::i;:::-;4740:1551;;;;-1:-1:-1;4740:1551:67;;6280:3;6265:19;6252:33;;4740:1551;-1:-1:-1;;;4740:1551:67:o;6296:1024::-;6513:2;6565:21;;;6635:13;;6538:18;;;6657:22;;;6484:4;;6513:2;6698;;6716:18;;;;6757:15;;;6484:4;6800:494;6814:6;6811:1;6808:13;6800:494;;;6873:13;;6912:3;6995:1;7009:205;7025:4;7020:3;7017:13;7009:205;;;7098:15;;7084:30;;7183:17;;;;7140:14;;;;7049:1;7040:11;7009:205;;;-1:-1:-1;;;7234:12:67;;;;7269:15;;;;6836:1;6829:9;6800:494;;;-1:-1:-1;7311:3:67;;6296:1024;-1:-1:-1;;;;;;;6296:1024:67:o;7325:248::-;7393:6;7401;7454:2;7442:9;7433:7;7429:23;7425:32;7422:52;;;7470:1;7467;7460:12;7422:52;-1:-1:-1;;7493:23:67;;;7563:2;7548:18;;;7535:32;;-1:-1:-1;7325:248:67:o;7831:456::-;7908:6;7916;7924;7977:2;7965:9;7956:7;7952:23;7948:32;7945:52;;;7993:1;7990;7983:12;7945:52;8032:9;8019:23;8051:31;8076:5;8051:31;:::i;:::-;8101:5;-1:-1:-1;8153:2:67;8138:18;;8125:32;;-1:-1:-1;8209:2:67;8194:18;;8181:32;8222:33;8181:32;8222:33;:::i;:::-;8274:7;8264:17;;;7831:456;;;;;:::o;8292:367::-;8355:8;8365:6;8419:3;8412:4;8404:6;8400:17;8396:27;8386:55;;8437:1;8434;8427:12;8386:55;-1:-1:-1;8460:20:67;;-1:-1:-1;;;;;8492:30:67;;8489:50;;;8535:1;8532;8525:12;8489:50;8572:4;8564:6;8560:17;8548:29;;8632:3;8625:4;8615:6;8612:1;8608:14;8600:6;8596:27;8592:38;8589:47;8586:67;;;8649:1;8646;8639:12;8586:67;8292:367;;;;;:::o;8664:347::-;8715:8;8725:6;8779:3;8772:4;8764:6;8760:17;8756:27;8746:55;;8797:1;8794;8787:12;8746:55;-1:-1:-1;8820:20:67;;-1:-1:-1;;;;;8852:30:67;;8849:50;;;8895:1;8892;8885:12;8849:50;8932:4;8924:6;8920:17;8908:29;;8984:3;8977:4;8968:6;8960;8956:19;8952:30;8949:39;8946:59;;;9001:1;8998;8991:12;9016:1338;9176:6;9184;9192;9200;9208;9216;9224;9232;9285:3;9273:9;9264:7;9260:23;9256:33;9253:53;;;9302:1;9299;9292:12;9253:53;9341:9;9328:23;9360:31;9385:5;9360:31;:::i;:::-;9410:5;-1:-1:-1;9467:2:67;9452:18;;9439:32;9480:33;9439:32;9480:33;:::i;:::-;9532:7;-1:-1:-1;9590:2:67;9575:18;;9562:32;-1:-1:-1;;;;;9643:14:67;;;9640:34;;;9670:1;9667;9660:12;9640:34;9709:70;9771:7;9762:6;9751:9;9747:22;9709:70;:::i;:::-;9798:8;;-1:-1:-1;9683:96:67;-1:-1:-1;9886:2:67;9871:18;;9858:32;;-1:-1:-1;9902:16:67;;;9899:36;;;9931:1;9928;9921:12;9899:36;9970:72;10034:7;10023:8;10012:9;10008:24;9970:72;:::i;:::-;10061:8;;-1:-1:-1;9944:98:67;-1:-1:-1;10149:3:67;10134:19;;10121:33;;-1:-1:-1;10166:16:67;;;10163:36;;;10195:1;10192;10185:12;10163:36;;10234:60;10286:7;10275:8;10264:9;10260:24;10234:60;:::i;:::-;9016:1338;;;;-1:-1:-1;9016:1338:67;;-1:-1:-1;9016:1338:67;;;;;;10313:8;-1:-1:-1;;;9016:1338:67:o;10359:315::-;10427:6;10435;10488:2;10476:9;10467:7;10463:23;10459:32;10456:52;;;10504:1;10501;10494:12;10456:52;10540:9;10527:23;10517:33;;10600:2;10589:9;10585:18;10572:32;10613:31;10638:5;10613:31;:::i;:::-;10663:5;10653:15;;;10359:315;;;;;:::o;10887:773::-;11009:6;11017;11025;11033;11086:2;11074:9;11065:7;11061:23;11057:32;11054:52;;;11102:1;11099;11092:12;11054:52;11142:9;11129:23;-1:-1:-1;;;;;11212:2:67;11204:6;11201:14;11198:34;;;11228:1;11225;11218:12;11198:34;11267:70;11329:7;11320:6;11309:9;11305:22;11267:70;:::i;:::-;11356:8;;-1:-1:-1;11241:96:67;-1:-1:-1;11444:2:67;11429:18;;11416:32;;-1:-1:-1;11460:16:67;;;11457:36;;;11489:1;11486;11479:12;11457:36;;11528:72;11592:7;11581:8;11570:9;11566:24;11528:72;:::i;:::-;10887:773;;;;-1:-1:-1;11619:8:67;-1:-1:-1;;;;10887:773:67:o;11665:439::-;11718:3;11756:5;11750:12;11783:6;11778:3;11771:19;11809:4;11838;11833:3;11829:14;11822:21;;11877:4;11870:5;11866:16;11900:1;11910:169;11924:6;11921:1;11918:13;11910:169;;;11985:13;;11973:26;;12019:12;;;;12054:15;;;;11946:1;11939:9;11910:169;;;-1:-1:-1;12095:3:67;;11665:439;-1:-1:-1;;;;;11665:439:67:o;12109:261::-;12288:2;12277:9;12270:21;12251:4;12308:56;12360:2;12349:9;12345:18;12337:6;12308:56;:::i;12375:416::-;12468:6;12476;12529:2;12517:9;12508:7;12504:23;12500:32;12497:52;;;12545:1;12542;12535:12;12497:52;12581:9;12568:23;12558:33;;12642:2;12631:9;12627:18;12614:32;-1:-1:-1;;;;;12661:6:67;12658:30;12655:50;;;12701:1;12698;12691:12;12655:50;12724:61;12777:7;12768:6;12757:9;12753:22;12724:61;:::i;:::-;12714:71;;;12375:416;;;;;:::o;12796:118::-;12882:5;12875:13;12868:21;12861:5;12858:32;12848:60;;12904:1;12901;12894:12;12919:382;12984:6;12992;13045:2;13033:9;13024:7;13020:23;13016:32;13013:52;;;13061:1;13058;13051:12;13013:52;13100:9;13087:23;13119:31;13144:5;13119:31;:::i;:::-;13169:5;-1:-1:-1;13226:2:67;13211:18;;13198:32;13239:30;13198:32;13239:30;:::i;13306:348::-;13390:6;13443:2;13431:9;13422:7;13418:23;13414:32;13411:52;;;13459:1;13456;13449:12;13411:52;13499:9;13486:23;-1:-1:-1;;;;;13524:6:67;13521:30;13518:50;;;13564:1;13561;13554:12;13518:50;13587:61;13640:7;13631:6;13620:9;13616:22;13587:61;:::i;13659:475::-;13707:3;13738;13792;13785:5;13781:15;13819:5;13842:1;13852:256;13866:4;13863:1;13860:11;13852:256;;;13935:5;13929:4;13925:16;13920:3;13913:29;13963:38;13996:4;13987:6;13981:13;13963:38;:::i;:::-;14024:4;14086:12;;;;13955:46;;-1:-1:-1;14051:15:67;;;;;13886:1;13879:9;13852:256;;;-1:-1:-1;14124:4:67;;13659:475;-1:-1:-1;;;;;13659:475:67:o;14139:465::-;14192:3;14230:5;14224:12;14257:6;14252:3;14245:19;14283:4;14312;14307:3;14303:14;14296:21;;14351:4;14344:5;14340:16;14374:1;14384:195;14398:6;14395:1;14392:13;14384:195;;;14463:13;;-1:-1:-1;;;;;14459:39:67;14447:52;;14519:12;;;;14554:15;;;;14495:1;14413:9;14384:195;;14609:598;14661:3;14692;14724:5;14718:12;14751:6;14746:3;14739:19;14777:4;14806;14801:3;14797:14;14790:21;;14864:4;14854:6;14851:1;14847:14;14840:5;14836:26;14832:37;14903:4;14896:5;14892:16;14926:1;14936:245;14950:6;14947:1;14944:13;14936:245;;;15037:2;15033:7;15025:5;15019:4;15015:16;15011:30;15006:3;14999:43;15063:38;15096:4;15087:6;15081:13;15063:38;:::i;:::-;15159:12;;;;15055:46;-1:-1:-1;15124:15:67;;;;14972:1;14965:9;14936:245;;;-1:-1:-1;15197:4:67;;14609:598;-1:-1:-1;;;;;;;14609:598:67:o;15212:2042::-;15275:3;15306;15338:5;15332:12;15365:6;15360:3;15353:19;15391:4;15420:2;15415:3;15411:12;15404:19;;15442:1;15496:2;15486:6;15483:1;15479:14;15472:5;15468:26;15464:35;15533:2;15526:5;15522:14;15554:1;15564:1664;15578:6;15575:1;15572:13;15564:1664;;;-1:-1:-1;;15643:16:67;;;15639:30;15627:43;;15693:13;;15806:9;;15729:4;15828:16;;;15905:19;;15760:13;;;15937:24;;;15729:4;;15984:2;16062:17;;;16052:28;;16048:37;;;16114:21;;;;16008:13;;;;-1:-1:-1;16173:797:67;16189:8;16184:3;16181:17;16173:797;;;16270:17;;;-1:-1:-1;;16266:31:67;16252:46;;16325:15;;16274:6;16439:15;;;16517:1;16535:302;16551:4;16546:3;16543:13;16535:302;;;16644:6;16636;16632:19;16625:5;16618:34;16683:42;16718:6;16707:8;16701:15;16683:42;:::i;:::-;16673:52;;16772:2;16762:8;16758:17;16746:29;;16816:2;16809:5;16805:14;16796:23;;16575:1;16570:3;16566:11;16559:18;;16535:302;;;-1:-1:-1;16864:6:67;-1:-1:-1;;;16899:17:67;;;;16942:14;;;;16217:1;16208:11;16173:797;;;-1:-1:-1;;;;17011:11:67;;;17005:18;17058:17;;;17043:13;;;17036:40;17005:18;17097:51;17062:6;17005:18;17097:51;:::i;:::-;17206:12;;;;17089:59;-1:-1:-1;;;17171:15:67;;;;-1:-1:-1;15600:1:67;15593:9;15564:1664;;;-1:-1:-1;17244:4:67;;15212:2042;-1:-1:-1;;;;;;;;15212:2042:67:o;17259:1262::-;17311:3;17355:5;17349:12;17382:4;17377:3;17370:17;17408:53;17455:4;17450:3;17446:14;17432:12;17408:53;:::i;:::-;17396:65;;17509:4;17502:5;17498:16;17492:23;17557:3;17551:4;17547:14;17540:4;17535:3;17531:14;17524:38;17585:39;17619:4;17603:14;17585:39;:::i;:::-;17571:53;;;17672:4;17665:5;17661:16;17655:23;17722:3;17714:6;17710:16;17703:4;17698:3;17694:14;17687:40;17750:52;17795:6;17779:14;17750:52;:::i;:::-;17736:66;;;17850:4;17843:5;17839:16;17833:23;17900:3;17892:6;17888:16;17881:4;17876:3;17872:14;17865:40;17928:51;17972:6;17956:14;17928:51;:::i;:::-;17914:65;;;18027:4;18020:5;18016:16;18010:23;18077:3;18069:6;18065:16;18058:4;18053:3;18049:14;18042:40;18105:52;18150:6;18134:14;18105:52;:::i;:::-;18091:66;;;18205:4;18198:5;18194:16;18188:23;18255:3;18247:6;18243:16;18236:4;18231:3;18227:14;18220:40;18283:51;18327:6;18311:14;18283:51;:::i;:::-;18269:65;;;18382:4;18375:5;18371:16;18365:23;18432:3;18424:6;18420:16;18413:4;18408:3;18404:14;18397:40;18453:62;18508:6;18492:14;18453:62;:::i;:::-;18446:69;17259:1262;-1:-1:-1;;;;;17259:1262:67:o;18526:849::-;18724:4;18753:2;18793;18782:9;18778:18;18823:2;18812:9;18805:21;18846:6;18881;18875:13;18912:6;18904;18897:22;18950:2;18939:9;18935:18;18928:25;;19012:2;19002:6;18999:1;18995:14;18984:9;18980:30;18976:39;18962:53;;19050:2;19042:6;19038:15;19071:1;19081:265;19095:6;19092:1;19089:13;19081:265;;;19188:2;19184:7;19172:9;19164:6;19160:22;19156:36;19151:3;19144:49;19216:50;19259:6;19250;19244:13;19216:50;:::i;:::-;19206:60;-1:-1:-1;19324:12:67;;;;19289:15;;;;19117:1;19110:9;19081:265;;;-1:-1:-1;19363:6:67;;18526:849;-1:-1:-1;;;;;;;18526:849:67:o;19380:266::-;19565:2;19554:9;19547:21;19528:4;19585:55;19636:2;19625:9;19621:18;19613:6;19585:55;:::i;19651:551::-;19753:6;19761;19769;19822:2;19810:9;19801:7;19797:23;19793:32;19790:52;;;19838:1;19835;19828:12;19790:52;19874:9;19861:23;19851:33;;19935:2;19924:9;19920:18;19907:32;-1:-1:-1;;;;;19954:6:67;19951:30;19948:50;;;19994:1;19991;19984:12;19948:50;20017:61;20070:7;20061:6;20050:9;20046:22;20017:61;:::i;:::-;20007:71;;;20128:2;20117:9;20113:18;20100:32;20141:31;20166:5;20141:31;:::i;20207:388::-;20275:6;20283;20336:2;20324:9;20315:7;20311:23;20307:32;20304:52;;;20352:1;20349;20342:12;20304:52;20391:9;20378:23;20410:31;20435:5;20410:31;:::i;:::-;20460:5;-1:-1:-1;20517:2:67;20502:18;;20489:32;20530:33;20489:32;20530:33;:::i;20600:261::-;20779:2;20768:9;20761:21;20742:4;20799:56;20851:2;20840:9;20836:18;20828:6;20799:56;:::i;20866:823::-;20972:6;20980;20988;20996;21004;21012;21065:3;21053:9;21044:7;21040:23;21036:33;21033:53;;;21082:1;21079;21072:12;21033:53;21121:9;21108:23;21140:31;21165:5;21140:31;:::i;:::-;21190:5;-1:-1:-1;21247:2:67;21232:18;;21219:32;21260:33;21219:32;21260:33;:::i;:::-;21312:7;-1:-1:-1;21366:2:67;21351:18;;21338:32;;-1:-1:-1;21417:2:67;21402:18;;21389:32;;-1:-1:-1;21472:3:67;21457:19;;21444:33;-1:-1:-1;;;;;21489:30:67;;21486:50;;;21532:1;21529;21522:12;21486:50;21571:58;21621:7;21612:6;21601:9;21597:22;21571:58;:::i;:::-;20866:823;;;;-1:-1:-1;20866:823:67;;-1:-1:-1;20866:823:67;;21648:8;;20866:823;-1:-1:-1;;;20866:823:67:o;21694:380::-;21773:1;21769:12;;;;21816;;;21837:61;;21891:4;21883:6;21879:17;21869:27;;21837:61;21944:2;21936:6;21933:14;21913:18;21910:38;21907:161;;21990:10;21985:3;21981:20;21978:1;21971:31;22025:4;22022:1;22015:15;22053:4;22050:1;22043:15;22079:474;22341:30;22336:3;22329:43;22311:3;22401:6;22395:13;22456:6;22449:4;22441:6;22437:17;22432:2;22427:3;22423:12;22417:46;22527:1;22486:16;;22504:2;22482:25;22516:13;;;-1:-1:-1;22482:25:67;22079:474;-1:-1:-1;22079:474:67:o;22558:127::-;22619:10;22614:3;22610:20;22607:1;22600:31;22650:4;22647:1;22640:15;22674:4;22671:1;22664:15;22690:127;22751:10;22746:3;22742:20;22739:1;22732:31;22782:4;22779:1;22772:15;22806:4;22803:1;22796:15;22822:168;22895:9;;;22926;;22943:15;;;22937:22;;22923:37;22913:71;;22964:18;;:::i;22995:127::-;23056:10;23051:3;23047:20;23044:1;23037:31;23087:4;23084:1;23077:15;23111:4;23108:1;23101:15;23127:120;23167:1;23193;23183:35;;23198:18;;:::i;:::-;-1:-1:-1;23232:9:67;;23127:120::o;23252:628::-;23557:2;23546:9;23539:21;23520:4;23583:56;23635:2;23624:9;23620:18;23612:6;23583:56;:::i;:::-;23687:9;23679:6;23675:22;23670:2;23659:9;23655:18;23648:50;23721:44;23758:6;23750;23721:44;:::i;:::-;23707:58;;23813:9;23805:6;23801:22;23796:2;23785:9;23781:18;23774:50;23841:33;23867:6;23859;23841:33;:::i;:::-;23833:41;23252:628;-1:-1:-1;;;;;;23252:628:67:o;23885:184::-;23955:6;24008:2;23996:9;23987:7;23983:23;23979:32;23976:52;;;24024:1;24021;24014:12;23976:52;-1:-1:-1;24047:16:67;;23885:184;-1:-1:-1;23885:184:67:o;24335:359::-;24540:2;24536:15;;;;-1:-1:-1;;24532:53:67;24520:66;;24611:2;24602:12;;24595:28;;;;24648:2;24639:12;;24632:28;24685:2;24676:12;;24335:359::o;24951:125::-;25016:9;;;25037:10;;;25034:36;;;25050:18;;:::i;25461:251::-;25531:6;25584:2;25572:9;25563:7;25559:23;25555:32;25552:52;;;25600:1;25597;25590:12;25552:52;25632:9;25626:16;25651:31;25676:5;25651:31;:::i;26313:245::-;26380:6;26433:2;26421:9;26412:7;26408:23;26404:32;26401:52;;;26449:1;26446;26439:12;26401:52;26481:9;26475:16;26500:28;26522:5;26500:28;:::i;26563:128::-;26630:9;;;26651:11;;;26648:37;;;26665:18;;:::i;26966:135::-;27005:3;27026:17;;;27023:43;;27046:18;;:::i;:::-;-1:-1:-1;27093:1:67;27082:13;;26966:135::o;27106:112::-;27138:1;27164;27154:35;;27169:18;;:::i;:::-;-1:-1:-1;27203:9:67;;27106:112::o;27866:331::-;27971:9;27982;28024:8;28012:10;28009:24;28006:44;;;28046:1;28043;28036:12;28006:44;28075:6;28065:8;28062:20;28059:40;;;28095:1;28092;28085:12;28059:40;-1:-1:-1;;28121:23:67;;;28166:25;;;;;-1:-1:-1;27866:331:67:o;28648:665::-;28713:5;28766:3;28759:4;28751:6;28747:17;28743:27;28733:55;;28784:1;28781;28774:12;28733:55;28813:6;28807:13;28839:4;28863:60;28879:43;28919:2;28879:43;:::i;28863:60::-;28945:3;28969:2;28964:3;28957:15;28997:4;28992:3;28988:14;28981:21;;29054:4;29048:2;29045:1;29041:10;29033:6;29029:23;29025:34;29011:48;;29082:3;29074:6;29071:15;29068:35;;;29099:1;29096;29089:12;29068:35;29135:4;29127:6;29123:17;29149:135;29165:6;29160:3;29157:15;29149:135;;;29231:10;;29219:23;;29262:12;;;;29182;;29149:135;;29318:461;29372:5;29425:3;29418:4;29410:6;29406:17;29402:27;29392:55;;29443:1;29440;29433:12;29392:55;29472:6;29466:13;29503:49;29519:32;29548:2;29519:32;:::i;29503:49::-;29577:2;29568:7;29561:19;29623:3;29616:4;29611:2;29603:6;29599:15;29595:26;29592:35;29589:55;;;29640:1;29637;29630:12;29589:55;29698:2;29691:4;29683:6;29679:17;29672:4;29663:7;29659:18;29653:48;29746:1;29721:16;;;29739:4;29717:27;29710:38;;;;29725:7;29318:461;-1:-1:-1;;;29318:461:67:o;29784:1645::-;29881:6;29912:2;29955;29943:9;29934:7;29930:23;29926:32;29923:52;;;29971:1;29968;29961:12;29923:52;30004:9;29998:16;-1:-1:-1;;;;;30074:2:67;30066:6;30063:14;30060:34;;;30090:1;30087;30080:12;30060:34;30113:22;;;;30169:4;30151:16;;;30147:27;30144:47;;;30187:1;30184;30177:12;30144:47;30213:22;;:::i;:::-;30266:2;30260:9;30294:2;30284:8;30281:16;30278:36;;;30310:1;30307;30300:12;30278:36;30333:17;;30381:4;30373:13;;30369:27;-1:-1:-1;30359:55:67;;30410:1;30407;30400:12;30359:55;30439:2;30433:9;30462:60;30478:43;30518:2;30478:43;:::i;30462:60::-;30556:15;;;30638:1;30634:10;;;;30626:19;;30622:28;;;30587:12;;;;30662:19;;;30659:39;;;30694:1;30691;30684:12;30659:39;30718:11;;;;30738:216;30754:6;30749:3;30746:15;30738:216;;;30829:3;30823:10;30846:33;30871:7;30846:33;:::i;:::-;30892:20;;30771:12;;;;30932;;;;30738:216;;;30963:20;;-1:-1:-1;;;31014:11:67;;;31008:18;31038:16;;;31035:36;;;31067:1;31064;31057:12;31035:36;31103:67;31162:7;31151:8;31147:2;31143:17;31103:67;:::i;:::-;31098:2;31091:5;31087:14;31080:91;;31210:2;31206;31202:11;31196:18;31180:34;;31239:2;31229:8;31226:16;31223:36;;;31255:1;31252;31245:12;31223:36;31291:56;31339:7;31328:8;31324:2;31320:17;31291:56;:::i;:::-;31286:2;31279:5;31275:14;31268:80;31394:2;31390;31386:11;31380:18;31375:2;31368:5;31364:14;31357:42;31418:5;31408:15;;;;;;29784:1645;;;;:::o;31693:561::-;-1:-1:-1;;;;;31990:15:67;;;31972:34;;32042:15;;32037:2;32022:18;;32015:43;32089:2;32074:18;;32067:34;;;32132:2;32117:18;;32110:34;;;31952:3;32175;32160:19;;32153:32;;;31915:4;;32202:46;;32228:19;;32220:6;32202:46;:::i;:::-;32194:54;31693:561;-1:-1:-1;;;;;;;31693:561:67:o;32702:306::-;32778:6;32786;32839:2;32827:9;32818:7;32814:23;32810:32;32807:52;;;32855:1;32852;32845:12;32807:52;32887:9;32881:16;32906:28;32928:5;32906:28;:::i;:::-;32998:2;32983:18;;;;32977:25;32953:5;;32977:25;;-1:-1:-1;;;32702:306:67:o;33266:136::-;33305:3;33333:5;33323:39;;33342:18;;:::i;:::-;-1:-1:-1;;;33378:18:67;;33266:136::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "Will()": "535e9891",
        "allMembersOf(uint256)": "eef2e757",
        "asRootValuation(uint256,uint256)": "7f33d800",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "burn(uint256,uint256)": "b390c0ab",
        "burnPath(uint256,uint256)": "f039a733",
        "calculateUserTargetedPreferenceAmount(uint256,uint256,uint256,address)": "0ffd3910",
        "control(uint256)": "7d11e682",
        "createEndpointForOwner(uint256,address)": "45bbbf84",
        "executionAddress()": "78adc790",
        "getAllNodesForRoot(address,address)": "f87cc6b3",
        "getChangePrevalence(uint256,uint256)": "1a61eda6",
        "getChildrenOf(uint256)": "99f45689",
        "getFidPath(uint256)": "f6355a56",
        "getMembraneOf(uint256)": "7e44bffe",
        "getNodeData(uint256,address)": "a6bfbc20",
        "getNodes(uint256[])": "a5541c84",
        "getParentOf(uint256)": "13e75206",
        "getUserNodeSignals(address,uint256)": "150d503d",
        "inParentDenomination(uint256,uint256)": "1e9b388d",
        "inflationOf(uint256)": "765063e5",
        "initSelfControl()": "68dc2747",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isMember(address,uint256)": "85752d03",
        "localizeEndpoint(address,uint256,address)": "28ca8e26",
        "membershipEnforce(address,uint256)": "62593f60",
        "membershipID(uint256)": "f77914c3",
        "mint(uint256,uint256)": "1b2ef1ca",
        "mintInflation(uint256)": "67c394fb",
        "mintMembership(uint256)": "0d78d0c1",
        "mintPath(uint256,uint256)": "791ddaf9",
        "name()": "06fdde03",
        "options(bytes32,uint256)": "20f94427",
        "redistribute(uint256)": "a0ce552d",
        "redistributePath(uint256)": "a0762253",
        "resignal(uint256,uint256[],address)": "b29eb75c",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "sendSignal(uint256,uint256[])": "5b4a26ed",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setControl(address)": "5ac8260c",
        "spawnNode(uint256)": "bfad25e5",
        "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": "114b6e49",
        "spawnRootNode(address)": "af1b55b0",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "taxPolicyPreference(address,uint256)": "1f017841",
        "toAddress(uint256)": "e0051aa9",
        "toID(address)": "0f336348",
        "totalSupply(uint256)": "bd85b039",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Execution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Membrane\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountBalanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadLen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseOrNonFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BurnE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSkip\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Endpoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteSign\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembershipOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembraneNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"No\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoControl\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSoup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTimeDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Noise\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoiseNotVoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNodeMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResignalMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignalOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetIsRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unautorised\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unqualified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnregisteredFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsoundMembership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isControled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"expressedOption\",\"type\":\"bytes32\"}],\"name\":\"ConfigSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"CreatedEndpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldInflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MembershipMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMembrane\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMembrane\",\"type\":\"uint256\"}],\"name\":\"MembraneChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membraneId\",\"type\":\"uint256\"}],\"name\":\"MembraneSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootNodeId\",\"type\":\"uint256\"}],\"name\":\"NewRootNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"Resignaled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AgencyLocus\",\"type\":\"address\"}],\"name\":\"SelfControlAtAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SharesGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"UserNodeSignal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Will\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"allMembersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"asRootValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topVal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserTargetedPreferenceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"control\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createEndpointForOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"endpointAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userIfAny\",\"type\":\"address\"}],\"name\":\"getAllNodesForRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string[2][]\",\"name\":\"MembraneInflation\",\"type\":\"string[2][]\"},{\"internalType\":\"string[]\",\"name\":\"lastRedistSignal\",\"type\":\"string[]\"}],\"internalType\":\"struct UserSignal[]\",\"name\":\"signals\",\"type\":\"tuple[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal_\",\"type\":\"uint256\"}],\"name\":\"getChangePrevalence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getChildrenOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getFidPath\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getMembraneOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNodeData\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string[2][]\",\"name\":\"MembraneInflation\",\"type\":\"string[2][]\"},{\"internalType\":\"string[]\",\"name\":\"lastRedistSignal\",\"type\":\"string[]\"}],\"internalType\":\"struct UserSignal[]\",\"name\":\"signals\",\"type\":\"tuple[]\"}],\"internalType\":\"struct NodeState\",\"name\":\"nodeData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nodeIds\",\"type\":\"uint256[]\"}],\"name\":\"getNodes\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string[2][]\",\"name\":\"MembraneInflation\",\"type\":\"string[2][]\"},{\"internalType\":\"string[]\",\"name\":\"lastRedistSignal\",\"type\":\"string[]\"}],\"internalType\":\"struct UserSignal[]\",\"name\":\"signals\",\"type\":\"tuple[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getParentOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signalOrigin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"parentNodeId\",\"type\":\"uint256\"}],\"name\":\"getUserNodeSignals\",\"outputs\":[{\"internalType\":\"uint256[2][]\",\"name\":\"UserNodeSignals\",\"type\":\"uint256[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"inParentDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inParentVal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"inflationOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initSelfControl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whoabout_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"whereabout_\",\"type\":\"uint256\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"endpoint_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endpointParent_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"localizeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipEnforce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"s\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"mintInflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"mintMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mintPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"NodeXUserXValue\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valueAtTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistributePath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"originator\",\"type\":\"address\"}],\"name\":\"resignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"sendSignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"spawnNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances_\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"meta_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"inflationRate_\",\"type\":\"uint256\"}],\"name\":\"spawnNodeWithMembrane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fungible20_\",\"type\":\"address\"}],\"name\":\"spawnRootNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"taxRate_\",\"type\":\"uint256\"}],\"name\":\"taxPolicyPreference\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"toAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"toID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"parseb\",\"errors\":{\"AccountBalanceOverflow()\":[{\"details\":\"The recipient's balance has overflowed.\"}],\"ArrayLengthsMismatch()\":[{\"details\":\"The lengths of the input arrays are not the same.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"NotOwnerNorApproved()\":[{\"details\":\"Only the token owner or an approved account can manage the tokens.\"}],\"TransferToNonERC1155ReceiverImplementer()\":[{\"details\":\"Cannot safely transfer to a contract that does not implement the ERC1155Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Cannot mint or transfer to the zero address.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Emitted when `amounts` of token `ids` are transferred from `from` to `to` by `operator`.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `amount` of token `id` is transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the Uniform Resource Identifier (URI) for token `id` is updated to `value`. This event is not used in the base contract. You may need to emit this event depending on your URI logic. See: https://eips.ethereum.org/EIPS/eip-1155#metadata\"}},\"kind\":\"dev\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"params\":{\"amount\":\"how many of to price\",\"target_\":\"target node and its context token\"}},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of `id` owned by `owner`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length.\"},\"burn(uint256,uint256)\":{\"params\":{\"amount_\":\"amount to burn\",\"fid_\":\"id of node\"}},\"createEndpointForOwner(uint256,address)\":{\"params\":{\"nodeId_\":\"id of context node\",\"owner\":\"address of agent that will control the endpoint\"},\"returns\":{\"endpointAddress\":\"address of created endpoint\"}},\"getFidPath(uint256)\":{\"params\":{\"fid_\":\"target fid to trace path to from root\"},\"returns\":{\"fids\":\"lineage in chronologic order\"}},\"getUserNodeSignals(address,uint256)\":{\"params\":{\"parentNodeId\":\"node id for which originator has expressed\",\"signalOrigin\":\"address of originator\"}},\"inParentDenomination(uint256,uint256)\":{\"params\":{\"amt_\":\"how many of to price\",\"id_\":\"target node by id and its context token\"},\"returns\":{\"inParentVal\":\"max price of inputs at current minted inflation\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns whether `operator` is approved to manage the tokens of `owner`.\"},\"isMember(address,uint256)\":{\"params\":{\"whereabout_\":\"you abouting about where exactly\",\"whoabout_\":\"you care about them dont you\"}},\"mint(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"fid_\":\"id to target for mint of kind\"}},\"mintInflation(uint256)\":{\"params\":{\"node\":\"identifier of node context\"}},\"mintMembership(uint256)\":{\"params\":{\"fid_\":\"node for which to mint membership\"}},\"mintPath(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"target_\":\"id to target for mint of kind\"}},\"redistribute(uint256)\":{\"params\":{\"nodeId_\":\"redistribution target group\"}},\"redistributePath(uint256)\":{\"params\":{\"nodeId_\":\"target node to actualize path to and mint inflation for\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event.\"},\"setControl(address)\":{\"params\":{\"newController\":\"address of new controller\"}},\"spawnNode(uint256)\":{\"params\":{\"fid_\":\"context node id\"}},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"params\":{\"balances_\":\"array of required balances for each token\",\"fid_\":\"context (parent) node\",\"inflationRate_\":\"rate for new Node token shares in gwei per second\",\"meta_\":\"metadata string (e.g. IPFS hash) for membrane details\",\"tokens_\":\"array of token addresses for membrane conditions\"}},\"spawnRootNode(address)\":{\"params\":{\"fungible20_\":\"address of ERC20 token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas.\"},\"taxPolicyPreference(address,uint256)\":{\"params\":{\"taxRate_\":\"share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"WillWe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"notice\":\"calculates and returns the value of a number of context tokens in terms of its root reserve\"},\"burn(uint256,uint256)\":{\"notice\":\"burn the amount of targeted node id\"},\"createEndpointForOwner(uint256,address)\":{\"notice\":\"creates an external endpoint for an agent in node contextnode owner can be external\"},\"getFidPath(uint256)\":{\"notice\":\"retrieves token path id array from root to target id\"},\"getUserNodeSignals(address,uint256)\":{\"notice\":\"Returns the array containing signal info for each child node in given originator and parent context\"},\"inParentDenomination(uint256,uint256)\":{\"notice\":\"calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller\"},\"isMember(address,uint256)\":{\"notice\":\"checks if provided address who is member in where id\"},\"mint(uint256,uint256)\":{\"notice\":\"mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve\"},\"mintInflation(uint256)\":{\"notice\":\"mints the inflation of a specific context tokenincreases ratio of reserve to context denomination\"},\"mintMembership(uint256)\":{\"notice\":\"mints membership to calling address if it satisfies membership conditions\"},\"mintPath(uint256,uint256)\":{\"notice\":\"mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root\"},\"options(bytes32,uint256)\":{\"notice\":\"stores a users option for change and node state [ wanted value, lastExpressedAt ]\"},\"redistribute(uint256)\":{\"notice\":\"redistributes eligible acummulated inflationary flows\"},\"redistributePath(uint256)\":{\"notice\":\"redistributes eligible amounts to all nodes on target path and mints inflation for target\"},\"setControl(address)\":{\"notice\":\"sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function\"},\"spawnNode(uint256)\":{\"notice\":\"creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context\"},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"notice\":\"spawns Node with an enforceable membership mechanism and creates new membrane\"},\"spawnRootNode(address)\":{\"notice\":\"spawns core Node for a tokenacts as port for token valuenests all token specific contexts\"}},\"notice\":\"Experimental. Do not use.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WillWe.sol\":\"WillWe\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":@solady/=lib/solady/src/\",\":Will/=lib/Will/\",\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/\",\":src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/\",\":src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/\",\":src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/\",\":will/contracts/=lib/will/packages/contracts/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solady/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581\",\"dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9\"]},\"src/Fun.sol\":{\"keccak256\":\"0xea13f5d272f3e5001580b715e364712f71324e8f55d14f1b1ba34bb646c19d50\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8f82c7a0724bc715afce404c0cdedc5034d0d761336f2689677e9815a487bb15\",\"dweb:/ipfs/QmVcifLw3Pfy3vkZrgTZVjkYvHHVssa5rGCz6NKeyatSwm\"]},\"src/Fungido.sol\":{\"keccak256\":\"0x4a6dc00ab0018500674576cf1c144a4ee334decf1a05524697d5938670e48ec3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbf3be557ee6f65179de2423dbce11522b6d8f3363bd86556d0e40444a62fff3\",\"dweb:/ipfs/QmVMneugbRXWtbwhYg9yQnKEFPr3Ze6sNcdom3WUfu7ye2\"]},\"src/WillWe.sol\":{\"keccak256\":\"0x9ba7fd8ca0262fb5443502964daa25e1fd34e4115ff293d72c2e3cd5e89af1fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae398d069ee07a21281dc8d27130c60a006b2629decc0372c075454774bfaad6\",\"dweb:/ipfs/QmTc3Wy5BTM868GEnwTstoETbxJtXfbtURejLyDEHfoBgW\"]},\"src/components/PureUtils.sol\":{\"keccak256\":\"0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee\",\"dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC\"]},\"src/interfaces/IExecution.sol\":{\"keccak256\":\"0x17fa56f9da269654b1b8c3fd184ae2c674da717145aad049b7e0a3244827e4e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc9e58ac5a57bc96fe2884dfe1dcf471fef39dfe02df77e2e474f01b7421242f\",\"dweb:/ipfs/QmezWNwydvvtdP3oSXJfStXQgSfTZudsFGoscjXMTvXA28\"]},\"src/interfaces/IMembrane.sol\":{\"keccak256\":\"0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25\",\"dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "Execution",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "Membrane",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccountBalanceOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ArrayLengthsMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BadLen"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BaseOrNonFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BurnE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotSkip"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Disabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EOA"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Endpoint"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExecutionOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "IncompleteSign"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientAmt"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembershipOp"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembraneNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MintE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "No"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoControl"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoSoup"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoTimeDelta"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeAlreadyExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Noise"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoiseNotVoice"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotNodeMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotOwnerNorApproved"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Overreach"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ResignalMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "RootExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SignalOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TargetIsRoot"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToNonERC1155ReceiverImplementer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToZeroAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unautorised"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unqualified"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnregisteredFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsoundMembership"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsupportedTransfer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "isControled"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Burned",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "expressedOption",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ConfigSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CreatedEndpoint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "oldInflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newInflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationRateChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "userAddress",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MemberRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "who",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MembershipMinted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "previousMembrane",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newMembrane",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "membraneId",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Minted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "creator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "rootNodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewRootNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Resignaled",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "AgencyLocus",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SelfControlAtAddress",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SharesGenerated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UserNodeSignal",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "Will",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allMembersOf",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "asRootValuation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "result",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "owners",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "balances",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "topVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnPath"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "childId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateUserTargetedPreferenceAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "control",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createEndpointForOwner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "endpointAddress",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "executionAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "userIfAny",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllNodesForRoot",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "struct UserSignal[]",
                                    "name": "signals",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "string[2][]",
                                            "name": "MembraneInflation",
                                            "type": "string[2][]"
                                        },
                                        {
                                            "internalType": "string[]",
                                            "name": "lastRedistSignal",
                                            "type": "string[]"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChangePrevalence",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChildrenOf",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFidPath",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "fids",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMembraneOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodeData",
                    "outputs": [
                        {
                            "internalType": "struct NodeState",
                            "name": "nodeData",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "struct UserSignal[]",
                                    "name": "signals",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "string[2][]",
                                            "name": "MembraneInflation",
                                            "type": "string[2][]"
                                        },
                                        {
                                            "internalType": "string[]",
                                            "name": "lastRedistSignal",
                                            "type": "string[]"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "nodeIds",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodes",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "struct UserSignal[]",
                                    "name": "signals",
                                    "type": "tuple[]",
                                    "components": [
                                        {
                                            "internalType": "string[2][]",
                                            "name": "MembraneInflation",
                                            "type": "string[2][]"
                                        },
                                        {
                                            "internalType": "string[]",
                                            "name": "lastRedistSignal",
                                            "type": "string[]"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getParentOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "signalOrigin",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentNodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUserNodeSignals",
                    "outputs": [
                        {
                            "internalType": "uint256[2][]",
                            "name": "UserNodeSignals",
                            "type": "uint256[2][]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amt_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inParentDenomination",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inParentVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inflationOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initSelfControl",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "whoabout_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "whereabout_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isMember",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "endpointParent_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "localizeEndpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "membershipEnforce",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "s",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "membershipID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "node",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintInflation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintMembership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintPath"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "NodeXUserXValue",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "options",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "valueAtTime",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistribute",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistributePath",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "address",
                            "name": "originator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "resignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "sendSignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newController",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setControl"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address[]",
                            "name": "tokens_",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balances_",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "string",
                            "name": "meta_",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNodeWithMembrane",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fungible20_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnRootNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "fID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootToken_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "taxRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "taxPolicyPreference"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "x",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "x",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "params": {
                            "amount": "how many of to price",
                            "target_": "target node and its context token"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "Returns the amount of `id` owned by `owner`."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length."
                    },
                    "burn(uint256,uint256)": {
                        "params": {
                            "amount_": "amount to burn",
                            "fid_": "id of node"
                        }
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "params": {
                            "nodeId_": "id of context node",
                            "owner": "address of agent that will control the endpoint"
                        },
                        "returns": {
                            "endpointAddress": "address of created endpoint"
                        }
                    },
                    "getFidPath(uint256)": {
                        "params": {
                            "fid_": "target fid to trace path to from root"
                        },
                        "returns": {
                            "fids": "lineage in chronologic order"
                        }
                    },
                    "getUserNodeSignals(address,uint256)": {
                        "params": {
                            "parentNodeId": "node id for which originator has expressed",
                            "signalOrigin": "address of originator"
                        }
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "params": {
                            "amt_": "how many of to price",
                            "id_": "target node by id and its context token"
                        },
                        "returns": {
                            "inParentVal": "max price of inputs at current minted inflation"
                        }
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "Returns whether `operator` is approved to manage the tokens of `owner`."
                    },
                    "isMember(address,uint256)": {
                        "params": {
                            "whereabout_": "you abouting about where exactly",
                            "whoabout_": "you care about them dont you"
                        }
                    },
                    "mint(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "fid_": "id to target for mint of kind"
                        }
                    },
                    "mintInflation(uint256)": {
                        "params": {
                            "node": "identifier of node context"
                        }
                    },
                    "mintMembership(uint256)": {
                        "params": {
                            "fid_": "node for which to mint membership"
                        }
                    },
                    "mintPath(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "target_": "id to target for mint of kind"
                        }
                    },
                    "redistribute(uint256)": {
                        "params": {
                            "nodeId_": "redistribution target group"
                        }
                    },
                    "redistributePath(uint256)": {
                        "params": {
                            "nodeId_": "target node to actualize path to and mint inflation for"
                        }
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event."
                    },
                    "setControl(address)": {
                        "params": {
                            "newController": "address of new controller"
                        }
                    },
                    "spawnNode(uint256)": {
                        "params": {
                            "fid_": "context node id"
                        }
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "params": {
                            "balances_": "array of required balances for each token",
                            "fid_": "context (parent) node",
                            "inflationRate_": "rate for new Node token shares in gwei per second",
                            "meta_": "metadata string (e.g. IPFS hash) for membrane details",
                            "tokens_": "array of token addresses for membrane conditions"
                        }
                    },
                    "spawnRootNode(address)": {
                        "params": {
                            "fungible20_": "address of ERC20 token"
                        }
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas."
                    },
                    "taxPolicyPreference(address,uint256)": {
                        "params": {
                            "taxRate_": "share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "notice": "calculates and returns the value of a number of context tokens in terms of its root reserve"
                    },
                    "burn(uint256,uint256)": {
                        "notice": "burn the amount of targeted node id"
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "notice": "creates an external endpoint for an agent in node contextnode owner can be external"
                    },
                    "getFidPath(uint256)": {
                        "notice": "retrieves token path id array from root to target id"
                    },
                    "getUserNodeSignals(address,uint256)": {
                        "notice": "Returns the array containing signal info for each child node in given originator and parent context"
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "notice": "calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller"
                    },
                    "isMember(address,uint256)": {
                        "notice": "checks if provided address who is member in where id"
                    },
                    "mint(uint256,uint256)": {
                        "notice": "mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve"
                    },
                    "mintInflation(uint256)": {
                        "notice": "mints the inflation of a specific context tokenincreases ratio of reserve to context denomination"
                    },
                    "mintMembership(uint256)": {
                        "notice": "mints membership to calling address if it satisfies membership conditions"
                    },
                    "mintPath(uint256,uint256)": {
                        "notice": "mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root"
                    },
                    "options(bytes32,uint256)": {
                        "notice": "stores a users option for change and node state [ wanted value, lastExpressedAt ]"
                    },
                    "redistribute(uint256)": {
                        "notice": "redistributes eligible acummulated inflationary flows"
                    },
                    "redistributePath(uint256)": {
                        "notice": "redistributes eligible amounts to all nodes on target path and mints inflation for target"
                    },
                    "setControl(address)": {
                        "notice": "sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function"
                    },
                    "spawnNode(uint256)": {
                        "notice": "creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context"
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "notice": "spawns Node with an enforceable membership mechanism and creates new membrane"
                    },
                    "spawnRootNode(address)": {
                        "notice": "spawns core Node for a tokenacts as port for token valuenests all token specific contexts"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "@solady/=lib/solady/src/",
                "Will/=lib/Will/",
                "automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
                "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
                "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/",
                "openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "optimism/=lib/optimism/",
                "prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/",
                "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
                "solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "solady/=lib/solady/src/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/",
                "solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/",
                "src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/",
                "src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/",
                "src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/",
                "src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/",
                "will/contracts/=lib/will/packages/contracts/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/WillWe.sol": "WillWe"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
                "urls": [
                    "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
                    "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
                "urls": [
                    "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
                    "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
                "urls": [
                    "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
                    "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
                "urls": [
                    "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
                    "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
                ],
                "license": "MIT"
            },
            "lib/solady/src/tokens/ERC1155.sol": {
                "keccak256": "0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a",
                "urls": [
                    "bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581",
                    "dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9"
                ],
                "license": "MIT"
            },
            "src/Fun.sol": {
                "keccak256": "0xea13f5d272f3e5001580b715e364712f71324e8f55d14f1b1ba34bb646c19d50",
                "urls": [
                    "bzz-raw://8f82c7a0724bc715afce404c0cdedc5034d0d761336f2689677e9815a487bb15",
                    "dweb:/ipfs/QmVcifLw3Pfy3vkZrgTZVjkYvHHVssa5rGCz6NKeyatSwm"
                ],
                "license": "UNLICENSED"
            },
            "src/Fungido.sol": {
                "keccak256": "0x4a6dc00ab0018500674576cf1c144a4ee334decf1a05524697d5938670e48ec3",
                "urls": [
                    "bzz-raw://dbf3be557ee6f65179de2423dbce11522b6d8f3363bd86556d0e40444a62fff3",
                    "dweb:/ipfs/QmVMneugbRXWtbwhYg9yQnKEFPr3Ze6sNcdom3WUfu7ye2"
                ],
                "license": "UNLICENSED"
            },
            "src/WillWe.sol": {
                "keccak256": "0x9ba7fd8ca0262fb5443502964daa25e1fd34e4115ff293d72c2e3cd5e89af1fa",
                "urls": [
                    "bzz-raw://ae398d069ee07a21281dc8d27130c60a006b2629decc0372c075454774bfaad6",
                    "dweb:/ipfs/QmTc3Wy5BTM868GEnwTstoETbxJtXfbtURejLyDEHfoBgW"
                ],
                "license": "UNLICENSED"
            },
            "src/components/PureUtils.sol": {
                "keccak256": "0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7",
                "urls": [
                    "bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee",
                    "dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC"
                ],
                "license": "MIT"
            },
            "src/interfaces/IExecution.sol": {
                "keccak256": "0x17fa56f9da269654b1b8c3fd184ae2c674da717145aad049b7e0a3244827e4e4",
                "urls": [
                    "bzz-raw://bc9e58ac5a57bc96fe2884dfe1dcf471fef39dfe02df77e2e474f01b7421242f",
                    "dweb:/ipfs/QmezWNwydvvtdP3oSXJfStXQgSfTZudsFGoscjXMTvXA28"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IMembrane.sol": {
                "keccak256": "0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc",
                "urls": [
                    "bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25",
                    "dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 48218,
                "contract": "src/WillWe.sol:WillWe",
                "label": "entityCount",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
            },
            {
                "astId": 48220,
                "contract": "src/WillWe.sol:WillWe",
                "label": "executionAddress",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 48222,
                "contract": "src/WillWe.sol:WillWe",
                "label": "Will",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 48225,
                "contract": "src/WillWe.sol:WillWe",
                "label": "M",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(IMembrane)53773"
            },
            {
                "astId": 48230,
                "contract": "src/WillWe.sol:WillWe",
                "label": "totalSupplyOf",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 48236,
                "contract": "src/WillWe.sol:WillWe",
                "label": "childrenOf",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 48241,
                "contract": "src/WillWe.sol:WillWe",
                "label": "parentOf",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 48248,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inflSec",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 48255,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inUseMembraneId",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
            },
            {
                "astId": 48261,
                "contract": "src/WillWe.sol:WillWe",
                "label": "members",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
            },
            {
                "astId": 48268,
                "contract": "src/WillWe.sol:WillWe",
                "label": "options",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 48273,
                "contract": "src/WillWe.sol:WillWe",
                "label": "taxRate",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 48277,
                "contract": "src/WillWe.sol:WillWe",
                "label": "control",
                "offset": 0,
                "slot": "12",
                "type": "t_array(t_address)2_storage"
            },
            {
                "astId": 48279,
                "contract": "src/WillWe.sol:WillWe",
                "label": "impersonatingAddress",
                "offset": 0,
                "slot": "14",
                "type": "t_address"
            },
            {
                "astId": 48281,
                "contract": "src/WillWe.sol:WillWe",
                "label": "name",
                "offset": 0,
                "slot": "15",
                "type": "t_string_storage"
            },
            {
                "astId": 48283,
                "contract": "src/WillWe.sol:WillWe",
                "label": "symbol",
                "offset": 0,
                "slot": "16",
                "type": "t_string_storage"
            },
            {
                "astId": 48285,
                "contract": "src/WillWe.sol:WillWe",
                "label": "useBefore",
                "offset": 0,
                "slot": "17",
                "type": "t_bool"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
                "encoding": "inplace",
                "label": "address[2]",
                "numberOfBytes": "64",
                "base": "t_address"
            },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_array(t_uint256)2_storage": {
                "encoding": "inplace",
                "label": "uint256[2]",
                "numberOfBytes": "64",
                "base": "t_uint256"
            },
            "t_array(t_uint256)3_storage": {
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96",
                "base": "t_uint256"
            },
            "t_array(t_uint256)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32",
                "base": "t_uint256"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(IMembrane)53773": {
                "encoding": "inplace",
                "label": "contract IMembrane",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => address[])",
                "numberOfBytes": "32",
                "value": "t_array(t_address)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[2])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)2_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    },
    "ast": {
        "absolutePath": "src/WillWe.sol",
        "id": 51244,
        "exportedSymbols": {
            "Fun": [
                48194
            ],
            "WillWe": [
                51243
            ]
        },
        "nodeType": "SourceUnit",
        "src": "3372:896:57",
        "nodes": [
            {
                "id": 51145,
                "nodeType": "PragmaDirective",
                "src": "3372:23:57",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".25"
                ]
            },
            {
                "id": 51147,
                "nodeType": "ImportDirective",
                "src": "3397:30:57",
                "nodes": [],
                "absolutePath": "src/Fun.sol",
                "file": "./Fun.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 51244,
                "sourceUnit": 48195,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 51146,
                            "name": "Fun",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48194,
                            "src": "3405:3:57",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 51243,
                "nodeType": "ContractDefinition",
                "src": "3505:762:57",
                "nodes": [
                    {
                        "id": 51162,
                        "nodeType": "FunctionDefinition",
                        "src": "3534:76:57",
                        "nodes": [],
                        "body": {
                            "id": 51161,
                            "nodeType": "Block",
                            "src": "3608:2:57",
                            "nodes": [],
                            "statements": []
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 51157,
                                        "name": "Execution",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51152,
                                        "src": "3587:9:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 51158,
                                        "name": "Membrane",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51154,
                                        "src": "3598:8:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 51159,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 51156,
                                    "name": "Fun",
                                    "nameLocations": [
                                        "3583:3:57"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 48194,
                                    "src": "3583:3:57"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3583:24:57"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 51155,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51152,
                                    "mutability": "mutable",
                                    "name": "Execution",
                                    "nameLocation": "3554:9:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51162,
                                    "src": "3546:17:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 51151,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3546:7:57",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 51154,
                                    "mutability": "mutable",
                                    "name": "Membrane",
                                    "nameLocation": "3573:8:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51162,
                                    "src": "3565:16:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 51153,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3565:7:57",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3545:37:57"
                        },
                        "returnParameters": {
                            "id": 51160,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3608:0:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 51178,
                        "nodeType": "FunctionDefinition",
                        "src": "3616:127:57",
                        "nodes": [],
                        "body": {
                            "id": 51177,
                            "nodeType": "Block",
                            "src": "3697:46:57",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 51175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 51170,
                                            "name": "newID",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51168,
                                            "src": "3707:5:57",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 51173,
                                                    "name": "fid_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 51164,
                                                    "src": "3731:4:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 51171,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "3715:5:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$51243_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 51172,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3721:9:57",
                                                "memberName": "spawnNode",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 48690,
                                                "src": "3715:15:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 51174,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3715:21:57",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3707:29:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 51176,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3707:29:57"
                                }
                            ]
                        },
                        "baseFunctions": [
                            48690
                        ],
                        "functionSelector": "bfad25e5",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "spawnNode",
                        "nameLocation": "3625:9:57",
                        "overrides": {
                            "id": 51166,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3664:8:57"
                        },
                        "parameters": {
                            "id": 51165,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51164,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3643:4:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51178,
                                    "src": "3635:12:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51163,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3635:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3634:14:57"
                        },
                        "returnParameters": {
                            "id": 51169,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51168,
                                    "mutability": "mutable",
                                    "name": "newID",
                                    "nameLocation": "3690:5:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51178,
                                    "src": "3682:13:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51167,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3682:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3681:15:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 51191,
                        "nodeType": "FunctionDefinition",
                        "src": "3749:105:57",
                        "nodes": [],
                        "body": {
                            "id": 51190,
                            "nodeType": "Block",
                            "src": "3811:43:57",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 51187,
                                                "name": "fid_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51180,
                                                "src": "3842:4:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 51184,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "3821:5:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_WillWe_$51243_$",
                                                    "typeString": "type(contract super WillWe)"
                                                }
                                            },
                                            "id": 51186,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3827:14:57",
                                            "memberName": "mintMembership",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 48838,
                                            "src": "3821:20:57",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 51188,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3821:26:57",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 51189,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3821:26:57"
                                }
                            ]
                        },
                        "baseFunctions": [
                            48838
                        ],
                        "functionSelector": "0d78d0c1",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintMembership",
                        "nameLocation": "3758:14:57",
                        "overrides": {
                            "id": 51182,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3802:8:57"
                        },
                        "parameters": {
                            "id": 51181,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51180,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3781:4:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51191,
                                    "src": "3773:12:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51179,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3773:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3772:14:57"
                        },
                        "returnParameters": {
                            "id": 51183,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3811:0:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 51207,
                        "nodeType": "FunctionDefinition",
                        "src": "3860:111:57",
                        "nodes": [],
                        "body": {
                            "id": 51206,
                            "nodeType": "Block",
                            "src": "3929:42:57",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 51202,
                                                "name": "fid_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51193,
                                                "src": "3950:4:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 51203,
                                                "name": "amount_",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51195,
                                                "src": "3956:7:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 51199,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "3939:5:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_WillWe_$51243_$",
                                                    "typeString": "type(contract super WillWe)"
                                                }
                                            },
                                            "id": 51201,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3945:4:57",
                                            "memberName": "mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 48867,
                                            "src": "3939:10:57",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256,uint256)"
                                            }
                                        },
                                        "id": 51204,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3939:25:57",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 51205,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3939:25:57"
                                }
                            ]
                        },
                        "baseFunctions": [
                            48867
                        ],
                        "functionSelector": "1b2ef1ca",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "3869:4:57",
                        "overrides": {
                            "id": 51197,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3920:8:57"
                        },
                        "parameters": {
                            "id": 51196,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51193,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3882:4:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51207,
                                    "src": "3874:12:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51192,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3874:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 51195,
                                    "mutability": "mutable",
                                    "name": "amount_",
                                    "nameLocation": "3896:7:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51207,
                                    "src": "3888:15:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51194,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3888:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3873:31:57"
                        },
                        "returnParameters": {
                            "id": 51198,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3929:0:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 51226,
                        "nodeType": "FunctionDefinition",
                        "src": "3977:145:57",
                        "nodes": [],
                        "body": {
                            "id": 51225,
                            "nodeType": "Block",
                            "src": "4071:51:57",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 51223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 51217,
                                            "name": "topVal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51215,
                                            "src": "4081:6:57",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 51220,
                                                    "name": "fid_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 51209,
                                                    "src": "4101:4:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                {
                                                    "id": 51221,
                                                    "name": "amount_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 51211,
                                                    "src": "4107:7:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 51218,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "4090:5:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$51243_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 51219,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4096:4:57",
                                                "memberName": "burn",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 49049,
                                                "src": "4090:10:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 51222,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4090:25:57",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4081:34:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 51224,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4081:34:57"
                                }
                            ]
                        },
                        "baseFunctions": [
                            49049
                        ],
                        "functionSelector": "b390c0ab",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "burn",
                        "nameLocation": "3986:4:57",
                        "overrides": {
                            "id": 51213,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4037:8:57"
                        },
                        "parameters": {
                            "id": 51212,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51209,
                                    "mutability": "mutable",
                                    "name": "fid_",
                                    "nameLocation": "3999:4:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51226,
                                    "src": "3991:12:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51208,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3991:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 51211,
                                    "mutability": "mutable",
                                    "name": "amount_",
                                    "nameLocation": "4013:7:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51226,
                                    "src": "4005:15:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51210,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4005:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3990:31:57"
                        },
                        "returnParameters": {
                            "id": 51216,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51215,
                                    "mutability": "mutable",
                                    "name": "topVal",
                                    "nameLocation": "4063:6:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51226,
                                    "src": "4055:14:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51214,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4055:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4054:16:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "id": 51242,
                        "nodeType": "FunctionDefinition",
                        "src": "4128:137:57",
                        "nodes": [],
                        "body": {
                            "id": 51241,
                            "nodeType": "Block",
                            "src": "4214:51:57",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 51239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 51234,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51232,
                                            "src": "4224:6:57",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 51237,
                                                    "name": "node",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 51228,
                                                    "src": "4253:4:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 51235,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "4233:5:57",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_WillWe_$51243_$",
                                                        "typeString": "type(contract super WillWe)"
                                                    }
                                                },
                                                "id": 51236,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4239:13:57",
                                                "memberName": "mintInflation",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 49267,
                                                "src": "4233:19:57",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function (uint256) returns (uint256)"
                                                }
                                            },
                                            "id": 51238,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4233:25:57",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4224:34:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 51240,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4224:34:57"
                                }
                            ]
                        },
                        "baseFunctions": [
                            49267
                        ],
                        "functionSelector": "67c394fb",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintInflation",
                        "nameLocation": "4137:13:57",
                        "overrides": {
                            "id": 51230,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4180:8:57"
                        },
                        "parameters": {
                            "id": 51229,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51228,
                                    "mutability": "mutable",
                                    "name": "node",
                                    "nameLocation": "4159:4:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51242,
                                    "src": "4151:12:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51227,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4151:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4150:14:57"
                        },
                        "returnParameters": {
                            "id": 51233,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51232,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "4206:6:57",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51242,
                                    "src": "4198:14:57",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 51231,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4198:7:57",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4197:16:57"
                        },
                        "scope": 51243,
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 51149,
                            "name": "Fun",
                            "nameLocations": [
                                "3524:3:57"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48194,
                            "src": "3524:3:57"
                        },
                        "id": 51150,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3524:3:57"
                    }
                ],
                "canonicalName": "WillWe",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 51148,
                    "nodeType": "StructuredDocumentation",
                    "src": "3429:75:57",
                    "text": "@title WillWe\n @author parseb\n @notice Experimental. Do not use."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    51243,
                    48194,
                    50774,
                    51539,
                    42624
                ],
                "name": "WillWe",
                "nameLocation": "3514:6:57",
                "scope": 51244,
                "usedErrors": [
                    41797,
                    41800,
                    41803,
                    41806,
                    41809,
                    41812,
                    46803,
                    46805,
                    46807,
                    46809,
                    46811,
                    46813,
                    46815,
                    46817,
                    46819,
                    46821,
                    46823,
                    48334,
                    48336,
                    48338,
                    48340,
                    48342,
                    48344,
                    48346,
                    48348,
                    48350,
                    48352,
                    48354,
                    48356,
                    48358,
                    48360,
                    48362,
                    48364,
                    48366,
                    48368,
                    48370,
                    48372,
                    48374,
                    48376,
                    48378,
                    48380
                ],
                "usedEvents": [
                    41825,
                    41840,
                    41849,
                    41856,
                    46829,
                    46837,
                    46845,
                    46853,
                    46861,
                    46870,
                    48384,
                    48388,
                    48396,
                    48402,
                    48410,
                    48418,
                    48424,
                    48432,
                    48440,
                    48446
                ]
            }
        ],
        "license": "UNLICENSED"
    },
    "id": 57
}