{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "Execution",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "Membrane",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "Will",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allMembersOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "membersOf",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "asRootValuation",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "owners",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "balances",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "topVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "calculateUserTargetedPreferenceAmount",
            "inputs": [
                {
                    "name": "childId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "control",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "createEndpointForOwner",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "endpointAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "executionAddress",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAllNodesForRoot",
            "inputs": [
                {
                    "name": "rootAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "userIfAny",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "nodeSignals",
                            "type": "tuple",
                            "internalType": "struct AllNodeSignals",
                            "components": [
                                {
                                    "name": "signalers",
                                    "type": "address[]",
                                    "internalType": "address[]"
                                },
                                {
                                    "name": "inflationSignals",
                                    "type": "uint256[2][]",
                                    "internalType": "uint256[2][]"
                                },
                                {
                                    "name": "membraneSignals",
                                    "type": "uint256[2][]",
                                    "internalType": "uint256[2][]"
                                },
                                {
                                    "name": "redistributionSignals",
                                    "type": "uint256[][]",
                                    "internalType": "uint256[][]"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAllSignalsOfNode",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "all",
                    "type": "tuple",
                    "internalType": "struct AllNodeSignals",
                    "components": [
                        {
                            "name": "signalers",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "inflationSignals",
                            "type": "uint256[2][]",
                            "internalType": "uint256[2][]"
                        },
                        {
                            "name": "membraneSignals",
                            "type": "uint256[2][]",
                            "internalType": "uint256[2][]"
                        },
                        {
                            "name": "redistributionSignals",
                            "type": "uint256[][]",
                            "internalType": "uint256[][]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChildrenOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFidPath",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "fids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMembraneOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodeData",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodeData",
                    "type": "tuple",
                    "internalType": "struct NodeState",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "nodeSignals",
                            "type": "tuple",
                            "internalType": "struct AllNodeSignals",
                            "components": [
                                {
                                    "name": "signalers",
                                    "type": "address[]",
                                    "internalType": "address[]"
                                },
                                {
                                    "name": "inflationSignals",
                                    "type": "uint256[2][]",
                                    "internalType": "uint256[2][]"
                                },
                                {
                                    "name": "membraneSignals",
                                    "type": "uint256[2][]",
                                    "internalType": "uint256[2][]"
                                },
                                {
                                    "name": "redistributionSignals",
                                    "type": "uint256[][]",
                                    "internalType": "uint256[][]"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getParentOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUserNodeSignals",
            "inputs": [
                {
                    "name": "user_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "node_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inParentDenomination",
            "inputs": [
                {
                    "name": "amt_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "inParentVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inflationOf",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initSelfControl",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isMember",
            "inputs": [
                {
                    "name": "whoabout_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "whereabout_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "localizeEndpoint",
            "inputs": [
                {
                    "name": "endpoint_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "endpointParent_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipEnforce",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "s",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipID",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintInflation",
            "inputs": [
                {
                    "name": "node",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintMembership",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "options",
            "inputs": [
                {
                    "name": "NodeXUserXValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "valueAtTime",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redistribute",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "redistributePath",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "resignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "originator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sendSignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setControl",
            "inputs": [
                {
                    "name": "newController",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNode",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNodeWithMembrane",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokens_",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "balances_",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "meta_",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "inflationRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnRootNode",
            "inputs": [
                {
                    "name": "fungible20_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "fID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "taxPolicyPreference",
            "inputs": [
                {
                    "name": "rootToken_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "taxRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "toAddress",
            "inputs": [
                {
                    "name": "x",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "toID",
            "inputs": [
                {
                    "name": "x",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Burned",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CreatedEndpoint",
            "inputs": [
                {
                    "name": "endpoint",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationRateChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "oldInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "inflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "strength",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MemberRemoved",
            "inputs": [
                {
                    "name": "userAddress",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembershipMinted",
            "inputs": [
                {
                    "name": "who",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "previousMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "membraneId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "strength",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Minted",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewNode",
            "inputs": [
                {
                    "name": "newId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "creator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewRootNode",
            "inputs": [
                {
                    "name": "rootNodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Resignaled",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SelfControlAtAddress",
            "inputs": [
                {
                    "name": "AgencyLocus",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SharesGenerated",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "UserNodeSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "strenght",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AccountBalanceOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AlreadyMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ArrayLengthsMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BadLen",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BaseOrNonFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BurnE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CannotSkip",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Disabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EOA",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Endpoint",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExecutionOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "IncompleteSign",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientAmt",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientBalance",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembershipOp",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembraneNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MintE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "No",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoControl",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoSoup",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoTimeDelta",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeAlreadyExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Noise",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoiseNotVoice",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotNodeMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotOwnerNorApproved",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Overreach",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ResignalMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "RootExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SignalOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TargetIsRoot",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToNonERC1155ReceiverImplementer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToZeroAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unautorised",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unqualified",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnregisteredFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsoundMembership",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsupportedTransfer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "isControled",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "3505:107:64:-:0;;;3534:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2288:19:62;;;:7;:19;;;;2310:5;2288:19;:27;2325:16;:32;;-1:-1:-1;;;;;;2325:32:62;-1:-1:-1;;;;;2325:32:62;;;;;;;;2288:19;2374:37;;-1:-1:-1;;;2374:37:62;;;;2325:32;;3598:8:64;;2325:32:62;;3598:8:64;;2325:32:62;;2374:35;;:37;;;;;;;;;;2325:32;2374:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2367:4;:44;;-1:-1:-1;;;;;;2367:44:62;;;-1:-1:-1;;;;;2367:44:62;;;;;;;2421:1;:24;;;;;;;;;;;;;;2456:19;;;;;;;;;;;;-1:-1:-1;;;2456:19:62;;;;:4;;:19;;:4;:19;:::i;:::-;-1:-1:-1;2485:20:62;;;;;;;;;;;;-1:-1:-1;;;2485:20:62;;;;:6;;:20;;:6;:20;:::i;:::-;-1:-1:-1;;2516:9:62;:16;;2528:4;-1:-1:-1;;2516:16:62;;;;;;;;403:26:61;;-1:-1:-1;;;;;;403:26:61::1;-1:-1:-1::0;;;;;403:26:61;::::1;::::0;;::::1;::::0;;;439:44:::1;::::0;-1:-1:-1;;;439:44:61;;477:4:::1;439:44;::::0;::::1;3540:51:85::0;403:26:61;;-1:-1:-1;439:29:61::1;::::0;3513:18:85;;439:44:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;315:175:::0;;3534:76:64;;3505:107;;14:177:85;93:13;;-1:-1:-1;;;;;135:31:85;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:208::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;656:40;686:9;656:40;:::i;:::-;646:50;494:208;-1:-1:-1;;;494:208:85:o;707:127::-;768:10;763:3;759:20;756:1;749:31;799:4;796:1;789:15;823:4;820:1;813:15;839:380;918:1;914:12;;;;961;;;982:61;;1036:4;1028:6;1024:17;1014:27;;982:61;1089:2;1081:6;1078:14;1058:18;1055:38;1052:161;;1135:10;1130:3;1126:20;1123:1;1116:31;1170:4;1167:1;1160:15;1198:4;1195:1;1188:15;1052:161;;839:380;;;:::o;1350:518::-;1452:2;1447:3;1444:11;1441:421;;;1488:5;1485:1;1478:16;1532:4;1529:1;1519:18;1602:2;1590:10;1586:19;1583:1;1579:27;1573:4;1569:38;1638:4;1626:10;1623:20;1620:47;;;-1:-1:-1;1661:4:85;1620:47;1716:2;1711:3;1707:12;1704:1;1700:20;1694:4;1690:31;1680:41;;1771:81;1789:2;1782:5;1779:13;1771:81;;;1848:1;1834:16;;1815:1;1804:13;1771:81;;;1775:3;;1441:421;1350:518;;;:::o;2044:1345::-;2164:10;;-1:-1:-1;;;;;2186:30:85;;2183:56;;;2219:18;;:::i;:::-;2248:97;2338:6;2298:38;2330:4;2324:11;2298:38;:::i;:::-;2292:4;2248:97;:::i;:::-;2400:4;;2457:2;2446:14;;2474:1;2469:663;;;;3176:1;3193:6;3190:89;;;-1:-1:-1;3245:19:85;;;3239:26;3190:89;-1:-1:-1;;2001:1:85;1997:11;;;1993:24;1989:29;1979:40;2025:1;2021:11;;;1976:57;3292:81;;2439:944;;2469:663;1297:1;1290:14;;;1334:4;1321:18;;-1:-1:-1;;2505:20:85;;;2623:236;2637:7;2634:1;2631:14;2623:236;;;2726:19;;;2720:26;2705:42;;2818:27;;;;2786:1;2774:14;;;;2653:19;;2623:236;;;2627:3;2887:6;2878:7;2875:19;2872:201;;;2948:19;;;2942:26;-1:-1:-1;;3031:1:85;3027:14;;;3043:3;3023:24;3019:37;3015:42;3000:58;2985:74;;2872:201;;;3119:1;3110:6;3107:1;3103:14;3099:22;3093:4;3086:36;2439:944;;;;;2044:1345;;:::o;3394:203::-;3505:107:64;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106102b7575f3560e01c806368dc274711610177578063a6bfbc20116100d5578063e985e9c51161008f578063e985e9c5146106a4578063eef2e757146106cf578063f039a733146106ef578063f242432a14610702578063f6355a5614610715578063f77914c314610728578063f87cc6b31461073b575f80fd5b8063a6bfbc2014610619578063af1b55b014610639578063b390c0ab1461064c578063bd85b0391461065f578063bfad25e51461067e578063e0051aa914610691575f80fd5b80637f33d800116101315780637f33d8001461059f57806385752d03146105b257806395d89b41146105c557806399f45689146105cd578063a0762253146105e0578063a0ce552d146105f3578063a22cb46514610606575f80fd5b806368dc274714610538578063765063e51461054057806378adc79014610553578063791ddaf9146105665780637d11e682146105795780637e44bffe1461058c575f80fd5b80631f0178411161022457806345bbbf84116101de57806345bbbf841461049b5780634e1273f4146104c6578063535e9891146104d95780635ac8260c146104ec5780635b4a26ed146104ff57806362593f601461051257806367c394fb14610525575f80fd5b80631f0178411461041c5780631fae703b1461042f57806320f944271461044257806328ca8e26146104555780632eb2c2d61461046857806330f9b1651461047b575f80fd5b80630ffd3910116102755780630ffd391014610391578063114b6e49146103a457806313e75206146103b7578063150d503d146103d65780631b2ef1ca146103f65780631e9b388d14610409575f80fd5b8062fdd58e146102bb57806301ffc9a7146102fa57806306fdde031461033a5780630d78d0c11461034f5780630e89341c146103645780630f33634814610377575b5f80fd5b6102e76102c93660046150c6565b679a31110384e0b0c96020526014919091525f908152604090205490565b6040519081526020015b60405180910390f35b61032a6103083660046150f0565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b60405190151581526020016102f1565b61034261075b565b6040516102f19190615145565b61036261035d366004615157565b6107e7565b005b610342610372366004615157565b61094e565b6102e761038536600461516e565b6001600160a01b031690565b6102e761039f366004615189565b61097f565b6102e76103b2366004615334565b610a5f565b6102e76103c5366004615157565b5f9081526006602052604090205490565b6103e96103e43660046150c6565b610bbb565b6040516102f1919061545e565b610362610404366004615470565b610c64565b6102e7610417366004615470565b610cd4565b61036261042a3660046150c6565b610d4f565b61036261043d366004615490565b610dc6565b6102e7610450366004615470565b61105b565b6103626104633660046154be565b61107d565b610362610476366004615581565b61114f565b61048e610489366004615157565b611408565b6040516102f19190615793565b6104ae6104a9366004615490565b6118c3565b6040516001600160a01b0390911681526020016102f1565b6103e96104d43660046157a5565b6119ae565b6002546104ae906001600160a01b031681565b6103626104fa36600461516e565b611a1b565b61036261050d36600461580b565b611aa7565b61032a6105203660046150c6565b611f74565b6102e7610533366004615157565b6120aa565b6104ae612178565b6102e761054e366004615157565b61234a565b6001546104ae906001600160a01b031681565b610362610574366004615470565b612361565b6104ae610587366004615157565b6123b9565b6102e761059a366004615157565b6123d8565b6102e76105ad366004615470565b6123eb565b61032a6105c03660046150c6565b612472565b61034261248f565b6103e96105db366004615157565b61249c565b6102e76105ee366004615157565b6124fb565b6102e7610601366004615157565b612553565b61036261061436600461585b565b612744565b61062c610627366004615490565b61275d565b6040516102f191906159db565b6102e761064736600461516e565b61282e565b6102e761065a366004615470565b6128da565b6102e761066d366004615157565b5f9081526004602052604090205490565b6102e761068c366004615157565b612be0565b6104ae61069f366004615157565b612d1d565b61032a6106b23660046159ed565b679a31110384e0b0c96020526014919091525f526034600c205490565b6106e26106dd366004615157565b612d39565b6040516102f19190615a19565b6103626106fd366004615470565b612ea0565b610362610710366004615a2b565b612f8b565b6103e9610723366004615157565b613153565b6102e7610736366004615157565b613258565b61074e6107493660046159ed565b613280565b6040516102f19190615aa1565b6010805461076890615b03565b80601f016020809104026020016040519081016040528092919081815260200182805461079490615b03565b80156107df5780601f106107b6576101008083540402835291602001916107df565b820191905f5260205f20905b8154815290600101906020018083116107c257829003601f168201915b505050505081565b5f81815260066020526040812054900361081457604051634825e09360e01b815260040160405180910390fd5b5f818152600660205260409020548190036108425760405163bd23392760e01b815260040160405180910390fd5b5f8181526004602052604090205460010161087057604051630cf32f7560e21b815260040160405180910390fd5b61088161087b61336f565b82612472565b1561089f576040516340803a5f60e11b815260040160405180910390fd5b6003546001600160a01b03166389160e0e6108b861336f565b6108c1846123d8565b6040518363ffffffff1660e01b81526004016108de929190615b3b565b602060405180830381865afa1580156108f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091d9190615b54565b61093a5760405163b2cab42960e01b815260040160405180910390fd5b61094b61094561336f565b826133ae565b50565b60606109598261344b565b6040516020016109699190615b6f565b6040516020818303038152906040529050919050565b5f8481526006602052604081205484146109ac57604051635f12529560e01b815260040160405180910390fd5b5f6109e56109b986612d1d565b5f87815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b679a31110384e0b0c9602090815260148590525f878152604080822054600790935290205491925090633b9aca008211610a24575f9350505050610a57565b5f610a3184612710615bd6565b82610a3c8986615bd6565b610a469190615bd6565b610a509190615c01565b9450505050505b949350505050565b60035460405163333cabc560e01b81525f9182916001600160a01b039091169063333cabc590610a9790899089908990600401615c14565b6020604051808303815f875af1158015610ab3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad79190615c56565b9050610ae287612be0565b5f8181526008602052604090208281554260019091015591508215610b1457610b0f83633b9aca00615bd6565b610b1b565b64e8d4a510005b5f8381526007602052604081200155604080515f81526020810183905283917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a997611910160405180910390a25f82815260076020526040812083917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf918101546040805192835260208301919091520160405180910390a25095945050505050565b6060600c5f8484604051602001610beb92919060609290921b6001600160601b0319168252601482015260340190565b6040516020818303038152906040528051906020012081526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191905f5260205f20905b815481526020019060010190808311610c42575b505050505090505b92915050565b5f828152600660205260408120549003610c9157604051635f12529560e01b815260040160405180910390fd5b610cd0610c9c61336f565b8383604051602001610cbc906766756e6769626c6560c01b815260080190565b6040516020818303038152906040526134da565b5050565b5f8181526004602052604081205415610d46575f82815260046020526040902054610d2d610d0184612d1d565b5f85815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b610d379085615bd6565b610d419190615c01565b610d48565b5f5b9392505050565b600d546001600160a01b0316610d6361336f565b6001600160a01b031614610d8a576040516385ea10fd60e01b815260040160405180910390fd5b60018111610dab5760405163023ad70560e31b815260040160405180910390fd5b6001600160a01b039091165f908152600b6020526040902055565b5f610dd18284610bbb565b90506002815111610de157505050565b5f356001600160e01b03191663b390c0ab60e01b1480610e12575063f039a73360e01b6001600160e01b03195f3516145b15610fe0575f83815260056020908152604080832080548251818502810185019093528083529192909190830182828015610e6a57602002820191905f5260205f20905b815481526020019060010190808311610e56575b50939450600293505050505b825181108015610e9057508151610e8e600283615c6d565b105b15610fdd575f848684610ea4600286615c6d565b81518110610eb457610eb4615bae565b6020026020010151604051602001610ece93929190615c80565b6040516020818303038152906040528051906020012090505f83600284610ef59190615c6d565b81518110610f0557610f05615bae565b602002602001015187604051602001610f28929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f858152600a90935291206002015490915015610fc8575f818152600a60205260408082205484835291206002015410610f87575f818152600a6020526040812055610fb6565b5f828152600a602052604080822060020154838352908220805491929091610fb0908490615c6d565b90915550505b5f828152600a60205260408120600201555b50508080610fd590615ca5565b915050610e76565b50505b600f80546001600160a01b0319166001600160a01b0384161790556110058382611aa7565b600f80546001600160a01b03191690556040516001600160a01b0383168152839033907f081dd7a021608cb1e85f93c3e497da26967bb26442035ffc020ba466aed4049d906020015b60405180910390a3505050565b600a602052815f5260405f208160038110611074575f80fd5b01549150829050565b6001546001600160a01b031633146110a857604051630fc714ab60e01b815260040160405180910390fd5b6001600160a01b038181165f818152600960208181526040832080546001810182559084529083200180546001600160a01b031916948816949094179093559084906110f49190615cbd565b815260208082019290925260409081015f90812080546001810182559082528382200180546001600160a01b0319166001600160a01b0388169081179091558082526004909352205f19905561114a908361354e565b505050565b60125460ff16156111fa576111fa88888888808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284375f9201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284375f9201919091525061365692505050565b82851461120e57633b800a465f526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c98508861124c5763ea553b345f526004601cfd5b89331461126d57335f526034600c205461126d57634b6e7f185f526004601cfd5b8660051b5b80156112da576020810390508087013583602052818a01355f5260405f208054808311156112a75763f4d678b85f526004601cfd5b8290039055602083905260405f208054808301818110156112cf576301336cea5f526004601cfd5b909155506112729050565b505050604051604081528560051b602001604082018160208a03823781604001602084015281602088038383013750888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb60408586010186a4505061133e5f90565b15611353576113538888888888888888613915565b863b156113fe57865f5260405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a001806080850152826020890384840137820160a084015260208401601f19860183800183013750808101830160c401905060208282601c85015f80515af16113df573d156113df573d5f833e3d82fd5b50805163bc197c8160e01b146113fc57639c05499b5f526004601cfd5b505b5050505050505050565b6114336040518060800160405280606081526020016060815260200160608152602001606081525090565b5f61143d83612d39565b905080516001600160401b03811115611458576114586151c7565b604051908082528060200260200182016040528015611481578160200160208202803683370190505b50825280516001600160401b0381111561149d5761149d6151c7565b6040519080825280602002602001820160405280156114d657816020015b6114c3614f4e565b8152602001906001900390816114bb5790505b50602083015280516001600160401b038111156114f5576114f56151c7565b60405190808252806020026020018201604052801561152e57816020015b61151b614f4e565b8152602001906001900390816115135790505b50604083015280516001600160401b0381111561154d5761154d6151c7565b60405190808252806020026020018201604052801561158057816020015b606081526020019060019003908161156b5790505b5060608301525f5b81518110156118bc575f6001600160a01b03168282815181106115ad576115ad615bae565b60200260200101516001600160a01b031603156118b4575f8282815181106115d7576115d7615bae565b602002602001015190505f6115ec8287610bbb565b905081855f0151848151811061160457611604615bae565b6001600160a01b03909216602092830291909101909101528051156118b1578051156117d9576040518060400160405280825f8151811061164757611647615bae565b60200260200101518152602001600a5f89611668876001600160a01b031690565b865f8151811061167a5761167a615bae565b60200260200101516040516020016116a5939291909283526020830191909152604082015260600190565b6040516020818303038152906040528051906020012081526020019081526020015f206002600381106116da576116da615bae565b0154815250856040015184815181106116f5576116f5615bae565b602002602001018190525060405180604001604052808260018151811061171e5761171e615bae565b60200260200101518152602001600a5f8961173f876001600160a01b031690565b8660018151811061175257611752615bae565b602002602001015160405160200161177d939291909283526020830191909152604082015260600190565b6040516020818303038152906040528051906020012081526020019081526020015f206002600381106117b2576117b2615bae565b0154815250856020015184815181106117cd576117cd615bae565b60200260200101819052505b6002815111156118b1575f600282516117f29190615c6d565b6001600160401b03811115611809576118096151c7565b604051908082528060200260200182016040528015611832578160200160208202803683370190505b50905060025b825181101561188c5782818151811061185357611853615bae565b6020026020010151826002836118699190615c6d565b8151811061187957611879615bae565b6020908102919091010152600101611838565b5080866060015185815181106118a4576118a4615bae565b6020026020010181905250505b50505b600101611588565b5050919050565b5f6118ce8284612472565b6118eb576040516359c5ba6f60e11b815260040160405180910390fd5b6001546040516311eb232d60e21b8152336004820152602481018590526001600160a01b038481166044830152909116906347ac8cb4906064016020604051808303815f875af1158015611941573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119659190615cd0565b905082826001600160a01b0316826001600160a01b03167fcc812fbe8760ac7f5d76dc25596b5575304a089699833975adb3e253e8c627bd60405160405180910390a492915050565b60608382146119c457633b800a465f526004601cfd5b6040519050818152602081018260051b8181016040525b8015611a1157602081039050808701358060601b679a31110384e0b0c91760205250808501355f5260405f2054818301526119db565b5050949350505050565b600d5f01546001600160a01b03163314611a48576040516330e1d31f60e21b815260040160405180910390fd5b600e546001600160a01b03828116911603611a855750600e8054600d80546001600160a01b03199081166001600160a01b03841617909155169055565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b5f611ab9611ab361336f565b84612472565b90505f611ac761038561336f565b5f85815260066020526040902054909150849003611af857604051638c9b017f60e01b815260040160405180910390fd5b81611b1657604051639db14b6d60e01b815260040160405180910390fd5b5f611b3d611b2261336f565b679a31110384e0b0c96020526014525f868152604090205490565b5f86815260046020526040902054909150611b5c90620f424090615c01565b811015611b7c5760405163ccf7064560e01b815260040160405180910390fd5b611b85856120aa565b505f85815260056020908152604080832080548251818502810185019093528083529192909190830182828015611bd957602002820191905f5260205f20905b815481526020019060010190808311611bc5575b505050505090505f611be961336f565b87604051602001611c1392919060609290921b6001600160601b0319168252601482015260340190565b6040516020818303038152906040528051906020012090505f805b8751811015611d98575f888281518110611c4a57611c4a615bae565b602002602001015190505f8a8883604051602001611c7b939291909283526020830191909152604082015260600190565b60405160208183030381529060405280519060200120905060018311611d7157815f03611ca9575050611d90565b825f03611d0957611cb861336f565b6001600160a01b03168b7fb3e6e74723822f1505c88c48c07f18300671b4b94ad78cbbb8251f079b5f97bd848a604051611cfc929190918252602082015260400190565b60405180910390a3611d5e565b611d1161336f565b6001600160a01b03168b7f943160e80d4390312ba6a6b9454170cca140ef12a38700ecba2c4493c5aeeacb848a604051611d55929190918252602082015260400190565b60405180910390a35b611d6c8b83858a858a61391a565b611d8d565b611d808b8984868e518b6139d9565b611d8a8285615cbd565b93505b50505b600101611c2e565b6003885110158015611da957508115155b8015611db757508161271014155b15611dd557604051630442bea560e31b815260040160405180910390fd5b611dde86612d1d565b6001600160a01b0316897ff20290976fc9d3610e92cfe332f5574e0b98bc2ce4ea65d33fcbdf8488fddcf28a88604051611e19929190615ceb565b60405180910390a3600f546001600160a01b03166113fc575f838152600c6020908152604080832080548251818502810185019093528083529192909190830182828015611e8457602002820191905f5260205f20905b815481526020019060010190808311611e70575b505050505090506002815110611f4957885f81518110611ea657611ea6615bae565b60200260200101515f03611eed57805f81518110611ec657611ec6615bae565b6020026020010151895f81518110611ee057611ee0615bae565b6020026020010181815250505b88600181518110611f0057611f00615bae565b60200260200101515f03611f495780600181518110611f2157611f21615bae565b602002602001015189600181518110611f3c57611f3c615bae565b6020026020010181815250505b5f848152600c602090815260409091208a51611f67928c0190614f6c565b5050505050505050505050565b5f611f7f8383612472565b611f9c5760405163148fe22160e11b815260040160405180910390fd5b611fa461336f565b6001600160a01b0316836001600160a01b031603611fd857611fd083611fc984613258565b6001613b2d565b506001610c5e565b6003546001600160a01b03166389160e0e84611ff3856123d8565b6040518363ffffffff1660e01b8152600401612010929190615b3b565b602060405180830381865afa15801561202b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061204f9190615b54565b15905061205b82613258565b9150801561206f5761206f83836001613b2d565b60405182906001600160a01b038516907f3ac963493df564de734d98633f1145d21512e282ba4c02d3c1011119bf7f2862905f90a392915050565b5f818152600660205260408120548290036120c657505f919050565b5f82815260076020526040902080546002909101546120e59042615c6d565b6120ef9190615bd6565b9050805f036120ff57505f919050565b5f8281526007602052604090204290600201556040516834b7333630ba34b7b760b91b602082015261213990839081908490602901610cbc565b817f695f517929cb0a761ce9f28118b11060d9646bcf6668b6fc3dfb89aaddce26e48260405161216b91815260200190565b60405180910390a2919050565b600d545f906001600160a01b0316156121a45760405163bdc7d58160e01b815260040160405180910390fd5b60015460025460405163bfad25e560e01b81526001600160a01b03918216600482015291169063bd8f46f990309063bfad25e5906024016020604051808303815f875af11580156121f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061221b9190615c56565b6040518263ffffffff1660e01b815260040161223991815260200190565b6020604051808303815f875af1158015612255573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122799190615cd0565b600d5f0180546001600160a01b0319166001600160a01b03928316179055600354604080516301abf02960e51b81529051919092169163357e0520916004808301925f92919082900301818387803b1580156122d3575f80fd5b505af11580156122e5573d5f803e3d5ffd5b505050507ff890fc28c3f9900b0f626f2dbd8913e1cb84a7d771c3ca70f19ac3ed52cfde12600d5f6002811061231d5761231d615bae565b01546040516001600160a01b03909116815260200160405180910390a150600d546001600160a01b031690565b5f818152600760205260408120815b015492915050565b5f61236b83613153565b90505f5b81518110156123a35761239b82828151811061238d5761238d615bae565b602002602001015184610c64565b60010161236f565b80156123b3576123b38484610c64565b50505050565b600d81600281106123c8575f80fd5b01546001600160a01b0316905081565b5f81815260086020526040812081612359565b5f806123f684613153565b90505f805b82518110156124685780600184516124139190615c6d565b61241d9190615c6d565b915082828151811061243157612431615bae565b602002602001015195508560065f8881526020019081526020015f205403156124685761245e8587610cd4565b94506001016123fb565b5092949350505050565b5f6001612482846102c985613258565b10610c5e57506001610c5e565b6011805461076890615b03565b5f818152600560209081526040918290208054835181840281018401909452808452606093928301828280156124ef57602002820191905f5260205f20905b8154815260200190600101908083116124db575b50505050509050919050565b5f8061250683613153565b9050600191505b80518210156125445761253881838151811061252b5761252b615bae565b6020026020010151612553565b5081600101915061250d565b61254d836120aa565b50610d48835b5f8181526006602052604081205480820361258157604051636d9430a960e11b815260040160405180910390fd5b5f8181526006602052604090205481900361259e57505f92915050565b6125a7816120aa565b50604080516020808201869052818301849052825180830384018152606090920190925280519101205f6125f86125dd84612d1d565b679a31110384e0b0c96020526014525f848152604090205490565b5f838152600a60205260409020909150600101546126169042615c6d565b5f838152600a602052604090205461262e9190615bd6565b93508084111561263c578093505b5f828152600a60205260409020429060010155620186a0841061273c576126a861266584612d1d565b61266e87612d1d565b8587604051602001612694906d3932b234b9ba3934b13aba34b7b760911b8152600e0190565b604051602081830303815290604052613b84565b6126b46125dd86612d1d565b5f86815260046020526040902054101561273c5761273c6126d486612d1d565b5f87815260046020526040902054879061270b6126f083612d1d565b679a31110384e0b0c96020526014525f888152604090205490565b6127159190615c6d565b604051721c99591a5cdd1c9a589d5d1a5bdb97db5a5b9d606a1b6020820152603301610cbc565b505050919050565b604051633ac4266d60e11b815260040160405180910390fd5b612765614fb1565b61276e83613b92565b90506001600160a01b03821615610c5e57679a31110384e0b0c960205260148290525f83815260409020546127a79061344b565b61344b565b815161012001525f6127c2846001600160a01b038516615cbd565b5f8181526009602052604090205490915015612819575f818152600960205260408120805461281192906127f8576127f8615bae565b5f918252602090912001546001600160a01b0316613e9b565b825161014001525b61282284611408565b60c08301525092915050565b5f816001600160a01b03163b5f0361285957604051637dc5186f60e01b815260040160405180910390fd5b506001600160a01b0381165f818152600660205260409020541561289057604051633293a2cf60e01b815260040160405180910390fd5b61289a818261354e565b5f8081546128a790615ca5565b9091555060405181907f4bc7a1fd073ebdf928da09f58ed29b779ed99b26bddee327e87d0be21af8594f905f90a2919050565b5f8281526006602052604081205481036129075760405163bd23392760e01b815260040160405180910390fd5b5f83815260066020526040902054831461292a576129258284610cd4565b61292c565b815b905061294061293961336f565b8484613b2d565b5f8381526006602052604090205483146129f9573063f242432a61296385612d1d565b61296b61336f565b60065f8881526020019081526020015f2054856040516020016129989063313ab93760e11b815260040190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016129c7959493929190615d0c565b5f604051808303815f87803b1580156129de575f80fd5b505af11580156129f0573d5f803e3d5ffd5b50505050610c5e565b5f600b5f612a0686612d1d565b6001600160a01b0316815260208101919091526040015f205415612a5557600b5f612a3086612d1d565b6001600160a01b03166001600160a01b031681526020019081526020015f2054612a80565b5f8052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76545b9050612a8c8184615c01565b90505f612a998285615c6d565b9050808411612abb576040516337b936ed60e11b815260040160405180910390fd5b612ac485612d1d565b60025460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92612af7929116908690600401615b3b565b6020604051808303815f875af1158015612b13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b379190615b54565b8015612bbb5750612b4785612d1d565b6001600160a01b031663a9059cbb612b5d61336f565b836040518363ffffffff1660e01b8152600401612b7b929190615b3b565b6020604051808303815f875af1158015612b97573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bbb9190615b54565b612bd857604051632ebc317760e21b815260040160405180910390fd5b505092915050565b5f818152600660205260408120548103612c0257612c0061064783612d1d565b505b612c13612c0d61336f565b83612472565b158015612c2d57505f828152600660205260409020548214155b15612c4b5760405163148fe22160e11b815260040160405180910390fd5b5f82815260046020526040902054600101612c7957604051630cf32f7560e21b815260040160405180910390fd5b5f808154612c8690615ca5565b90915550612c98633b9aca0044615d50565b5f54612ca44285615c6d565b612cae9190615c6d565b612cb89190615c6d565b9050612cce612cc682612d1d565b306001613eb1565b612cd8818361354e565b333014612cea57612cea61094561336f565b6040513390839083907f907e845f974b1e16735c498eca2c72acd8c3d61c86675d4cab952054450ee358905f90a4919050565b5f6001600160a01b038211612d325781610c5e565b5f92915050565b5f818152600960209081526040808320805482518185028101850190935280835260609493830182828015612d9557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311612d77575b5050505050905080516001600160401b03811115612db557612db56151c7565b604051908082528060200260200182016040528015612dde578160200160208202803683370190505b5091505f5b81518110156118bc575f6001600160a01b0316828281518110612e0857612e08615bae565b60200260200101516001600160a01b03160315612e98575f612e46838381518110612e3557612e35615bae565b60200260200101516102c987613258565b10612e9857818181518110612e5d57612e5d615bae565b6020026020010151838281518110612e7757612e77615bae565b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101612de3565b5f828152600660205260408120549003612ecd5760405163bd23392760e01b815260040160405180910390fd5b5f612ed783613153565b90505f805b8251811015612f79578060018451612ef49190615c6d565b612efe9190615c6d565b915083612f27612f0c61336f565b679a31110384e0b0c96020526014525f878152604090205490565b1015612f4657604051632f72e11160e21b815260040160405180910390fd5b612f5085856128da565b9350828281518110612f6457612f64615bae565b60200260200101519450806001019050612edc565b50612f8484846128da565b5050505050565b60125460ff1615613008576130088686612fb8876040805180820190915260018152602081019190915290565b60408051808201909152600181526020810188905286868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061365692505050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c9650866130465763ea553b345f526004601cfd5b87331461306757335f526034600c205461306757634b6e7f185f526004601cfd5b855f5260405f2091508154808611156130875763f4d678b85f526004601cfd5b8581038355508060205260405f2091508154858101818110156130b1576301336cea5f526004601cfd5b909255505060208390528486335f80516020615f8983398151915260405fa4843b1561314b5760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c84015f8a5af161312d573d1561312d573d5f823e3d81fd5b805163f23a6e6160e01b1461314957639c05499b5f526004601cfd5b505b505050505050565b5f818152600660205260409020546060906001905b613173846001615cbd565b81106131ad575f8181526006602052604090205481146131ad5761319682615ca5565b5f9182526006602052604090912054909150613168565b816001600160401b038111156131c5576131c56151c7565b6040519080825280602002602001820160405280156131ee578160200160208202803683370190505b5092505f90505b818110156118bc575f848152600660205260409020548360016132188486615c6d565b6132229190615c6d565b8151811061323257613232615bae565b6020908102919091018101919091525f94855260069052604090932054926001016131f5565b5f6804e1003b28d928000082111561327c57610c5e678ac7230489e8000083615d50565b5090565b6001600160a01b0382165f81815260096020526040902054606091906001600160401b038111156132b3576132b36151c7565b6040519080825280602002602001820160405280156132ec57816020015b6132d9614fb1565b8152602001906001900390816132d15790505b5091505f5b5f82815260096020526040902054811015612bd8575f828152600960205260409020805461334a91613344918490811061332d5761332d615bae565b5f918252602090912001546001600160a01b031690565b8561275d565b83828151811061335c5761335c615bae565b60209081029190910101526001016132f1565b600f545f906001600160a01b0316156133925750600f546001600160a01b031690565b6002546001600160a01b031633036133a957503090565b503390565b5f8181526009602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b038416179055613412826133f183613258565b6040516906d656d626572736869760b41b6020820152600190602a01610cbc565b60405181906001600160a01b038416907fbab4562ae868d1765ed8452e98bba908a974596c4babc3ada5e90e05e3f433fb905f90a35050565b60605f61345783613f09565b60010190505f816001600160401b03811115613475576134756151c7565b6040519080825280601f01601f19166020018201604052801561349f576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846134a957509392505050565b6134e684848484613fe0565b5f8381526004602052604081208054849290613503908490615cbd565b909155505060405182815283906001600160a01b038616907f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff9060200160405180910390a350505050565b5f828152600660205260409020541561357a5760405163731918fb60e11b815260040160405180910390fd5b5f828152600660205260409020819055818114610cd0575f81815260056020908152604082208054600181018255908352908220018390556009906135be83613153565b5f815181106135cf576135cf615bae565b602002602001015181526020019081526020015f206135ed83612d1d565b8154600180820184555f938452602080852090920180546001600160a01b0319166001600160a01b0394909416939093179092558483526004905260409091205401613637575050565b505f90815260076020526040902064e8d4a51000815542600290910155565b6304ed360560e51b5f356001600160e01b0319160115612f84575f5b808451111561314b575f84828151811061368e5761368e615bae565b602002602001015190505f8483815181106136ab576136ab615bae565b602002602001015190505f6001600160a01b0316886001600160a01b0316141580156136df57506001600160a01b03871615155b80156136f657505f82815260066020526040902054155b156137145760405163ce2d28e160e01b815260040160405180910390fd5b678ac7230489e800008210156137d3575f356001600160e01b031916630d78d0c160e01b14158061375757505f356001600160e01b031916630312c9fb60e51b14155b8061377457505f356001600160e01b031916630af1b55b60e41b14155b8061379157505f356001600160e01b03191663114b6e4960e01b14155b806137ae57505f356001600160e01b03191663bfad25e560e01b14155b6137cb57604051630dbd110f60e21b815260040160405180910390fd5b505050612f84565b5f356001600160e01b031916630d9778e560e11b148061380457505f356001600160e01b03191663791ddaf960e01b145b1561390b575f828152600660205260409020548290036138c05761382782612d1d565b6040516323b872dd60e01b81526001600160a01b0389811660048301523060248301526044820184905291909116906323b872dd906064016020604051808303815f875af115801561387b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061389f9190615b54565b6138bb5760405162916a1960e51b815260040160405180910390fd5b61390b565b6012805460ff191690556138fd6138d561336f565b6138de84612d1d565b5f85815260066020526040812054908590610710906001903681615d63565b6012805460ff191660011790555b5050600101613672565b6113fe565b841561314b57604080516020808201899052818301889052825180830384018152606090920183528151918101919091205f858152600a90925291902060010154420361397a5760405163d445b7c360e01b815260040160405180910390fd5b845f03613995576139908784838988878b6140c5565b6139a4565b6139a48784838988878b6142a7565b50505f908152600a60209081526040808320426001918201556005835290832080549182018155835291200192909255505050565b6139e4600283615c6d565b815114613a0457604051631b9103a360e11b815260040160405180910390fd5b5f858783613a13600288615c6d565b81518110613a2357613a23615bae565b6020026020010151604051602001613a3d93929190615c80565b60408051808303601f1901815291815281516020928301205f818152600a90935291205490915061271086118015613a73575080155b15613a7f57505061314b565b612710861115613aa25760405163bb82191f60e01b815260040160405180910390fd5b8581141580613abb5750600f546001600160a01b031615155b156113fe57858114613adf575f828152600a60205260409020868155426001909101555b613afe83613aee600288615c6d565b8151811061252b5761252b615bae565b506113fe83613b0e600288615c6d565b81518110613b1e57613b1e615bae565b6020026020010151898461443c565b613b388383836145a7565b6001600160a01b0383165f908152600460205260409020546001111580613b7057505f356001600160e01b031916635b4a26ed60e01b145b15613b7a57505050565b61114a8284610dc6565b612f845f8686868686614654565b613b9a614fb1565b613ba38261344b565b8151525f828152600760205260408120613bbf915b015461344b565b815160200152613bd46127a2610d0184612d1d565b815160400152613be96127a26125dd84612d1d565b815160600152613c026127a2836105ad611b2282612d1d565b815160800152613c1b6127a2836105ad6109b982612d1d565b815160a001525f828152600860205260408120613c3791613bb8565b815160c001525f828152600660209081526040808320548151808401879052808301829052825180820384018152606090910183528051908401208452600a90925290912054613c8a916127a2916123eb565b815160e001525f828152600760205260409020613ca8906002613bb8565b815161010001526040805180820182526001808252600360fc1b6020808401829052855161012001939093528351808501855291825281830152835161014001525f84815260049091522054613cfd9061344b565b815161016001526003545f8381526008602052604090819020549051631ba2a35b60e31b815260048101919091526001600160a01b039091169063dd151ad8906024015f60405180830381865afa158015613d5a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052613d819190810190615e33565b604001516020820152613d9382612d39565b60408201526001546009905f90613db49085906001600160a01b0316615cbd565b81526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015613e1357602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311613df5575b505050505060808201525f828152600560209081526040918290208054835181840281018401909452808452613e7b9392830182828015613e7157602002820191905f5260205f20905b815481526020019060010190808311613e5d575b505050505061478a565b6060820152613e91613e8c83613153565b61478a565b60a0820152919050565b6060610c5e6001600160a01b0383166014614835565b8015159050679a31110384e0b0c960205282601452815f52806034600c2055805f525f1960601c8281168482167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310613f475772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310613f73576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613f9157662386f26fc10000830492506010015b6305f5e1008310613fa9576305f5e100830492506008015b6127108310613fbd57612710830492506004015b60648310613fcf576064830492506002015b600a8310610c5e5760010192915050565b60125460ff1615614028576140285f8561400d866040805180820190915260018152602081019190915290565b60408051808201909152600181526020810187905285613656565b8360601b8061403e5763ea553b345f526004601cfd5b679a31110384e0b0c960205284601452835f5260405f2080548481018181101561406f576301336cea5f526004601cfd5b808355505050826020528060601c5f335f80516020615f8983398151915260405fa4506140b1565b6040805180820190915260018152602081018790526123b3565b833b156123b3576123b35f858585856149ce565b6001600160a01b038410806141495750600354604051631ba2a35b60e31b8152600481018690526001600160a01b039091169063dd151ad8906024015f60405180830381865afa15801561411b573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526141429190810190615e33565b6040015151155b1561416757604051639cd2c44760e01b815260040160405180910390fd5b6141768686868686868d614a58565b5f87815260046020908152604080832054888452600a9092529091205461419e906002615bd6565b1115613149576003546040516350885bc560e01b8152600481018990525f916001600160a01b0316906350885bc5906024016040805180830381865afa1580156141ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061420e9190615f47565b5090508061422f5760405163a74ab56560e01b815260040160405180910390fd5b5f88815260086020526040812089917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a99761191015460408051918252602082018990520160405180910390a2604080518082018252868152426020808301919091525f8b81526008909152919091206113fc91600261501c565b6142b68686868686868d614a58565b5f87815260046020908152604080832054888452600a909252909120546142de906002615bd6565b1115613149576003546040516350885bc560e01b8152600481018990525f916001600160a01b0316906350885bc5906024016040805180830381865afa15801561432a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061434e9190615f47565b5090508061436f5760405163a74ab56560e01b815260040160405180910390fd5b614378886120aa565b505f8881526007602052604090205488907f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf906143b988633b9aca00615bd6565b6040805192835260208301919091520160405180910390a25f888152600760205260409020546143f89089906143f388633b9aca00615bd6565b614c53565b604051806060016040528086633b9aca006144139190615bd6565b81524260208083018290526040928301919091525f8b81526007909152206113fc916003615049565b604080516020808201869052818301859052825180830384018152606090920183528151918101919091205f848152600a90925291812054614484908690869061039f61336f565b5f848152600a60205260409020909150600101544210156144b85760405163d445b7c360e01b815260040160405180910390fd5b5f828152600a602052604080822054858352912060020154106144e8575f828152600a6020526040812055614517565b5f838152600a602052604080822060020154848352908220805491929091614511908490615c6d565b90915550505b5f828152600a602052604081208054839290614534908490615cbd565b90915550505f84815260076020526040812001545f838152600a602052604081200154111561457c575f84815260076020526040812001545f838152600a6020526040812001555b5f918252600a6020526040808320426001918201819055948452922091820192909255600201555050565b5f82815260046020526040812080548392906145c4908490615c6d565b90915550505f82815260066020526040902054821080156145ec5750678ac7230489e8000082115b1561460d576145fa826120aa565b5061114a61460661336f565b8383614e6e565b614618838383614e6e565b81836001600160a01b03167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f8360405161104e91815260200190565b60125460ff161561468157614681858561400d866040805180820190915260018152602081019190915290565b8460601b8460601b8061469b5763ea553b345f526004601cfd5b81679a31110384e0b0c9176020528760601b8281148115176146d157885f526034600c20546146d157634b6e7f185f526004601cfd5b50845f5260405f208054808611156146f05763f4d678b85f526004601cfd5b8590039055679a31110384e0b0c9811760205260405f20805480860181811015614721576301336cea5f526004601cfd5b808355505050836020528060601c8260601c335f80516020615f8983398151915260405fa4505061474f5f90565b15614776576147768585614097866040805180820190915260018152602081019190915290565b833b1561314b5761314b85858585856149ce565b60605f82516001600160401b038111156147a6576147a66151c7565b6040519080825280602002602001820160405280156147d957816020015b60608152602001906001900390816147c45790505b5090505f5b835181101561482e576148098482815181106147fc576147fc615bae565b602002602001015161344b565b82828151811061481b5761481b615bae565b60209081029190910101526001016147de565b5092915050565b60605f614843836002615bd6565b61484e906002615cbd565b6001600160401b03811115614865576148656151c7565b6040519080825280601f01601f19166020018201604052801561488f576020820181803683370190505b509050600360fc1b815f815181106148a9576148a9615bae565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106148d7576148d7615bae565b60200101906001600160f81b03191690815f1a9053505f6148f9846002615bd6565b614904906001615cbd565b90505b600181111561497b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061493857614938615bae565b1a60f81b82828151811061494e5761494e615bae565b60200101906001600160f81b03191690815f1a90535060049490941c9361497481615f73565b9050614907565b508315610d485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b60405163f23a6e6181523360208201528560601b60601c604082015283606082015282608082015260a08082015281518060c08301528015614a1a578060e08301826020860160045afa505b6020828260c401601c85015f8a5af1614a3b573d15614a3b573d5f833e3d82fd5b50805163f23a6e6160e01b1461314b57639c05499b5f526004601cfd5b5f878152600a602052604090206001015415614ace575f878152600a6020526040812060020154118015614a9a57505f878152600a6020526040812060010154115b15614ace575f878152600a602052604080822060020154888352908220805491929091614ac8908490615c6d565b90915550505b5f838152600c6020526040902054821015614bf2575f838152600c60205260408120805484908110614b0257614b02615bae565b905f5260205f2001549050858114614bf057600a5f83614b2061336f565b84604051602001614b519392919092835260609190911b6001600160601b0319166020830152603482015260540190565b6040516020818303038152906040528051906020012081526020019081526020015f20600260038110614b8657614b86615bae565b0154600a5f8484604051602001614ba7929190918252602082015260400190565b6040516020818303038152906040528051906020012081526020019081526020015f205f60038110614bdb57614bdb615bae565b015f828254614bea9190615c6d565b90915550505b505b60408051606081018252868152426020808301919091528183018790525f8a8152600a90915291909120614c27916003615049565b505f868152600a602052604081208054869290614c45908490615cbd565b909155505050505050505050565b5f83815260056020908152604080832080548251818502810185019093528083529192909190830182828015614ca657602002820191905f5260205f20905b815481526020019060010190808311614c92575b5050505050905080515f03614cbb5750505050565b5f805b8251811015614d82575f838281518110614cda57614cda615bae565b602002602001015187604051602001614cfd929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f818152600a909352912054909150614d2e8185615cbd565b9350633b9aca00811115614d7857614d5185848151811061252b5761252b615bae565b505f87614d5e8884615bd6565b614d689190615c01565b5f848152600a6020526040902055505b5050600101614cbe565b5063773594008110158015614dbf57505f85815260076020526040902054614daf90633b9aca0090615c01565b614dbd633b9aca0083615c01565b105b15614e2c575f614dfd614dd187612d1d565b5f88815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b5f87815260046020526040902054614e159190615c6d565b9050614e2a614e2387612d1d565b8783613b2d565b505b604080518581526020810185905286917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf910160405180910390a25050505050565b61114a5f84848460125460ff1615614ecb57614ecb835f614ea2856040805180820190915260018152602081019190915290565b60408051808201909152600181526020810186905260405180602001604052805f815250613656565b8260601b80679a31110384e0b0c917602052808560601b148560601b1517614f0757845f526034600c2054614f0757634b6e7f185f526004601cfd5b825f5260405f20805480841115614f255763f4d678b85f526004601cfd5b83810382555050816020525f8160601c335f80516020615f8983398151915260405fa4506123b3565b60405180604001604052806002906020820280368337509192915050565b828054828255905f5260205f20908101928215614fa5579160200282015b82811115614fa5578251825591602001919060010190614f8a565b5061327c929150615076565b6040518060e00160405280614fc461508a565b815260200160608152602001606081526020016060815260200160608152602001606081526020016150176040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b8260028101928215614fa55791602002820182811115614fa5578251825591602001919060010190614f8a565b8260038101928215614fa55791602002820182811115614fa5578251825591602001919060010190614f8a565b5b8082111561327c575f8155600101615077565b604051806101800160405280600c905b606081526020019060019003908161509a5790505090565b6001600160a01b038116811461094b575f80fd5b5f80604083850312156150d7575f80fd5b82356150e2816150b2565b946020939093013593505050565b5f60208284031215615100575f80fd5b81356001600160e01b031981168114610d48575f80fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610d486020830184615117565b5f60208284031215615167575f80fd5b5035919050565b5f6020828403121561517e575f80fd5b8135610d48816150b2565b5f805f806080858703121561519c575f80fd5b84359350602085013592506040850135915060608501356151bc816150b2565b939692955090935050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156151fd576151fd6151c7565b60405290565b604051601f8201601f191681016001600160401b038111828210171561522b5761522b6151c7565b604052919050565b5f6001600160401b0382111561524b5761524b6151c7565b5060051b60200190565b5f82601f830112615264575f80fd5b8135602061527961527483615233565b615203565b8083825260208201915060208460051b87010193508684111561529a575f80fd5b602086015b848110156152b6578035835291830191830161529f565b509695505050505050565b5f6001600160401b038211156152d9576152d96151c7565b50601f01601f191660200190565b5f82601f8301126152f6575f80fd5b8135615304615274826152c1565b818152846020838601011115615318575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215615348575f80fd5b853594506020808701356001600160401b0380821115615366575f80fd5b818901915089601f830112615379575f80fd5b813561538761527482615233565b81815260059190911b8301840190848101908c8311156153a5575f80fd5b938501935b828510156153cc5784356153bd816150b2565b825293850193908501906153aa565b9850505060408901359250808311156153e3575f80fd5b6153ef8a848b01615255565b95506060890135925080831115615404575f80fd5b5050615412888289016152e7565b95989497509295608001359392505050565b5f815180845260208085019450602084015f5b8381101561545357815187529582019590820190600101615437565b509495945050505050565b602081525f610d486020830184615424565b5f8060408385031215615481575f80fd5b50508035926020909101359150565b5f80604083850312156154a1575f80fd5b8235915060208301356154b3816150b2565b809150509250929050565b5f805f606084860312156154d0575f80fd5b83356154db816150b2565b92506020840135915060408401356154f2816150b2565b809150509250925092565b5f8083601f84011261550d575f80fd5b5081356001600160401b03811115615523575f80fd5b6020830191508360208260051b850101111561553d575f80fd5b9250929050565b5f8083601f840112615554575f80fd5b5081356001600160401b0381111561556a575f80fd5b60208301915083602082850101111561553d575f80fd5b5f805f805f805f8060a0898b031215615598575f80fd5b88356155a3816150b2565b975060208901356155b3816150b2565b965060408901356001600160401b03808211156155ce575f80fd5b6155da8c838d016154fd565b909850965060608b01359150808211156155f2575f80fd5b6155fe8c838d016154fd565b909650945060808b0135915080821115615616575f80fd5b506156238b828c01615544565b999c989b5096995094979396929594505050565b5f815180845260208085019450602084015f5b838110156154535781516001600160a01b03168752958201959082019060010161564a565b5f815180845260208085019450602084015f5b83811015615453578151875f5b60028110156156ac5782518252918501919085019060010161568f565b5050506040969096019590820190600101615682565b5f8151608084526156d66080850182615637565b9050602080840151858303828701526156ef838261566f565b92505060408401518583036040870152615709838261566f565b925050606084015185830360608701528281518085528385019150838160051b86010184840193505f5b8281101561578657868203601f190184528451805180845290870190878401905f5b8181101561577157835183529289019291890191600101615755565b50509587019594870194925050600101615733565b5098975050505050505050565b602081525f610d4860208301846156c2565b5f805f80604085870312156157b8575f80fd5b84356001600160401b03808211156157ce575f80fd5b6157da888389016154fd565b909650945060208701359150808211156157f2575f80fd5b506157ff878288016154fd565b95989497509550505050565b5f806040838503121561581c575f80fd5b8235915060208301356001600160401b03811115615838575f80fd5b61584485828601615255565b9150509250929050565b801515811461094b575f80fd5b5f806040838503121561586c575f80fd5b8235615877816150b2565b915060208301356154b38161584e565b5f826101808101835f5b600c8110156158c05783830387526158aa838351615117565b6020978801979093509190910190600101615891565b509095945050505050565b5f8282518085526020808601955060208260051b840101602086015f5b8481101561591657601f19868403018952615904838351615117565b988401989250908301906001016158e8565b5090979650505050505050565b5f815160e0845261593760e0850182615887565b9050602083015184820360208601526159508282615117565b9150506040830151848203604086015261596a8282615637565b9150506060830151848203606086015261598482826158cb565b9150506080830151848203608086015261599e8282615637565b91505060a083015184820360a08601526159b882826158cb565b91505060c083015184820360c08601526159d282826156c2565b95945050505050565b602081525f610d486020830184615923565b5f80604083850312156159fe575f80fd5b8235615a09816150b2565b915060208301356154b3816150b2565b602081525f610d486020830184615637565b5f805f805f8060a08789031215615a40575f80fd5b8635615a4b816150b2565b95506020870135615a5b816150b2565b9450604087013593506060870135925060808701356001600160401b03811115615a83575f80fd5b615a8f89828a01615544565b979a9699509497509295939492505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015615af657603f19888603018452615ae4858351615923565b94509285019290850190600101615ac8565b5092979650505050505050565b600181811c90821680615b1757607f821691505b602082108103615b3557634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b03929092168252602082015260400190565b5f60208284031215615b64575f80fd5b8151610d488161584e565b7f68747470733a2f2f77696c6c77652e78797a2f6d657461646174612f0000000081525f82518060208501601c85015e5f9201601c0191825250919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c5e57610c5e615bc2565b634e487b7160e01b5f52601260045260245ffd5b5f82615c0f57615c0f615bed565b500490565b606081525f615c266060830186615637565b8281036020840152615c388186615424565b90508281036040840152615c4c8185615117565b9695505050505050565b5f60208284031215615c66575f80fd5b5051919050565b81810381811115610c5e57610c5e615bc2565b60609390931b6001600160601b03191683526014830191909152603482015260540190565b5f60018201615cb657615cb6615bc2565b5060010190565b80820180821115610c5e57610c5e615bc2565b5f60208284031215615ce0575f80fd5b8151610d48816150b2565b604081525f615cfd6040830185615424565b90508260208301529392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90615d4590830184615117565b979650505050505050565b5f82615d5e57615d5e615bed565b500690565b5f8085851115615d71575f80fd5b83861115615d7d575f80fd5b5050820193919092039150565b5f82601f830112615d99575f80fd5b81516020615da961527483615233565b8083825260208201915060208460051b870101935086841115615dca575f80fd5b602086015b848110156152b65780518352918301918301615dcf565b5f82601f830112615df5575f80fd5b8151615e03615274826152c1565b818152846020838601011115615e17575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f6020808385031215615e44575f80fd5b82516001600160401b0380821115615e5a575f80fd5b9084019060808287031215615e6d575f80fd5b615e756151db565b825182811115615e83575f80fd5b8301601f81018813615e93575f80fd5b8051615ea161527482615233565b81815260059190911b8201860190868101908a831115615ebf575f80fd5b928701925b82841015615ee6578351615ed7816150b2565b82529287019290870190615ec4565b84525050508284015182811115615efb575f80fd5b615f0788828601615d8a565b85830152506040830151935081841115615f1f575f80fd5b615f2b87858501615de6565b6040820152606083015160608201528094505050505092915050565b5f8060408385031215615f58575f80fd5b8251615f638161584e565b6020939093015192949293505050565b5f81615f8157615f81615bc2565b505f19019056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a26469706673582212204fa324a586c11d7bf0d0b4638e7ad25441fd5c34e52b117a5a1e9af7ef2ab27e64736f6c63430008190033",
        "sourceMap": "3505:107:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:334:49;;;;;;:::i;:::-;6250:25;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;;;;616:25:85;;;604:2;589:18;6070:334:49;;;;;;;;19823:385;;;;;;:::i;:::-;20141:10;20001:3;19997:21;;;;20135:17;;;20160:10;20154:17;;20132:40;20180:10;20174:17;;;20129:63;;19823:385;;;;1108:14:85;;1101:22;1083:41;;1071:2;1056:18;19823:385:49;943:187:85;2153:18:62;;;:::i;:::-;;;;;;;:::i;8011:446::-;;;;;;:::i;:::-;;:::i;:::-;;21223:175;;;;;;:::i;:::-;;:::i;18946:98::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19018:19:62;;18946:98;14471:676:61;;;;;;:::i;:::-;;:::i;7213:648:62:-;;;;;;:::i;:::-;;:::i;20225:103::-;;;;;;:::i;:::-;20281:7;20307:14;;;:8;:14;;;;;;;20225:103;24408:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8695:205::-;;;;;;:::i;:::-;;:::i;14995:228::-;;;;;;:::i;:::-;;:::i;13684:232::-;;;;;;:::i;:::-;;:::i;1300:1327:61:-;;;;;;:::i;:::-;;:::i;1739:73:62:-;;;;;;:::i;:::-;;:::i;12457:401::-;;;;;;:::i;:::-;;:::i;12757:5689:49:-;;;;;;:::i;:::-;;:::i;24593:1523:62:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14096:347:61:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;13747:32:85;;;13729:51;;13717:2;13702:18;14096:347:61;13583:203:85;18593:1021:49;;;;;;:::i;:::-;;:::i;787:19:62:-;;;;;-1:-1:-1;;;;;787:19:62;;;4527:295;;;;;;:::i;:::-;;:::i;2633:2066:61:-;;;;;;:::i;:::-;;:::i;11197:446:62:-;;;;;;:::i;:::-;;:::i;11827:412::-;;;;;;:::i;:::-;;:::i;4979:327::-;;;:::i;20487:111::-;;;;;;:::i;:::-;;:::i;750:31::-;;;;;-1:-1:-1;;;;;750:31:62;;;9157:278;;;;;;:::i;:::-;;:::i;2087:25::-;;;;;;:::i;:::-;;:::i;19516:115::-;;;;;;:::i;:::-;;:::i;14238:433::-;;;;;;:::i;:::-;;:::i;19339:171::-;;;;;;:::i;:::-;;:::i;2177:20::-;;;:::i;20103:116::-;;;;;;:::i;:::-;;:::i;13132:390:61:-;;;;;;:::i;:::-;;:::i;11621:1264::-;;;;;;:::i;:::-;;:::i;21404:112:62:-;;;;;;:::i;:::-;;:::i;26122:523::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5608:320::-;;;;;;:::i;:::-;;:::i;9562:993::-;;;;;;:::i;:::-;;:::i;20604:114::-;;;;;;:::i;:::-;20664:7;20690:21;;;:13;:21;;;;;;;20604:114;6126:651;;;;;;:::i;:::-;;:::i;18800:140::-;;;;;;:::i;:::-;;:::i;6495:386:49:-;;;;;;:::i;:::-;6721:25;6715:4;6708:39;6767:4;6760:19;;;;6615:11;6792:22;6859:4;-1:-1:-1;6843:21:49;6837:28;;6495:386;19637:460:62;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10561:494::-;;;;;;:::i;:::-;;:::i;8225:3984:49:-;;;;;;:::i;:::-;;:::i;15406:538:62:-;;;;;;:::i;:::-;;:::i;20334:147::-;;;;;;:::i;:::-;;:::i;24003:399::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2153:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8011:446::-;8078:14;;;;:8;:14;;;;;;:19;;8074:46;;8106:14;;-1:-1:-1;;;8106:14:62;;;;;;;;;;;8074:46;8134:14;;;;:8;:14;;;;;;:22;;;8130:54;;8165:19;;-1:-1:-1;;;8165:19:62;;;;;;;;;;;8130:54;8198:19;;;;:13;:19;;;;;;:40;;8194:63;;8247:10;;-1:-1:-1;;;8247:10:62;;;;;;;;;;;8194:63;8272:28;8281:12;:10;:12::i;:::-;8295:4;8272:8;:28::i;:::-;8268:56;;;8309:15;;-1:-1:-1;;;8309:15:62;;;;;;;;;;;8268:56;8339:1;;-1:-1:-1;;;;;8339:1:62;:8;8348:12;:10;:12::i;:::-;8362:19;8376:4;8362:13;:19::i;:::-;8339:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8334:70;;8391:13;;-1:-1:-1;;;8391:13:62;;;;;;;;;;;8334:70;8415:35;8431:12;:10;:12::i;:::-;8445:4;8415:15;:35::i;:::-;8011:446;:::o;21223:175::-;21287:13;21375:14;:3;:12;:14::i;:::-;21326:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;21312:79;;21223:175;;;:::o;14471:676:61:-;14628:7;14655:17;;;:8;:17;;;;;;:29;;14651:64;;14693:22;;-1:-1:-1;;;14693:22:61;;;;;;;;;;;14651:64;14726:25;14754:50;14764:19;14774:8;14764:9;:19::i;:::-;14785:18;;;;:8;:18;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;14754:50:61;6250:25:49;6244:4;6237:39;;;6296:4;6289:19;;;14814:29:61;6321:16:49;;;6382:4;6366:21;;;6360:28;14911:7:61;:17;;;;;:20;14726:78;;-1:-1:-1;6360:28:49;14970:6:61;14945:31;;14941:45;;14985:1;14978:8;;;;;;;14941:45;14996:23;15080:26;:17;15100:6;15080:26;:::i;:::-;15056:19;15023:30;15047:6;15023:21;:30;:::i;:::-;:52;;;;:::i;:::-;15022:85;;;;:::i;:::-;14996:111;-1:-1:-1;;;;;14471:676:61;;;;;;;:::o;7213:648:62:-;7473:1;;:43;;-1:-1:-1;;;7473:43:62;;7427:13;;;;-1:-1:-1;;;;;7473:1:62;;;;:16;;:43;;7490:7;;7499:9;;7510:5;;7473:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7452:64;;7534:15;7544:4;7534:9;:15::i;:::-;7559:22;;;;:15;:22;;;;;:38;;;7635:15;7630:1;7607:25;;;:43;7559:22;-1:-1:-1;7680:19:62;;:58;;7715:23;:14;7732:6;7715:23;:::i;:::-;7680:58;;;7702:10;7680:58;7660:14;;;;:7;:14;;;;;:17;:78;7753:37;;;7776:1;23547:25:85;;23603:2;23588:18;;23581:34;;;7769:5:62;;7753:37;;23520:18:85;7753:37:62;;;;;;;7833:1;7836:14;;;:7;:14;;;;;7826:5;;7805:49;;7833:1;7836:17;;7805:49;;;23547:25:85;;;23603:2;23588:18;;23581:34;;;;23520:18;7805:49:62;;;;;;;7442:419;7213:648;;;;;;;:::o;24408:179::-;24487:16;24522:15;:58;24565:5;24572;24548:30;;;;;;;;23803:2:85;23799:15;;;;-1:-1:-1;;;;;;23795:53:85;23783:66;;23874:2;23865:12;;23858:28;23911:2;23902:12;;23626:294;24548:30:62;;;;;;;;;;;;;24538:41;;;;;;24522:58;;;;;;;;;;;24515:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24408:179;;;;;:::o;8695:205::-;8769:14;;;;:8;:14;;;;;;:19;;8765:54;;8797:22;;-1:-1:-1;;;8797:22:62;;;;;;;;;;;8765:54;8829:64;8835:12;:10;:12::i;:::-;8849:4;8855:7;8864:28;;;;;;-1:-1:-1;;;24127:23:85;;24175:1;24166:11;;23925:258;8864:28:62;;;;;;;;;;;;;8829:5;:64::i;:::-;8695:205;;:::o;14995:228::-;15073:19;15118:18;;;:13;:18;;;;;;:23;:98;;15198:18;;;;:13;:18;;;;;;15155:40;15165:14;15212:3;15165:9;:14::i;:::-;15181:13;;;;:8;:13;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;15155:40:62;15148:47;;:4;:47;:::i;:::-;:68;;;;:::i;:::-;15118:98;;;15144:1;15118:98;15104:112;14995:228;-1:-1:-1;;;14995:228:62:o;13684:232::-;13790:7;:10;-1:-1:-1;;;;;13790:10:62;13774:12;:10;:12::i;:::-;-1:-1:-1;;;;;13774:26:62;;13770:52;;13809:13;;-1:-1:-1;;;13809:13:62;;;;;;;;;;;13770:52;13848:1;13836:8;:13;13832:37;;13858:11;;-1:-1:-1;;;13858:11:62;;;;;;;;;;;13832:37;-1:-1:-1;;;;;13879:19:62;;;;;;;:7;:19;;;;;:30;13684:232::o;1300:1327:61:-;1384:24;1411:43;1430:10;1442:11;1411:18;:43::i;:::-;1384:70;;1487:1;1469:7;:14;:19;1465:32;;1490:7;1300:1327;;:::o;1465:32::-;1510:7;;-1:-1:-1;;;;;;1510:7:61;-1:-1:-1;;;1510:29:61;;:66;;-1:-1:-1;;;;;;;;;;1569:7:61;;;1543:33;1510:66;1506:930;;;1592:25;1620:23;;;:10;:23;;;;;;;;1592:51;;;;;;;;;;;;;;;;;;;1620:23;;1592:51;;;1620:23;1592:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1592:51:61;;-1:-1:-1;1674:1:61;;-1:-1:-1;;;;1657:769:61;1681:7;:14;1677:1;:18;:45;;;;-1:-1:-1;1707:15:61;;1699:5;1703:1;1699;:5;:::i;:::-;:23;1677:45;1657:769;;;1747:30;1807:10;1819:11;1832:8;1841:5;1845:1;1841;:5;:::i;:::-;1832:15;;;;;;;;:::i;:::-;;;;;;;1790:58;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1780:69;;;;;;1747:102;;1867:30;1927:8;1940:1;1936;:5;;;;:::i;:::-;1927:15;;;;;;;;:::i;:::-;;;;;;;1944:11;1910:46;;;;;;;;24842:19:85;;;24886:2;24877:12;;24870:28;24923:2;24914:12;;24685:247;1910:46:61;;;;;;;-1:-1:-1;;1910:46:61;;;;;;1900:57;;1910:46;1900:57;;;;2017:1;1980:31;;;:7;:31;;;;;2012:1;1980:34;;1900:57;;-1:-1:-1;1980:38:61;1976:436;;2084:31;;;;:7;:31;;;;;;:34;2046:31;;;;;2078:1;2046:34;;:72;2042:292;;2183:1;2146:31;;;:7;:31;;;;;:38;2042:292;;;2277:31;;;;:7;:31;;;;;;2309:1;2277:34;;2239:31;;;;;;:72;;2277:34;;2239:31;;:72;;2277:34;;2239:72;:::i;:::-;;;;-1:-1:-1;;2042:292:61;2392:1;2355:31;;;:7;:31;;;;;2387:1;2355:34;:38;1976:436;1729:697;;1724:3;;;;;:::i;:::-;;;;1657:769;;;;1578:858;1506:930;2446:20;:33;;-1:-1:-1;;;;;;2446:33:61;-1:-1:-1;;;;;2446:33:61;;;;;2489:32;2500:11;2513:7;2489:10;:32::i;:::-;2538:20;2531:27;;-1:-1:-1;;;;;;2531:27:61;;;2573:47;;-1:-1:-1;;;;;13747:32:85;;13729:51;;2596:11:61;;2584:10;;2573:47;;13717:2:85;13702:18;2573:47:61;;;;;;;;1374:1253;1300:1327;;:::o;1739:73:62:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1739:73:62;;-1:-1:-1;1739:73:62:o;12457:401::-;12580:16;;-1:-1:-1;;;;;12580:16:62;12566:10;:30;12562:58;;12605:15;;-1:-1:-1;;;12605:15:62;;;;;;;;;;;12562:58;-1:-1:-1;;;;;19018:19:62;;;12630:21;;;;:7;:21;;;;;;;:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12630:37:62;;;;;;;;;;;:21;12700:15;;12685:30;;;;:::i;:::-;12677:39;;;;;;;;;;;;;;-1:-1:-1;12677:39:62;;;:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12677:55:62;-1:-1:-1;;;;;12677:55:62;;;;;;;;12743:30;;;:13;:30;;;;-1:-1:-1;;12743:50:62;;12804:47;;12835:15;12804:13;:47::i;:::-;12457:401;;;:::o;12757:5689:49:-;16253:9:62;;;;12958:106:49;;;13003:50;13024:4;13030:2;13034:3;;13003:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13003:50:49;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13039:7:49;;-1:-1:-1;13039:7:49;;;;13003:50;;;13039:7;;13003:50;13039:7;13003:50;;;;;;;;;-1:-1:-1;;13003:50:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13048:4:49;;-1:-1:-1;13048:4:49;;;;13003:50;;13048:4;;;;13003:50;;;;;;;;;-1:-1:-1;13003:20:49;;-1:-1:-1;;;13003:50:49:i;:::-;13164:14;13152:10;13149:30;13139:162;;13212:10;13206:4;13199:24;13282:4;13276;13269:18;13139:162;13372:4;13368:2;13364:13;13337:25;13334:44;13447:2;13443;13439:11;13412:25;13409:42;13477:12;13471:4;13464:26;13559:12;13555:2;13551:21;13543:29;;13599:10;13595:2;13591:19;13585:25;;13684:2;13674:135;;13719:10;13713:4;13706:24;13790:4;13784;13777:18;13674:135;13917:4;13907:8;13904:18;13894:272;;13955:8;13949:4;13942:22;14013:4;14007;13997:21;13991:28;13981:171;;14056:10;14050:4;14043:24;14129:4;14123;14116:18;13981:171;14286:10;14283:1;14279:18;14264:1482;14300:1;14264:1482;;;14339:4;14336:1;14332:12;14327:17;;14412:1;14396:14;14392:22;14379:36;14548:12;14542:4;14535:26;14628:1;14616:10;14612:18;14599:32;14593:4;14586:46;14696:4;14690;14680:21;14751:15;14745:22;14806:11;14798:6;14795:23;14792:182;;;14862:10;14856:4;14849:24;14943:4;14937;14930:18;14792:182;15023:24;;;14999:49;;15195:4;15188:24;;;15274:4;15268;15258:21;15327:20;;15394:28;;;15450:35;;;15447:197;;;15529:10;15523:4;15516:24;15613:4;15607;15600:18;15447:197;15669:37;;;-1:-1:-1;14264:1482:49;;-1:-1:-1;14264:1482:49;;14268:31;14246:1514;;15851:4;15845:11;15918:4;15915:1;15908:15;15966:10;15963:1;15959:18;15953:4;15949:29;16011:4;16008:1;16004:12;16072:1;16065:4;16053:10;16049:21;16046:1;16033:41;16161:1;16155:4;16151:12;16144:4;16141:1;16137:12;16130:34;16232:1;16225:4;16209:14;16205:25;16201:1;16198;16194:9;16181:53;;16362:2;16356:4;16346:8;16313:31;16306:4;16302:1;16299;16295:9;16291:20;16288:1;16283:82;;;16402:24;16122:4:62;16056:101;;16402:24:49;16398:112;;;16442:57;16470:4;16476:2;16480:3;;16485:7;;16494:4;;16442:27;:57::i;:::-;16682:2;16670:15;16667:1763;;;16717:2;16711:4;16704:16;16793:4;16787:11;16954:10;16951:1;16944:21;17003:8;16996:4;16993:1;16989:12;16982:30;17050:4;17043;17040:1;17036:12;17029:26;17128:4;17121;17118:1;17114:12;17107:26;17176:10;17173:1;17169:18;17163:4;17159:29;17221:4;17218:1;17214:12;17282:1;17275:4;17263:10;17259:21;17256:1;17243:41;17359:1;17353:4;17349:12;17399:1;17392:4;17389:1;17385:12;17378:23;17469:1;17462:4;17446:14;17442:25;17438:1;17435;17431:9;17418:53;17545:9;;17538:4;17531:12;;17524:31;17632:4;17628:22;;-1:-1:-1;;17604:22:49;;17592:9;;;17585:17;;17572:79;;17714:1;17711;17707:9;17694:11;17690:27;17684:4;17680:38;17668:50;;17843:4;17840:1;17834:4;17827;17824:1;17820:12;17817:1;17810:4;17804:11;17797:5;17792:56;17782:338;;17875:16;17872:230;;;18011:16;18005:4;18002:1;17987:41;18063:16;18060:1;18053:27;17872:230;-1:-1:-1;18232:8:49;;-1:-1:-1;;;18229:34:49;18219:197;;18300:10;18294:4;18287:24;18393:4;18387;18380:18;18219:197;;16667:1763;12757:5689;;;;;;;;:::o;24593:1523:62:-;24659:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24659:25:62;24696:26;24725:20;24738:6;24725:12;:20::i;:::-;24696:49;;24785:9;:16;-1:-1:-1;;;;;24771:31:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24771:31:62;-1:-1:-1;24755:47:62;;24852:16;;-1:-1:-1;;;;;24835:34:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;24812:20:62;;;:57;24918:16;;-1:-1:-1;;;;;24901:34:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;24879:19:62;;;:56;24989:16;;-1:-1:-1;;;;;24973:33:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24945:25:62;;;:61;25022:9;25017:1073;25037:9;:16;25033:1;:20;25017:1073;;;25102:1;-1:-1:-1;;;;;25078:26:62;:9;25088:1;25078:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;25078:26:62;;25074:40;25106:8;25074:40;25128:14;25145:9;25155:1;25145:12;;;;;;;;:::i;:::-;;;;;;;25128:29;;25171:25;25199:34;25218:6;25226;25199:18;:34::i;:::-;25171:62;;25267:6;25248:3;:13;;;25262:1;25248:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25248:25:62;;;:16;;;;;;;;;;;:25;25292:15;;:19;25288:792;;25335:15;;:19;25331:366;;25378:138;;;;;;;;25428:8;25437:1;25428:11;;;;;;;;:::i;:::-;;;;;;;25378:138;;;;25441:7;:71;25476:6;25484:12;25489:6;-1:-1:-1;;;;;19018:19:62;;18946:98;25484:12;25498:8;25507:1;25498:11;;;;;;;;:::i;:::-;;;;;;;25459:51;;;;;;;;;25392:19:85;;;25436:2;25427:12;;25420:28;;;;25473:2;25464:12;;25457:28;25510:2;25501:12;;25207:312;25459:51:62;;;;;;;;;;;;;25449:62;;;;;;25441:71;;;;;;;;;;;25513:1;25441:74;;;;;;;:::i;:::-;;;25378:138;;;:3;:19;;;25398:1;25378:22;;;;;;;;:::i;:::-;;;;;;:138;;;;25539:139;;;;;;;;25590:8;25599:1;25590:11;;;;;;;;:::i;:::-;;;;;;;25539:139;;;;25603:7;:71;25638:6;25646:12;25651:6;-1:-1:-1;;;;;19018:19:62;;18946:98;25646:12;25660:8;25669:1;25660:11;;;;;;;;:::i;:::-;;;;;;;25621:51;;;;;;;;;25392:19:85;;;25436:2;25427:12;;25420:28;;;;25473:2;25464:12;;25457:28;25510:2;25501:12;;25207:312;25621:51:62;;;;;;;;;;;;;25611:62;;;;;;25603:71;;;;;;;;;;;25675:1;25603:74;;;;;;;:::i;:::-;;;25539:139;;;:3;:20;;;25560:1;25539:23;;;;;;;;:::i;:::-;;;;;;:139;;;;25331:366;25736:1;25718:8;:15;:19;25714:352;;;25761:31;25827:1;25809:8;:15;:19;;;;:::i;:::-;-1:-1:-1;;;;;25795:34:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25795:34:62;-1:-1:-1;25761:68:62;-1:-1:-1;25868:1:62;25851:130;25875:8;:15;25871:1;:19;25851:130;;;25947:8;25956:1;25947:11;;;;;;;;:::i;:::-;;;;;;;25923:14;25942:1;25938;:5;;;;:::i;:::-;25923:21;;;;;;;;:::i;:::-;;;;;;;;;;:35;25892:3;;25851:130;;;;26033:14;26002:3;:25;;;26028:1;26002:28;;;;;;;;:::i;:::-;;;;;;:45;;;;25739:327;25714:352;25060:1030;;25017:1073;25055:3;;25017:1073;;;;26099:10;24593:1523;;;:::o;14096:347:61:-;14178:23;14218:24;14227:5;14234:7;14218:8;:24::i;:::-;14213:53;;14251:15;;-1:-1:-1;;;14251:15:61;;;;;;;;;;;14213:53;14305:16;;14294:79;;-1:-1:-1;;;14294:79:61;;14346:10;14294:79;;;25764:34:85;25814:18;;;25807:34;;;-1:-1:-1;;;;;25877:15:85;;;25857:18;;;25850:43;14305:16:61;;;;14294:51;;25699:18:85;;14294:79:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14276:97;;14428:7;14421:5;-1:-1:-1;;;;;14388:48:61;14404:15;-1:-1:-1;;;;;14388:48:61;;;;;;;;;;;14096:347;;;;:::o;18593:1021:49:-;18729:25;18861:13;18849:10;18846:29;18836:161;;18908:10;18902:4;18895:24;18978:4;18972;18965:18;18836:161;19028:4;19022:11;19010:23;;19063:10;19053:8;19046:28;19110:4;19100:8;19096:19;19144:10;19141:1;19137:18;19188:1;19185;19181:9;19175:4;19168:23;19269:329;19276:1;19269:329;;;19311:4;19308:1;19304:12;19299:17;;19378:1;19363:13;19359:21;19346:35;19449:5;19445:2;19441:14;19414:25;19411:45;19405:4;19398:59;;19516:1;19504:10;19500:18;19487:32;19481:4;19474:46;19577:4;19571;19561:21;19555:28;19551:1;19548;19544:9;19537:47;19269:329;;;19273:2;;18593:1021;;;;;;:::o;4527:295:62:-;4607:7;4615:1;4607:10;;-1:-1:-1;;;;;4607:10:62;4593;:24;4589:48;;4626:11;;-1:-1:-1;;;4626:11:62;;;;;;;;;;;4589:48;4651:10;;-1:-1:-1;;;;;4651:27:62;;;:10;;:27;4647:169;;-1:-1:-1;4707:10:62;;;:7;4694:23;;-1:-1:-1;;;;;;4694:23:62;;;-1:-1:-1;;;;;4707:10:62;;4694:23;;;;4731:17;;;8011:446::o;4647:169::-;4779:10;:26;;-1:-1:-1;;;;;;4779:26:62;-1:-1:-1;;;;;4779:26:62;;;;;;;;;;4527:295::o;2633:2066:61:-;2725:13;2741:35;2750:12;:10;:12::i;:::-;2764:11;2741:8;:35::i;:::-;2725:51;;2786:12;2801:18;2806:12;:10;:12::i;2801:18::-;2833:21;;;;:8;:21;;;;;;2786:33;;-1:-1:-1;2833:36:61;;;2829:63;;2878:14;;-1:-1:-1;;;2878:14:61;;;;;;;;;;;2829:63;2907:8;2902:29;;2924:7;;-1:-1:-1;;;2924:7:61;;;;;;;;;;;2902:29;2942:23;2968:36;2978:12;:10;:12::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2968:36:61;3036:26;;;;:13;:26;;;;;;2942:62;;-1:-1:-1;3036:38:61;;3065:9;;3036:38;:::i;:::-;3018:15;:56;3014:84;;;3083:15;;-1:-1:-1;;;3083:15:61;;;;;;;;;;;3014:84;3109:26;3123:11;3109:13;:26::i;:::-;-1:-1:-1;3146:25:61;3174:23;;;:10;:23;;;;;;;;3146:51;;;;;;;;;;;;;;;;;;;3174:23;;3146:51;;;3174:23;3146:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3207:18;3255:12;:10;:12::i;:::-;3269:11;3238:43;;;;;;;;23803:2:85;23799:15;;;;-1:-1:-1;;;;;;23795:53:85;23783:66;;23874:2;23865:12;;23858:28;23911:2;23902:12;;23626:294;3238:43:61;;;;;;;;;;;;;3228:54;;;;;;3207:75;;3293:14;3317:9;3336:806;3348:7;:14;3344:1;:18;3336:806;;;3383:19;3405:7;3413:1;3405:10;;;;;;;;:::i;:::-;;;;;;;3383:32;;3429:15;3474:11;3487:4;3493:11;3457:48;;;;;;;;;25392:19:85;;;25436:2;25427:12;;25420:28;;;;25473:2;25464:12;;25457:28;25510:2;25501:12;;25207:312;3457:48:61;;;;;;;;;;;;;3447:59;;;;;;3429:77;;3530:1;3525;:6;3521:611;;3555:11;3570:1;3555:16;3551:30;;3573:8;;;;3551:30;3603:1;3608;3603:6;3599:253;;3666:12;:10;:12::i;:::-;-1:-1:-1;;;;;3638:71:61;3653:11;3638:71;3680:11;3693:15;3638:71;;;;;;23547:25:85;;;23603:2;23588:18;;23581:34;23535:2;23520:18;;23365:256;3638:71:61;;;;;;;;3599:253;;;3790:12;:10;:12::i;:::-;-1:-1:-1;;;;;3761:72:61;3777:11;3761:72;3804:11;3817:15;3761:72;;;;;;23547:25:85;;;23603:2;23588:18;;23581:34;23535:2;23520:18;;23365:256;3761:72:61;;;;;;;;3599:253;3869:88;3891:11;3904;3917:1;3920:15;3937:7;3946:10;3869:21;:88::i;:::-;3521:611;;;3996:82;4018:11;4031:4;4037:11;4050:1;4053:7;:14;4069:8;3996:21;:82::i;:::-;4096:21;4106:11;4096:21;;:::i;:::-;;;3521:611;3369:773;;3336:806;3364:3;;3336:806;;;4173:1;4155:7;:14;:19;;:34;;;;-1:-1:-1;4178:11:61;;;4155:34;:54;;;;;4193:6;4203;4193:16;;4155:54;4151:83;;;4218:16;;-1:-1:-1;;;4218:16:61;;;;;;;;;;;4151:83;4277:15;4287:4;4277:9;:15::i;:::-;-1:-1:-1;;;;;4249:70:61;4264:11;4249:70;4294:7;4303:15;4249:70;;;;;;;:::i;:::-;;;;;;;;4334:20;;-1:-1:-1;;;;;4334:20:61;4330:363;;4384:28;4415:27;;;:15;:27;;;;;;;;4384:58;;;;;;;;;;;;;;;;;;;4415:27;;4384:58;;;4415:27;4384:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4482:1;4460:11;:18;:23;4456:176;;4507:7;4515:1;4507:10;;;;;;;;:::i;:::-;;;;;;;4521:1;4507:15;4503:48;;4537:11;4549:1;4537:14;;;;;;;;:::i;:::-;;;;;;;4524:7;4532:1;4524:10;;;;;;;;:::i;:::-;;;;;;:27;;;;;4503:48;4573:7;4581:1;4573:10;;;;;;;;:::i;:::-;;;;;;;4587:1;4573:15;4569:48;;4603:11;4615:1;4603:14;;;;;;;;:::i;:::-;;;;;;;4590:7;4598:1;4590:10;;;;;;;;:::i;:::-;;;;;;:27;;;;;4569:48;4645:27;;;;:15;:27;;;;;;;;:37;;;;;;;;:::i;:::-;;4370:323;2715:1984;;;;;;;2633:2066;;:::o;11197:446:62:-;11278:6;11301:22;11310:6;11318:4;11301:8;:22::i;:::-;11296:47;;11332:11;;-1:-1:-1;;;11332:11:62;;;;;;;;;;;11296:47;11367:12;:10;:12::i;:::-;-1:-1:-1;;;;;11357:22:62;:6;-1:-1:-1;;;;;11357:22:62;;11353:114;;11395:36;11401:6;11409:18;11422:4;11409:12;:18::i;:::-;11429:1;11395:5;:36::i;:::-;-1:-1:-1;11452:4:62;11445:11;;11353:114;11482:1;;-1:-1:-1;;;;;11482:1:62;:8;11491:6;11499:19;11513:4;11499:13;:19::i;:::-;11482:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11481:38;11477:42;;11536:18;11549:4;11536:12;:18::i;:::-;11529:25;;11569:1;11565:29;;;11572:22;11578:6;11586:4;11592:1;11572:5;:22::i;:::-;11609:27;;11631:4;;-1:-1:-1;;;;;11609:27:62;;;;;;;;11197:446;;;;:::o;11827:412::-;11888:14;11918;;;:8;:14;;;;;;:22;;;11914:36;;-1:-1:-1;11949:1:62;;11827:412;-1:-1:-1;11827:412:62:o;11914:36::-;12008:13;;;;:7;:13;;;;;:16;;12002:1;11988:16;;;;11970:34;;:15;:34;:::i;:::-;11969:55;;;;:::i;:::-;11960:64;;12038:6;12048:1;12038:11;12034:25;;-1:-1:-1;12058:1:62;;11827:412;-1:-1:-1;11827:412:62:o;12034:25::-;12069:13;;;;:7;:13;;;;;12088:15;;12083:1;12069:16;:34;12158:29;;-1:-1:-1;;;12158:29:62;;;26952:24:85;12114:74:62;;12136:4;;;;12150:6;;26992:11:85;;12158:29:62;26750:259:85;12114:74:62;12219:4;12203:29;12225:6;12203:29;;;;616:25:85;;604:2;589:18;;470:177;12203:29:62;;;;;;;;11827:412;;;:::o;4979:327::-;5047:7;:10;5024:7;;-1:-1:-1;;;;;5047:10:62;:24;5043:50;;5080:13;;-1:-1:-1;;;5080:13:62;;;;;;;;;;;5043:50;5127:16;;5190:4;;5170:26;;-1:-1:-1;;;5170:26:62;;-1:-1:-1;;;;;5190:4:62;;;5170:26;;;616:25:85;5127:16:62;;;5116:53;;5170:4;;:14;;589:18:85;;5170:26:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5116:81;;;;;;;;;;;;;616:25:85;;604:2;589:18;;470:177;5116:81:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5103:7;5111:1;5103:10;:94;;-1:-1:-1;;;;;;5103:94:62;-1:-1:-1;;;;;5103:94:62;;;;;;5208:1;;:17;;;-1:-1:-1;;;5208:17:62;;;;:1;;;;;:15;;:17;;;;;-1:-1:-1;;5208:17:62;;;;;;;-1:-1:-1;5208:1:62;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:32;5261:7;5269:1;5261:10;;;;;;;:::i;:::-;;;5240:32;;-1:-1:-1;;;;;5261:10:62;;;13729:51:85;;13717:2;13702:18;5240:32:62;;;;;;;-1:-1:-1;5289:7:62;:10;-1:-1:-1;;;;;5289:10:62;;4979:327::o;20487:111::-;20547:7;20573:15;;;:7;:15;;;;;20547:7;20573:18;;;;20487:111;-1:-1:-1;;20487:111:62:o;9157:278::-;9228:24;9255:19;9266:7;9255:10;:19::i;:::-;9228:46;;9284:9;9303:83;9315:7;:14;9311:1;:18;9303:83;;;9350:25;9355:7;9363:1;9355:10;;;;;;;;:::i;:::-;;;;;;;9367:7;9350:4;:25::i;:::-;9331:3;;9303:83;;;9399:5;;9395:33;;9406:22;9411:7;9420;9406:4;:22::i;:::-;9218:217;;9157:278;;:::o;2087:25::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2087:25:62;;-1:-1:-1;2087:25:62;:::o;19516:115::-;19574:7;19600:21;;;:15;:21;;;;;19574:7;19600:24;;14238:433;14317:7;14336:22;14361:19;14372:7;14361:10;:19::i;:::-;14336:44;;14390:9;14414;14409:233;14429:5;:12;14425:1;:16;14409:233;;;14485:1;14481;14466:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;14462:24;;14510:5;14516:1;14510:8;;;;;;;;:::i;:::-;;;;;;;14500:18;;14557:7;14536:8;:17;14545:7;14536:17;;;;;;;;;;;;:28;14532:39;14566:5;14532:39;14594:37;14615:6;14623:7;14594:20;:37::i;:::-;14585:46;-1:-1:-1;14443:3:62;;14409:233;;;-1:-1:-1;14658:6:62;;14238:433;-1:-1:-1;;;;14238:433:62:o;19339:171::-;19418:4;19489:1;19438:47;19448:9;19459:25;19472:11;19459:12;:25::i;19438:47::-;:52;19434:69;;-1:-1:-1;19499:4:62;19492:11;;2177:20;;;;;;;:::i;20103:116::-;20196:16;;;;:10;:16;;;;;;;;;20189:23;;;;;;;;;;;;;;;;;20161:16;;20189:23;;;20196:16;20189:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20103:116;;;:::o;13132:390:61:-;13193:22;13227:21;13251:19;13262:7;13251:10;:19::i;:::-;13227:43;;13297:1;13280:18;;13308:128;13346:4;:11;13329:14;:28;13308:128;;;13391:34;13404:4;13409:14;13404:20;;;;;;;;:::i;:::-;;;;;;;13391:12;:34::i;:::-;;13359:16;;;;;13308:128;;;13445:22;13459:7;13445:13;:22::i;:::-;;13494:21;13507:7;11621:1264;11676:22;11727:17;;;:8;:17;;;;;;11758:11;;;11754:32;;11778:8;;-1:-1:-1;;;11778:8:61;;;;;;;;;;;11754:32;11800:16;;;;:8;:16;;;;;;:26;;;11796:40;;-1:-1:-1;11835:1:61;;11621:1264;-1:-1:-1;;11621:1264:61:o;11796:40::-;11847:21;11861:6;11847:13;:21::i;:::-;-1:-1:-1;11923:33:61;;;;;;;24842:19:85;;;24877:12;;;24870:28;;;11923:33:61;;;;;;;;;24914:12:85;;;;11923:33:61;;;11912:46;;;;;-1:-1:-1;11996:36:61;12006:17;24870:28:85;12006:9:61;:17::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;11996:36:61;12115:31;;;;:7;:31;;;;;11969:63;;-1:-1:-1;12147:1:61;12115:34;;12097:52;;:15;:52;:::i;:::-;12059:31;;;;:7;:31;;;;;:34;:91;;;;:::i;:::-;12042:108;;12182:16;12165:14;:33;12161:97;;;12231:16;12214:33;;12161:97;12268:31;;;;:7;:31;;;;;12305:15;;12300:1;12268:34;:52;12353:6;12335:24;;12331:548;;12375:142;12406:17;12416:6;12406:9;:17::i;:::-;12425:18;12435:7;12425:9;:18::i;:::-;12445:6;12453:14;12469:34;;;;;;-1:-1:-1;;;27216:29:85;;27270:2;27261:12;;27014:265;12469:34:61;;;;;;;;;;;;;12375:13;:142::i;:::-;12560:37;12570:18;12580:7;12570:9;:18::i;12560:37::-;12535:22;;;;:13;:22;;;;;;:62;12531:338;;;12617:237;12644:18;12654:7;12644:9;:18::i;:::-;12753:22;;;;:13;:22;;;;;;12684:7;;12713:37;12723:18;12684:7;12723:9;:18::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;12713:37:61;:62;;;;:::i;:::-;12797:39;;-1:-1:-1;;;12797:39:61;;;27486:34:85;27536:12;;12797:39:61;27284:270:85;12617:237:61;11700:1185;;;11621:1264;;;:::o;21404:112:62:-;21499:10;;-1:-1:-1;;;21499:10:62;;;;;;;;;;;26122:523;26194:25;;:::i;:::-;26242:19;26254:6;26242:11;:19::i;:::-;26231:30;-1:-1:-1;;;;;;26275:18:62;;26271:39;26295:15;26271:39;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;26344:34:62;;:32;:34::i;:23::-;:32;:34::i;:::-;26320:18;;:21;;:58;26388:22;26413:19;26426:6;-1:-1:-1;;;;;19018:19:62;;26413;:::i;:::-;26479:1;26446:23;;;:7;:23;;;;;:30;26388:44;;-1:-1:-1;26446:34:62;26442:137;;26541:23;;;;:7;:23;;;;;:26;;26521:47;;26541:23;:26;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;26541:26:62;26521:19;:47::i;:::-;26496:18;;:22;;:72;26442:137;26611:27;26631:6;26611:19;:27::i;:::-;26588:20;;;:50;-1:-1:-1;26122:523:62;;;;:::o;5608:320::-;5676:11;5703;-1:-1:-1;;;;;5703:23:62;;5730:1;5703:28;5699:46;;5740:5;;-1:-1:-1;;;5740:5:62;;;;;;;;;;;5699:46;-1:-1:-1;;;;;;19018:19:62;;5793:13;;;;:8;:13;;;;;;:18;5789:43;;5820:12;;-1:-1:-1;;;5820:12:62;;;;;;;;;;;5789:43;5843:23;5857:3;5862;5843:13;:23::i;:::-;5878:11;;5876:13;;;;;:::i;:::-;;;;-1:-1:-1;5905:16:62;;5917:3;;5905:16;;;;;5608:320;;;:::o;9562:993::-;9631:14;9661;;;:8;:14;;;;;;:19;;9657:51;;9689:19;;-1:-1:-1;;;9689:19:62;;;;;;;;;;;9657:51;9727:14;;;;:8;:14;;;;;;:22;;:70;;9762:35;9783:7;9792:4;9762:20;:35::i;:::-;9727:70;;;9752:7;9727:70;9718:79;;9807:34;9813:12;:10;:12::i;:::-;9827:4;9833:7;9807:5;:34::i;:::-;9855:14;;;;:8;:14;;;;;;:22;;9851:698;;9893:4;:21;9915:15;9925:4;9915:9;:15::i;:::-;9932:12;:10;:12::i;:::-;9946:8;:14;9955:4;9946:14;;;;;;;;;;;;9962:6;9970:24;;;;;;-1:-1:-1;;;27761:19:85;;27805:1;27796:11;;27559:254;9970:24:62;;;;;;;;;;;;;9893:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9851:698;;;10026:17;10046:7;:24;10054:15;10064:4;10054:9;:15::i;:::-;-1:-1:-1;;;;;10046:24:62;;;;;;;;;;;;-1:-1:-1;10046:24:62;;:29;:78;;10100:7;:24;10108:15;10118:4;10108:9;:15::i;:::-;-1:-1:-1;;;;;10100:24:62;-1:-1:-1;;;;;10100:24:62;;;;;;;;;;;;;10046:78;;;10078:19;;;:7;:19;;;;10046:78;10026:98;-1:-1:-1;10150:19:62;10026:98;10150:7;:19;:::i;:::-;10138:31;-1:-1:-1;10183:20:62;10206:19;10138:31;10206:7;:19;:::i;:::-;10183:42;;10254:12;10243:7;:23;10239:40;;10275:4;;-1:-1:-1;;;10275:4:62;;;;;;;;;;;10239:40;10345:15;10355:4;10345:9;:15::i;:::-;10371:4;;10338:49;;-1:-1:-1;;;10338:49:62;;-1:-1:-1;;;;;10338:32:62;;;;;;:49;;10371:4;;;10377:9;;10338:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;;;10422:15;10432:4;10422:9;:15::i;:::-;-1:-1:-1;;;;;10415:32:62;;10448:12;:10;:12::i;:::-;10462;10415:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10294:244;;10515:23;;-1:-1:-1;;;10515:23:62;;;;;;;;;;;10294:244;10012:537;;9562:993;;;;:::o;6126:651::-;6183:13;6212:14;;;:8;:14;;;;;;:19;;6208:55;;6233:30;6247:15;6257:4;6247:9;:15::i;6233:30::-;;6208:55;6278:28;6287:12;:10;:12::i;:::-;6301:4;6278:8;:28::i;:::-;6277:29;:57;;;;-1:-1:-1;6311:14:62;;;;:8;:14;;;;;;:22;;;6277:57;6273:81;;;6343:11;;-1:-1:-1;;;6343:11:62;;;;;;;;;;;6273:81;6368:19;;;;:13;:19;;;;;;:40;;6364:63;;6417:10;;-1:-1:-1;;;6417:10:62;;;;;;;;;;;6364:63;6440:11;;6438:13;;;;;:::i;:::-;;;;-1:-1:-1;6510:29:62;6529:10;6510:16;:29;:::i;:::-;6495:11;;6470:22;6477:15;6470:4;:22;:::i;:::-;:36;;;;:::i;:::-;:70;;;;:::i;:::-;6462:78;;6550:57;6569:16;6579:5;6569:9;:16::i;:::-;6595:4;6602;6550:18;:57::i;:::-;6617:26;6631:5;6638:4;6617:13;:26::i;:::-;6657:10;6679:4;6657:27;6653:69;;6686:36;6702:12;:10;:12::i;6686:36::-;6738:32;;6759:10;;6753:4;;6746:5;;6738:32;;;;;6126:651;;;:::o;18800:140::-;18851:7;-1:-1:-1;;;;;18877:21:62;;:56;;18930:1;18877:56;;;18909:1;18870:63;18800:140;-1:-1:-1;;18800:140:62:o;19637:460::-;19732:29;19764:13;;;:7;:13;;;;;;;;19732:45;;;;;;;;;;;;;;;;;19694:26;;19732:29;:45;;19764:13;19732:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19732:45:62;;;;;;;;;;;;;;;;;;;;;;;19813:12;:19;-1:-1:-1;;;;;19799:34:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19799:34:62;;19787:46;;19848:9;19843:248;19863:12;:19;19859:1;:23;19843:248;;;19934:1;-1:-1:-1;;;;;19907:29:62;:12;19920:1;19907:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;19907:29:62;;19903:43;19938:8;19903:43;20015:1;19965:46;19975:12;19988:1;19975:15;;;;;;;;:::i;:::-;;;;;;;19992:18;20005:4;19992:12;:18::i;19965:46::-;:51;19961:120;;20051:12;20064:1;20051:15;;;;;;;;:::i;:::-;;;;;;;20036:9;20046:1;20036:12;;;;;;;;:::i;:::-;;;;;;:30;-1:-1:-1;;;;;20036:30:62;;;-1:-1:-1;;;;;20036:30:62;;;;;19961:120;19884:3;;19843:248;;10561:494;10635:17;;;;:8;:17;;;;;;:22;;10631:54;;10666:19;;-1:-1:-1;;;10666:19:62;;;;;;;;;;;10631:54;10696:22;10721:19;10732:7;10721:10;:19::i;:::-;10696:44;;10750:9;10774;10769:249;10789:5;:12;10785:1;:16;10769:249;;;10845:1;10841;10826:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;10822:24;;10899:6;10864:32;10874:12;:10;:12::i;:::-;6250:25:49;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;10864:32:62;:41;10860:71;;;10914:17;;-1:-1:-1;;;10914:17:62;;;;;;;;;;;10860:71;10954:21;10959:7;10968:6;10954:4;:21::i;:::-;10945:30;;10999:5;11005:1;10999:8;;;;;;;;:::i;:::-;;;;;;;10989:18;;10803:3;;;;;10769:249;;;;11027:21;11032:7;11041:6;11027:4;:21::i;:::-;;10621:434;;10561:494;;:::o;8225:3984:49:-;16253:9:62;;;;8397:122:49;;;8442:66;8463:4;8469:2;8473:11;8481:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;8473:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;8503:4;;8442:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8442:20:49;;-1:-1:-1;;;8442:66:49:i;:::-;8652:4;8648:2;8644:13;8617:25;8614:44;8727:2;8723;8719:11;8692:25;8689:42;8757:12;8751:4;8744:26;8839:12;8835:2;8831:21;8823:29;;8879:10;8875:2;8871:19;8865:25;;8964:2;8954:135;;8999:10;8993:4;8986:24;9070:4;9064;9057:18;8954:135;9197:4;9187:8;9184:18;9174:272;;9235:8;9229:4;9222:22;9293:4;9287;9277:21;9271:28;9261:171;;9336:10;9330:4;9323:24;9409:4;9403;9396:18;9261:171;9555:2;9549:4;9542:16;9614:4;9608;9598:21;9575:44;;9661:15;9655:22;9708:11;9700:6;9697:23;9694:158;;;9756:10;9750:4;9743:24;9829:4;9823;9816:18;9694:158;9910:6;9897:11;9893:24;9876:15;9869:49;;10039:10;10033:4;10026:24;10104:4;10098;10088:21;10067:42;;10155:13;10149:20;10229:6;10212:15;10208:28;10275:15;10259:14;10256:35;10253:173;;;10327:10;10321:4;10314:24;10403:4;10397;10390:18;10253:173;10443:37;;;-1:-1:-1;;10560:4:49;10553:20;;;10653:2;10647:4;10637:8;-1:-1:-1;;;;;;;;;;;10597:4:49;10591;10586:70;10962:2;10950:15;10947:1246;;;11040:4;11034:11;11151:10;11148:1;11141:21;11200:8;11193:4;11190:1;11186:12;11179:30;11247:4;11240;11237:1;11233:12;11226:26;11290:2;11283:4;11280:1;11276:12;11269:24;11331:6;11324:4;11321:1;11317:12;11310:28;11376:4;11369;11366:1;11362:12;11355:26;11459:11;11453:4;11449:22;11442:4;11429:11;11425:22;11418:4;11415:1;11411:12;11398:74;11606:4;11603:1;11589:11;11583:4;11579:22;11572:4;11569:1;11565:12;11562:1;11558:2;11551:5;11546:65;11536:347;;11638:16;11635:230;;;11774:16;11768:4;11765:1;11750:41;11826:16;11823:1;11816:27;11635:230;11995:8;;-1:-1:-1;;;11992:34:49;11982:197;;12063:10;12057:4;12050:24;12156:4;12150;12143:18;11982:197;;10947:1246;8225:3984;;;;;;:::o;15406:538:62:-;15494:16;15541:14;;;:8;:14;;;;;;15461:21;;15513:1;;15565:154;15583:8;:4;15590:1;15583:8;:::i;:::-;15572:6;:20;15565:154;;15622:16;;;;:8;:16;;;;;;15608:37;;15640:5;15608:37;15659:10;;;:::i;:::-;15692:16;;;;:8;:16;;;;;;;15659:10;;-1:-1:-1;15565:154:62;;;15749:8;-1:-1:-1;;;;;15735:23:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15735:23:62;;15728:30;;15769:13;;;15792:146;15814:8;15805:6;:17;15792:146;;;15878:14;;;;:8;:14;;;;;;15848:4;15873:1;15853:17;15864:6;15853:8;:17;:::i;:::-;:21;;;;:::i;:::-;15848:27;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;15913:14;;;;:8;:14;;;;;;;;15824:8;;15792:146;;20334:147;20391:7;20421:8;20414:4;:15;20410:43;;;20438:15;20445:8;20438:4;:15;:::i;20410:43::-;-1:-1:-1;20470:4:62;20334:147::o;24003:399::-;-1:-1:-1;;;;;19018:19:62;;24158:14;24226:15;;;:7;:15;;;;;:22;24118:24;;19018:19;-1:-1:-1;;;;;24210:39:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24202:47;;24264:9;24259:137;24283:15;;;;:7;:15;;;;;:22;24279:26;;24259:137;;;24354:15;;;;:7;:15;;;;;:18;;24337:48;;24349:24;;24370:1;;24354:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24354:18:62;;18946:98;24349:24;24375:9;24337:11;:48::i;:::-;24326:5;24332:1;24326:8;;;;;;;;:::i;:::-;;;;;;;;;;:59;24307:3;;24259:137;;18575:219;18643:20;;18620:7;;-1:-1:-1;;;;;18643:20:62;:34;18639:67;;-1:-1:-1;18686:20:62;;-1:-1:-1;;;;;18686:20:62;;18575:219::o;18639:67::-;18734:4;;-1:-1:-1;;;;;18734:4:62;18720:10;:18;18716:44;;-1:-1:-1;18755:4:62;;18575:219::o;18716:44::-;-1:-1:-1;18777:10:62;;18575:219::o;12245:206::-;12312:11;;;;:7;:11;;;;;;;:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12312:20:62;-1:-1:-1;;;;;12312:20:62;;;;;12343:62;12312:20;12353:16;12312:11;12353:12;:16::i;:::-;12374:30;;-1:-1:-1;;;12374:30:62;;;28703:25:85;12371:1:62;;28744:12:85;;12374:30:62;28501:261:85;12343:62:62;12420:24;;12441:2;;-1:-1:-1;;;;;12420:24:62;;;;;;;;12245:206;;:::o;447:696:41:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;-1:-1:-1;;;;;627:18:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:41;-1:-1:-1;604:41:41;-1:-1:-1;765:28:41;;;781:2;765:28;820:280;-1:-1:-1;;851:5:41;-1:-1:-1;;;985:2:41;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:41;820:280;1064:21;-1:-1:-1;1120:6:41;447:696;-1:-1:-1;;;447:696:41:o;17958:216:62:-;18060:33;18072:2;18076;18080:6;18088:4;18060:11;:33::i;:::-;18103:17;;;;:13;:17;;;;;:27;;18124:6;;18103:17;:27;;18124:6;;18103:27;:::i;:::-;;;;-1:-1:-1;;18145:22:62;;616:25:85;;;18156:2:62;;-1:-1:-1;;;;;18145:22:62;;;;;604:2:85;589:18;18145:22:62;;;;;;;17958:216;;;;:::o;12864:488::-;12943:15;;;;:8;:15;;;;;;:20;12939:52;;12972:19;;-1:-1:-1;;;12972:19:62;;;;;;;;;;;12939:52;13001:15;;;;:8;:15;;;;;:26;;;13041:17;;;13037:309;;13074:20;;;;:10;:20;;;;;;;:32;;;;;;;;;;;;;;;;;13120:7;;13128:20;13085:8;13128:10;:20::i;:::-;13149:1;13128:23;;;;;;;;:::i;:::-;;;;;;;13120:32;;;;;;;;;;;13158:16;13168:5;13158:9;:16::i;:::-;13120:55;;;;;;;;-1:-1:-1;13120:55:62;;;;;;;;;;;;-1:-1:-1;;;;;;13120:55:62;-1:-1:-1;;;;;13120:55:62;;;;;;;;;;;13193:20;;;:13;:20;;;;;;;:41;13189:54;;12864:488;;:::o;13189:54::-;-1:-1:-1;13256:14:62;;;;:7;:14;;;;;13276:10;13256:30;;13320:15;13315:1;13300:17;;;:35;12864:488::o;16275:1677::-;-1:-1:-1;;;16484:7:62;;-1:-1:-1;;;;;;16484:7:62;:42;16480:79;16542:7;16480:79;16573:9;16568:1378;16597:1;16584:3;:10;:14;16568:1378;;;16615:17;16635:3;16639:1;16635:6;;;;;;;;:::i;:::-;;;;;;;16615:26;;16655:18;16676:7;16684:1;16676:10;;;;;;;;:::i;:::-;;;;;;;16655:31;;16721:1;-1:-1:-1;;;;;16705:18:62;:4;-1:-1:-1;;;;;16705:18:62;;;:38;;;;-1:-1:-1;;;;;;16727:16:62;;;;16705:38;16704:70;;;;-1:-1:-1;16749:19:62;;;;:8;:19;;;;;;:24;16704:70;16700:104;;;16783:21;;-1:-1:-1;;;16783:21:62;;;;;;;;;;;16700:104;16835:8;16823:9;:20;16819:479;;;16916:7;;-1:-1:-1;;;;;;16916:7:62;-1:-1:-1;;;16916:39:62;;;16915:89;;-1:-1:-1;16961:7:62;;-1:-1:-1;;;;;;16961:7:62;-1:-1:-1;;;16961:42:62;;16915:89;:161;;;-1:-1:-1;17037:7:62;;-1:-1:-1;;;;;;17037:7:62;-1:-1:-1;;;17037:38:62;;16915:161;:213;;;-1:-1:-1;17081:7:62;;-1:-1:-1;;;;;;17081:7:62;-1:-1:-1;;;17081:46:62;;16915:213;:281;;;-1:-1:-1;17161:7:62;;-1:-1:-1;;;;;;17161:7:62;-1:-1:-1;;;17161:34:62;;16915:281;16863:395;;17244:14;;-1:-1:-1;;;17244:14:62;;;;;;;;;;;16863:395;17277:7;;;;;16819:479;17316:7;;-1:-1:-1;;;;;;17316:7:62;-1:-1:-1;;;17316:29:62;;:66;;-1:-1:-1;17349:7:62;;-1:-1:-1;;;;;;17349:7:62;-1:-1:-1;;;17349:33:62;17316:66;17312:564;;;17406:19;;;;:8;:19;;;;;;:32;;;17402:460;;17474:20;17484:9;17474;:20::i;:::-;17467:72;;-1:-1:-1;;;17467:72:62;;-1:-1:-1;;;;;29025:15:85;;;17467:72:62;;;29007:34:85;17521:4:62;29057:18:85;;;29050:43;29109:18;;;29102:34;;;17467:41:62;;;;;;;28942:18:85;;17467:72:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17462:158;;17574:23;;-1:-1:-1;;;17574:23:62;;;;;;;;;;;17462:158;17402:460;;;17666:9;:17;;-1:-1:-1;;17666:17:62;;;17705:100;17722:12;:10;:12::i;:::-;17736:20;17746:9;17736;:20::i;:::-;17758:19;;;;:8;:19;;;;;;;17779:10;;17791:13;;17802:1;;17791:8;17758:19;17791:13;:::i;17705:100::-;17827:9;:16;;-1:-1:-1;;17827:16:62;17839:4;17827:16;;;17402:460;-1:-1:-1;;17918:3:62;;16568:1378;;43437:310:49;43637:104;;4705:771:61;4922:24;;4939:7;4922:24;4983:37;;;;;;;24842:19:85;;;24877:12;;;24870:28;;;4983:37:61;;;;;;;;;24914:12:85;;;;4983:37:61;;4973:48;;;;;;;;;-1:-1:-1;5055:16:61;;;:7;:16;;;;;;5072:1;5055:19;;5036:15;:38;5032:64;;5083:13;;-1:-1:-1;;;5083:13:61;;;;;;;;;;;5032:64;5110:5;5119:1;5110:10;5106:265;;5136:96;5158:11;5171:7;5180;5189:6;5197:15;5214:10;5226:5;5136:21;:96::i;:::-;5106:265;;;5263:97;5286:11;5299:7;5308;5317:6;5325:15;5342:10;5354:5;5263:22;:97::i;:::-;-1:-1:-1;;5381:16:61;;;;:7;:16;;;;;;;;5403:15;5398:1;5381:19;;;:37;5428:10;:28;;;;;:41;;;;;;;;;;;;;;;;-1:-1:-1;;;4705:771:61:o;8377:1015::-;8620:17;8636:1;8620:13;:17;:::i;:::-;8600:8;:15;:38;8596:59;;8647:8;;-1:-1:-1;;;8647:8:61;;;;;;;;;;;8596:59;8665:30;8753:4;8761:11;8774:8;8783:9;8791:1;8783:5;:9;:::i;:::-;8774:19;;;;;;;;:::i;:::-;;;;;;;8720:74;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;8720:74:61;;;;;;8710:85;;8720:74;8710:85;;;;8805:18;8826:31;;;:7;:31;;;;;:34;8710:85;;-1:-1:-1;8883:6:61;8874:15;;:34;;;;-1:-1:-1;8893:15:61;;8874:34;8870:47;;;8910:7;;;;8870:47;8939:6;8930;:15;8926:40;;;8954:12;;-1:-1:-1;;;8954:12:61;;;;;;;;;;;8926:40;8995:6;8981:10;:20;;:58;;;-1:-1:-1;9005:20:61;;-1:-1:-1;;;;;9005:20:61;:34;;8981:58;8977:409;;;9073:6;9059:10;:20;9055:172;;9099:31;;;;:7;:31;;;;;:43;;;9197:15;9192:1;9160:34;;;:52;9055:172;9241:33;9254:8;9263:9;9271:1;9263:5;:9;:::i;:::-;9254:19;;;;;;;;:::i;9241:33::-;-1:-1:-1;9288:87:61;9318:8;9327:9;9335:1;9327:5;:9;:::i;:::-;9318:19;;;;;;;;:::i;:::-;;;;;;;9339:11;9352:22;9288:29;:87::i;13528:248::-;13616:32;13628:4;13634;13640:7;13616:11;:32::i;:::-;-1:-1:-1;;;;;19018:19:62;;13662:25:61;;;;:13;:25;;;;;;13691:1;-1:-1:-1;13662:30:61;;:69;;-1:-1:-1;13696:7:61;;-1:-1:-1;;;;;;13696:7:61;-1:-1:-1;;;13696:35:61;13662:69;13658:82;;;13528:248;;;:::o;13658:82::-;13749:20;13758:4;13764;13749:8;:20::i;32884:203:49:-;33027:53;33049:1;33053:4;33059:2;33063;33067:6;33075:4;33027:13;:53::i;21755:2242:62:-;21814:25;;:::i;:::-;21903:17;:6;:15;:17::i;:::-;21879:18;;:41;:18;22000:15;;;:7;21879:21;22000:15;;;;:29;;:18;;;:27;:29::i;:::-;21976:18;;:21;;:53;22135:57;:46;22145:17;22155:6;22145:9;:17::i;22135:57::-;22111:18;;:21;;:81;22299:47;:36;22309:17;22319:6;22309:9;:17::i;22299:47::-;22275:18;;:21;;:71;22452:74;22453:61;22469:6;22477:36;22487:17;22469:6;22487:9;:17::i;22452:74::-;22428:18;;:21;;:98;22633:84;22634:71;22650:6;22658:46;22668:17;22650:6;22668:9;:17::i;22633:84::-;22609:18;;:21;;:108;22791:23;;;;:15;22609:21;22791:23;;;;22790:39;;22791:26;;22790:39;22766:18;;:21;;:63;22978:16;;;;22785:1;22766:21;22978:16;;;;;;;;23014:42;;;;;24842:19:85;;;24877:12;;;24870:28;;;23014:42:62;;;;;;;;;24914:12:85;;;;23014:42:62;;23004:53;;;;;;22996:62;;:7;:62;;;;;;:65;22948:135;;22962:100;;:15;:100::i;22948:135::-;22924:18;;:21;;:159;23163:15;;;;22943:1;22924:21;23163:15;;;;:29;;23179:1;23163:18;;:29;23139:18;;:21;;:53;23230:27;;;;;;;;;;;;-1:-1:-1;;;23139:21:62;23230:27;;;;;;:18;;:21;;:27;;;;23312:28;;;;;;;;;;;;;;:18;;:22;;:28;-1:-1:-1;23415:21:62;;;:13;:21;;;;;:32;;:30;:32::i;:::-;23390:18;;:22;;:57;23516:1;;;23534:23;;;:15;23390:22;23534:23;;;;;;:26;23516:45;;-1:-1:-1;;;23516:45:62;;;;;616:25:85;;;;-1:-1:-1;;;;;23516:1:62;;;;:17;;589:18:85;;23516:45:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23516:45:62;;;;;;;;;;;;:::i;:::-;:50;;;23492:21;;;:74;23639:20;23652:6;23639:12;:20::i;:::-;23614:22;;;:45;23712:16;;23699:7;;:40;;23707:31;;23732:6;;-1:-1:-1;;;;;23712:16:62;23707:31;:::i;:::-;23699:40;;;;;;;;;;;23670:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23670:69:62;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23670:26:62;;;:69;23843:18;;;;:10;:18;;;;;;;;;23820:42;;;;;;;;;;;;;;;;;;;;;;23843:18;23820:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:42::i;:::-;23795:22;;;:67;23948:42;23971:18;23982:6;23971:10;:18::i;:::-;23948:22;:42::i;:::-;23928:17;;;:62;:8;21755:2242;-1:-1:-1;21755:2242:62:o;2407:149:41:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:41;;343:2;2497:11;:52::i;31804:707:49:-;32034:10;32027:18;32020:26;32006:40;;32135:25;32129:4;32122:39;32187:2;32181:4;32174:16;32216:8;32210:4;32203:22;32268:10;32261:4;32255;32245:21;32238:41;32353:10;32347:4;32340:24;32398:1;32394:6;32390:2;32386:15;32485:8;32482:1;32478:16;32473:2;32470:1;32466:10;32431:33;32425:4;32419;32414:81;;31804:707;;;:::o;10139:916:46:-;10192:7;;-1:-1:-1;;;10267:17:46;;10263:103;;-1:-1:-1;;;10304:17:46;;;-1:-1:-1;10349:2:46;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:46;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:46;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:46;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:46;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:46;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:46:o;20805:1574:49:-;16253:9:62;;;;20906:128:49;;;20951:72;20980:1;20984:2;20988:11;20996:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;20988:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;21018:4;20951:20;:72::i;:::-;21128:2;21124;21120:11;21205:3;21195:136;;21241:10;21235:4;21228:24;21312:4;21306;21299:18;21195:136;21438:25;21432:4;21425:39;21494:2;21488:4;21481:16;21527:2;21521:4;21514:16;21584:4;21578;21568:21;21635:13;21629:20;21709:6;21692:15;21688:28;21755:15;21739:14;21736:35;21733:173;;;21807:10;21801:4;21794:24;21883:4;21877;21870:18;21733:173;21945:14;21930:13;21923:37;;;;22046:6;22040:4;22033:20;22138:3;22134:2;22130:12;22127:1;22117:8;-1:-1:-1;;;;;;;;;;;22077:4:49;22071;22066:77;-1:-1:-1;22162:126:49;;22242:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;22255:15;47801:303;22206:71;43964:14;;22297:75;;;22315:57;22347:1;22351:2;22355;22359:6;22367:4;22315:23;:57::i;5482:802:61:-;-1:-1:-1;;;;;5728:26:61;;;:79;;-1:-1:-1;5764:1:61;;:25;;-1:-1:-1;;;5764:25:61;;;;;616::85;;;-1:-1:-1;;;;;5764:1:61;;;;:17;;589:18:85;;5764:25:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5764:25:61;;;;;;;;;;;;:::i;:::-;:30;;;5758:44;:49;5728:79;5724:110;;;5816:18;;-1:-1:-1;;;5816:18:61;;;;;;;;;;;5724:110;5844:94;5864:7;5873;5882:6;5890:15;5907:10;5919:5;5926:11;5844:19;:94::i;:::-;5978:26;;;;:13;:26;;;;;;;;;5952:16;;;:7;:16;;;;;;:19;:23;;5974:1;5952:23;:::i;:::-;:52;5948:330;;;6032:1;;:29;;-1:-1:-1;;;6032:29:61;;;;;616:25:85;;;6021:6:61;;-1:-1:-1;;;;;6032:1:61;;:16;;589:18:85;;6032:29:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6020:41;;;6080:1;6075:34;;6090:19;;-1:-1:-1;;;6090:19:61;;;;;;;;;;;6075:34;6157:28;;;;:15;:28;;;;;6144:11;;6128:69;;6157:31;;6128:69;;;23547:25:85;;;23603:2;23588:18;;23581:34;;;23520:18;6128:69:61;;;;;;;6211:56;;;;;;;;;;;6251:15;6211:56;;;;;;;;-1:-1:-1;6211:28:61;;;:15;:28;;;;;;;:56;;;;:::i;6290:838::-;6533:94;6553:7;6562;6571:6;6579:15;6596:10;6608:5;6615:11;6533:19;:94::i;:::-;6667:26;;;;:13;:26;;;;;;;;;6641:16;;;:7;:16;;;;;;:19;:23;;6663:1;6641:23;:::i;:::-;:52;6637:485;;;6721:1;;:29;;-1:-1:-1;;;6721:29:61;;;;;616:25:85;;;6710:6:61;;-1:-1:-1;;;;;6721:1:61;;:16;;589:18:85;;6721:29:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6709:41;;;6769:1;6764:34;;6779:19;;-1:-1:-1;;;6779:19:61;;;;;;;;;;;6764:34;6812:26;6826:11;6812:13;:26::i;:::-;-1:-1:-1;6891:20:61;;;;:7;:20;;;;;:23;:20;;6857:75;;6916:15;:6;6925;6916:15;:::i;:::-;6857:75;;;23547:25:85;;;23603:2;23588:18;;23581:34;;;;23520:18;6857:75:61;;;;;;;6982:20;;;;:7;:20;;;;;:23;6946:77;;6982:20;;7007:15;:6;7016;7007:15;:::i;:::-;6946:22;:77::i;:::-;7037:74;;;;;;;;7061:6;7070;7061:15;;;;:::i;:::-;7037:74;;7078:15;7037:74;;;;;;;;;;;;;;;-1:-1:-1;7037:20:61;;;:7;:20;;;;:74;;;;:::i;10331:1163::-;10504:35;;;;;;;24842:19:85;;;24877:12;;;24870:28;;;10504:35:61;;;;;;;;;24914:12:85;;;;10504:35:61;;10494:46;;;;;;;;;-1:-1:-1;10645:31:61;;;:7;:31;;;;;;:34;10588:106;;24842:19:85;;24870:28;;10681:12:61;:10;:12::i;10588:106::-;10729:31;;;;:7;:31;;;;;10550:144;;-1:-1:-1;10761:1:61;10729:34;;10710:15;:53;;10704:82;;10773:13;;-1:-1:-1;;;10773:13:61;;;;;;;;;;;10704:82;10839:37;;;;:7;:37;;;;;;:40;10801:31;;;;;10833:1;10801:34;;:78;10797:262;;10938:1;10895:37;;;:7;:37;;;;;:44;10797:262;;;11014:31;;;;:7;:31;;;;;;11046:1;11014:34;;10970:37;;;;;;:78;;11014:34;;10970:37;;:78;;11014:34;;10970:78;:::i;:::-;;;;-1:-1:-1;;10797:262:61;11069:37;;;;:7;:37;;;;;:59;;11113:15;;11069:37;:59;;11113:15;;11069:59;:::i;:::-;;;;-1:-1:-1;;11185:17:61;;;;:7;:17;;;;;:20;;11142:37;;;;:7;:37;;;;;:40;;:63;11138:157;;;11264:17;;;;:7;:17;;;;;:20;;11221:37;;;;:7;:37;;;;;:40;:63;11138:157;11305:37;;;;:7;:37;;;;;;11348:15;11343:1;11305:40;;;:58;;;11373:31;;;;;:34;;;:52;;;;11467:1;11435:34;:52;-1:-1:-1;;10331:1163:61:o;18180:389:62:-;18273:17;;;;:13;:17;;;;;:27;;18294:6;;18273:17;:27;;18294:6;;18273:27;:::i;:::-;;;;-1:-1:-1;;18315:12:62;;;;:8;:12;;;;;;:17;-1:-1:-1;18315:34:62;;;;;18341:8;18336:2;:13;18315:34;18311:213;;;18365:17;18379:2;18365:13;:17::i;:::-;;18396:37;18408:12;:10;:12::i;:::-;18422:2;18426:6;18396:11;:37::i;18311:213::-;18484:29;18496:4;18502:2;18506:6;18484:11;:29::i;:::-;18551:2;18545:4;-1:-1:-1;;;;;18538:24:62;;18555:6;18538:24;;;;616:25:85;;604:2;589:18;;470:177;33594:2706:49;16253:9:62;;;;33783:122:49;;;33828:66;33849:4;33855:2;33859:11;33867:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;33828:66;34001:4;33997:2;33993:13;34038:2;34034;34030:11;34115:3;34105:136;;34151:10;34145:4;34138:24;34222:4;34216;34209:18;34105:136;34297:5;34270:25;34267:36;34261:4;34254:50;34484:2;34480;34476:11;34534:5;34529:3;34526:14;34520:3;34513:11;34510:31;34500:279;;34574:2;34568:4;34561:16;34626:4;34620;34610:21;34604:28;34594:171;;34669:10;34663:4;34656:24;34742:4;34736;34729:18;34594:171;34500:279;34888:2;34882:4;34875:16;34947:4;34941;34931:21;34994:15;34988:22;35041:11;35033:6;35030:23;35027:158;;;35089:10;35083:4;35076:24;35162:4;35156;35149:18;35027:158;35226:24;;;35202:49;;35375:25;35372:34;;35366:4;35359:48;35461:4;35455;35445:21;35506:20;;35565:28;;;35613:35;;;35610:173;;;35684:10;35678:4;35671:24;35760:4;35754;35747:18;35610:173;35822:14;35807:13;35800:37;;;;35923:6;35917:4;35910:20;36071:3;36067:2;36063:12;36055:5;36051:2;36047:14;36037:8;-1:-1:-1;;;;;;;;;;;35997:4:49;35991;35986:90;;;36099:24;16122:4:62;16056:101;;36099:24:49;36095:120;;;36139:65;36159:4;36165:2;36169:11;36177:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;36139:65;43964:14;;36224:69;;;36242:51;36266:4;36272:2;36276;36280:6;36288:4;36242:23;:51::i;144:304:66:-;223:15;250:22;288:5;:12;-1:-1:-1;;;;;275:26:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:51;;317:9;312:106;336:5;:12;332:1;:16;312:106;;;381:26;398:5;404:1;398:8;;;;;;;;:::i;:::-;;;;;;;381:16;:26::i;:::-;369:6;376:1;369:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;350:3;;312:106;;;-1:-1:-1;435:6:66;144:304;-1:-1:-1;;144:304:66:o;1818:437:41:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:41;;1918:47;;-1:-1:-1;;;1975:6:41;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:41;;;;;;;;;-1:-1:-1;;;2000:6:41;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:41;;;;;;;;-1:-1:-1;2030:9:41;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:41;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:41;;;;;;;;-1:-1:-1;2141:1:41;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:41;;2162:55;;;;-1:-1:-1;;;2162:55:41;;32923:2:85;2162:55:41;;;32905:21:85;;;32942:18;;;32935:30;33001:34;32981:18;;;32974:62;33053:18;;2162:55:41;;;;;;;44187:1433:49;44475:4;44469:11;44578:10;44575:1;44568:21;44623:8;44616:4;44613:1;44609:12;44602:30;44682:4;44678:2;44674:13;44670:2;44666:22;44659:4;44656:1;44652:12;44645:44;44723:2;44716:4;44713:1;44709:12;44702:24;44760:6;44753:4;44750:1;44746:12;44739:28;44801:4;44794;44791:1;44787:12;44780:26;44834:4;44828:11;44873:1;44866:4;44863:1;44859:12;44852:23;44891:1;44888:71;;;44954:1;44947:4;44944:1;44940:12;44937:1;44930:4;44924;44920:15;44917:1;44910:5;44899:57;44895:62;44888:71;45075:4;45072:1;45068;45062:4;45058:12;45051:4;45048:1;45044:12;45041:1;45037:2;45030:5;45025:55;45015:313;;45103:16;45100:214;;;45231:16;45225:4;45222:1;45207:41;45279:16;45276:1;45269:27;45100:214;-1:-1:-1;45432:8:49;;-1:-1:-1;;;45429:34:49;45419:185;;45496:10;45490:4;45483:24;45585:4;45579;45572:18;9398:927:61;9664:1;9642:16;;;:7;:16;;;;;9659:1;9642:19;;:23;9638:186;;9707:1;9685:16;;;:7;:16;;;;;9702:1;9685:19;;:23;:52;;;;-1:-1:-1;9735:1:61;9713:16;;;:7;:16;;;;;9730:1;9713:19;;:23;9685:52;9681:133;;;9780:16;;;;:7;:16;;;;;;9797:1;9780:19;;9757:16;;;;;;:42;;9780:19;;9757:16;;:42;;9780:19;;9757:42;:::i;:::-;;;;-1:-1:-1;;9681:133:61;9837:27;;;;:15;:27;;;;;:34;:43;-1:-1:-1;9833:366:61;;;9896:18;9917:27;;;:15;:27;;;;;:35;;9945:6;;9917:35;;;;;;:::i;:::-;;;;;;;;;9896:56;;9984:6;9970:10;:20;9966:223;;10097:7;:74;10132:10;10144:12;:10;:12::i;:::-;10158:10;10115:54;;;;;;;;;33267:19:85;;;33324:2;33320:15;;;;-1:-1:-1;;;;;;33316:53:85;33311:2;33302:12;;33295:75;33395:2;33386:12;;33379:28;33432:2;33423:12;;33082:359;10115:54:61;;;;;;;;;;;;;10105:65;;;;;;10097:74;;;;;;;;;;;10172:1;10097:77;;;;;;;:::i;:::-;;;10010:7;:60;10045:10;10057;10028:40;;;;;;;;24842:19:85;;;24886:2;24877:12;;24870:28;24923:2;24914:12;;24685:247;10028:40:61;;;;;;;;;;;;;10018:51;;;;;;10010:60;;;;;;;;;;;10071:1;10010:63;;;;;;;:::i;:::-;;;:164;;;;;;;:::i;:::-;;;;-1:-1:-1;;9966:223:61;9882:317;9833:366;10209:61;;;;;;;;;;;10237:15;10209:61;;;;;;;;;;;;;;-1:-1:-1;10209:16:61;;;:7;:16;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;10280:16:61;;;;:7;:16;;;;;:38;;10303:15;;10280:16;:38;;10303:15;;10280:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;;9398:927:61:o;7134:1237::-;7239:25;7267:23;;;:10;:23;;;;;;;;7239:51;;;;;;;;;;;;;;;;;;;7267:23;;7239:51;;;7267:23;7239:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7304:8;:15;7323:1;7304:20;7300:33;;7326:7;7134:1237;;;:::o;7300:33::-;7342:30;;7382:549;7406:8;:15;7402:1;:19;7382:549;;;7442:30;7502:8;7511:1;7502:11;;;;;;;;:::i;:::-;;;;;;;7515;7485:42;;;;;;;;24842:19:85;;;24886:2;24877:12;;24870:28;24923:2;24914:12;;24685:247;7485:42:61;;;;;;;-1:-1:-1;;7485:42:61;;;;;;7475:53;;7485:42;7475:53;;;;7542:26;7571:31;;;:7;:31;;;;;:34;7475:53;;-1:-1:-1;7619:44:61;7571:34;7619:44;;:::i;:::-;;;7703:6;7682:18;:27;7678:243;;;7729:25;7742:8;7751:1;7742:11;;;;;;;;:::i;7729:25::-;-1:-1:-1;7772:22:61;7830:7;7798:28;7819:7;7798:18;:28;:::i;:::-;7797:40;;;;:::i;:::-;7855:31;;;;:7;:31;;;;;:51;-1:-1:-1;7678:243:61;-1:-1:-1;;7423:3:61;;7382:549;;;;7985:6;7959:22;:32;;7958:108;;;;-1:-1:-1;8033:20:61;;;;:7;:20;;;;;:23;:32;;8059:6;;8033:32;:::i;:::-;7997:31;8022:6;7997:22;:31;:::i;:::-;7996:70;7958:108;7941:357;;;8091:21;8160:56;8170:22;8180:11;8170:9;:22::i;:::-;8194:21;;;;:8;:21;;;;;;6250:25:49;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;8160:56:61;8131:26;;;;:13;:26;;;;;;:85;;;;:::i;:::-;8091:125;;8230:57;8236:22;8246:11;8236:9;:22::i;:::-;8260:11;8273:13;8230:5;:57::i;:::-;8077:221;7941:357;8313:51;;;23547:25:85;;;23603:2;23588:18;;23581:34;;;8334:11:61;;8313:51;;23520:18:85;8313:51:61;;;;;;;7229:1142;;7134:1237;;;:::o;25830:126:49:-;25914:35;25928:1;25932:4;25938:2;25942:6;16253:9:62;;;;26365:128:49;;;26410:72;26431:4;26445:1;26449:11;26457:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;26449:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;26410:72;;;;;;;;;;;;:20;:72::i;:::-;26589:4;26585:2;26581:13;26650:5;26623:25;26620:36;26614:4;26607:50;26868:5;26863:2;26859;26855:11;26852:22;26846:2;26842;26838:11;26831:19;26828:47;26818:295;;26908:2;26902:4;26895:16;26960:4;26954;26944:21;26938:28;26928:171;;27003:10;26997:4;26990:24;27076:4;27070;27063:18;26928:171;27222:2;27216:4;27209:16;27281:4;27275;27265:21;27328:15;27322:22;27375:11;27367:6;27364:23;27361:158;;;27423:10;27417:4;27410:24;27496:4;27490;27483:18;27361:158;27577:6;27564:11;27560:24;27543:15;27536:49;;;27671:6;27665:4;27658:20;27768:1;27760:5;27756:2;27752:14;27742:8;-1:-1:-1;;;;;;;;;;;27702:4:49;27696;27691:79;-1:-1:-1;27789:126:49;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:85:-;-1:-1:-1;;;;;89:31:85;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:85:o;652:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;;857:32:85;;847:43;;837:71;;904:1;901;894:12;1135:289;1177:3;1215:5;1209:12;1242:6;1237:3;1230:19;1298:6;1291:4;1284:5;1280:16;1273:4;1268:3;1264:14;1258:47;1350:1;1343:4;1334:6;1329:3;1325:16;1321:27;1314:38;1413:4;1406:2;1402:7;1397:2;1389:6;1385:15;1381:29;1376:3;1372:39;1368:50;1361:57;;;1135:289;;;;:::o;1429:220::-;1578:2;1567:9;1560:21;1541:4;1598:45;1639:2;1628:9;1624:18;1616:6;1598:45;:::i;1654:180::-;1713:6;1766:2;1754:9;1745:7;1741:23;1737:32;1734:52;;;1782:1;1779;1772:12;1734:52;-1:-1:-1;1805:23:85;;1654:180;-1:-1:-1;1654:180:85:o;1839:247::-;1898:6;1951:2;1939:9;1930:7;1926:23;1922:32;1919:52;;;1967:1;1964;1957:12;1919:52;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;2091:452::-;2177:6;2185;2193;2201;2254:3;2242:9;2233:7;2229:23;2225:33;2222:53;;;2271:1;2268;2261:12;2222:53;2307:9;2294:23;2284:33;;2364:2;2353:9;2349:18;2336:32;2326:42;;2415:2;2404:9;2400:18;2387:32;2377:42;;2469:2;2458:9;2454:18;2441:32;2482:31;2507:5;2482:31;:::i;:::-;2091:452;;;;-1:-1:-1;2091:452:85;;-1:-1:-1;;2091:452:85:o;2548:127::-;2609:10;2604:3;2600:20;2597:1;2590:31;2640:4;2637:1;2630:15;2664:4;2661:1;2654:15;2680:253;2752:2;2746:9;2794:4;2782:17;;-1:-1:-1;;;;;2814:34:85;;2850:22;;;2811:62;2808:88;;;2876:18;;:::i;:::-;2912:2;2905:22;2680:253;:::o;2938:275::-;3009:2;3003:9;3074:2;3055:13;;-1:-1:-1;;3051:27:85;3039:40;;-1:-1:-1;;;;;3094:34:85;;3130:22;;;3091:62;3088:88;;;3156:18;;:::i;:::-;3192:2;3185:22;2938:275;;-1:-1:-1;2938:275:85:o;3218:183::-;3278:4;-1:-1:-1;;;;;3303:6:85;3300:30;3297:56;;;3333:18;;:::i;:::-;-1:-1:-1;3378:1:85;3374:14;3390:4;3370:25;;3218:183::o;3406:668::-;3460:5;3513:3;3506:4;3498:6;3494:17;3490:27;3480:55;;3531:1;3528;3521:12;3480:55;3567:6;3554:20;3593:4;3617:60;3633:43;3673:2;3633:43;:::i;:::-;3617:60;:::i;:::-;3699:3;3723:2;3718:3;3711:15;3751:4;3746:3;3742:14;3735:21;;3808:4;3802:2;3799:1;3795:10;3787:6;3783:23;3779:34;3765:48;;3836:3;3828:6;3825:15;3822:35;;;3853:1;3850;3843:12;3822:35;3889:4;3881:6;3877:17;3903:142;3919:6;3914:3;3911:15;3903:142;;;3985:17;;3973:30;;4023:12;;;;3936;;3903:142;;;-1:-1:-1;4063:5:85;3406:668;-1:-1:-1;;;;;;3406:668:85:o;4079:187::-;4128:4;-1:-1:-1;;;;;4153:6:85;4150:30;4147:56;;;4183:18;;:::i;:::-;-1:-1:-1;4249:2:85;4228:15;-1:-1:-1;;4224:29:85;4255:4;4220:40;;4079:187::o;4271:464::-;4314:5;4367:3;4360:4;4352:6;4348:17;4344:27;4334:55;;4385:1;4382;4375:12;4334:55;4421:6;4408:20;4452:49;4468:32;4497:2;4468:32;:::i;4452:49::-;4526:2;4517:7;4510:19;4572:3;4565:4;4560:2;4552:6;4548:15;4544:26;4541:35;4538:55;;;4589:1;4586;4579:12;4538:55;4654:2;4647:4;4639:6;4635:17;4628:4;4619:7;4615:18;4602:55;4702:1;4677:16;;;4695:4;4673:27;4666:38;;;;4681:7;4271:464;-1:-1:-1;;;4271:464:85:o;4740:1551::-;4895:6;4903;4911;4919;4927;4980:3;4968:9;4959:7;4955:23;4951:33;4948:53;;;4997:1;4994;4987:12;4948:53;5033:9;5020:23;5010:33;;5062:2;5115;5104:9;5100:18;5087:32;-1:-1:-1;;;;;5179:2:85;5171:6;5168:14;5165:34;;;5195:1;5192;5185:12;5165:34;5233:6;5222:9;5218:22;5208:32;;5278:7;5271:4;5267:2;5263:13;5259:27;5249:55;;5300:1;5297;5290:12;5249:55;5336:2;5323:16;5359:60;5375:43;5415:2;5375:43;:::i;5359:60::-;5453:15;;;5535:1;5531:10;;;;5523:19;;5519:28;;;5484:12;;;;5559:19;;;5556:39;;;5591:1;5588;5581:12;5556:39;5615:11;;;;5635:217;5651:6;5646:3;5643:15;5635:217;;;5731:3;5718:17;5748:31;5773:5;5748:31;:::i;:::-;5792:18;;5668:12;;;;5830;;;;5635:217;;;5871:5;-1:-1:-1;;;5929:2:85;5914:18;;5901:32;;-1:-1:-1;5945:16:85;;;5942:36;;;5974:1;5971;5964:12;5942:36;5997:63;6052:7;6041:8;6030:9;6026:24;5997:63;:::i;:::-;5987:73;;6113:2;6102:9;6098:18;6085:32;6069:48;;6142:2;6132:8;6129:16;6126:36;;;6158:1;6155;6148:12;6126:36;;;6181:52;6225:7;6214:8;6203:9;6199:24;6181:52;:::i;:::-;4740:1551;;;;-1:-1:-1;4740:1551:85;;6280:3;6265:19;6252:33;;4740:1551;-1:-1:-1;;;4740:1551:85:o;6296:439::-;6349:3;6387:5;6381:12;6414:6;6409:3;6402:19;6440:4;6469;6464:3;6460:14;6453:21;;6508:4;6501:5;6497:16;6531:1;6541:169;6555:6;6552:1;6549:13;6541:169;;;6616:13;;6604:26;;6650:12;;;;6685:15;;;;6577:1;6570:9;6541:169;;;-1:-1:-1;6726:3:85;;6296:439;-1:-1:-1;;;;;6296:439:85:o;6740:261::-;6919:2;6908:9;6901:21;6882:4;6939:56;6991:2;6980:9;6976:18;6968:6;6939:56;:::i;7006:248::-;7074:6;7082;7135:2;7123:9;7114:7;7110:23;7106:32;7103:52;;;7151:1;7148;7141:12;7103:52;-1:-1:-1;;7174:23:85;;;7244:2;7229:18;;;7216:32;;-1:-1:-1;7006:248:85:o;7259:315::-;7327:6;7335;7388:2;7376:9;7367:7;7363:23;7359:32;7356:52;;;7404:1;7401;7394:12;7356:52;7440:9;7427:23;7417:33;;7500:2;7489:9;7485:18;7472:32;7513:31;7538:5;7513:31;:::i;:::-;7563:5;7553:15;;;7259:315;;;;;:::o;7832:456::-;7909:6;7917;7925;7978:2;7966:9;7957:7;7953:23;7949:32;7946:52;;;7994:1;7991;7984:12;7946:52;8033:9;8020:23;8052:31;8077:5;8052:31;:::i;:::-;8102:5;-1:-1:-1;8154:2:85;8139:18;;8126:32;;-1:-1:-1;8210:2:85;8195:18;;8182:32;8223:33;8182:32;8223:33;:::i;:::-;8275:7;8265:17;;;7832:456;;;;;:::o;8293:367::-;8356:8;8366:6;8420:3;8413:4;8405:6;8401:17;8397:27;8387:55;;8438:1;8435;8428:12;8387:55;-1:-1:-1;8461:20:85;;-1:-1:-1;;;;;8493:30:85;;8490:50;;;8536:1;8533;8526:12;8490:50;8573:4;8565:6;8561:17;8549:29;;8633:3;8626:4;8616:6;8613:1;8609:14;8601:6;8597:27;8593:38;8590:47;8587:67;;;8650:1;8647;8640:12;8587:67;8293:367;;;;;:::o;8665:347::-;8716:8;8726:6;8780:3;8773:4;8765:6;8761:17;8757:27;8747:55;;8798:1;8795;8788:12;8747:55;-1:-1:-1;8821:20:85;;-1:-1:-1;;;;;8853:30:85;;8850:50;;;8896:1;8893;8886:12;8850:50;8933:4;8925:6;8921:17;8909:29;;8985:3;8978:4;8969:6;8961;8957:19;8953:30;8950:39;8947:59;;;9002:1;8999;8992:12;9017:1338;9177:6;9185;9193;9201;9209;9217;9225;9233;9286:3;9274:9;9265:7;9261:23;9257:33;9254:53;;;9303:1;9300;9293:12;9254:53;9342:9;9329:23;9361:31;9386:5;9361:31;:::i;:::-;9411:5;-1:-1:-1;9468:2:85;9453:18;;9440:32;9481:33;9440:32;9481:33;:::i;:::-;9533:7;-1:-1:-1;9591:2:85;9576:18;;9563:32;-1:-1:-1;;;;;9644:14:85;;;9641:34;;;9671:1;9668;9661:12;9641:34;9710:70;9772:7;9763:6;9752:9;9748:22;9710:70;:::i;:::-;9799:8;;-1:-1:-1;9684:96:85;-1:-1:-1;9887:2:85;9872:18;;9859:32;;-1:-1:-1;9903:16:85;;;9900:36;;;9932:1;9929;9922:12;9900:36;9971:72;10035:7;10024:8;10013:9;10009:24;9971:72;:::i;:::-;10062:8;;-1:-1:-1;9945:98:85;-1:-1:-1;10150:3:85;10135:19;;10122:33;;-1:-1:-1;10167:16:85;;;10164:36;;;10196:1;10193;10186:12;10164:36;;10235:60;10287:7;10276:8;10265:9;10261:24;10235:60;:::i;:::-;9017:1338;;;;-1:-1:-1;9017:1338:85;;-1:-1:-1;9017:1338:85;;;;;;10314:8;-1:-1:-1;;;9017:1338:85:o;10360:465::-;10413:3;10451:5;10445:12;10478:6;10473:3;10466:19;10504:4;10533;10528:3;10524:14;10517:21;;10572:4;10565:5;10561:16;10595:1;10605:195;10619:6;10616:1;10613:13;10605:195;;;10684:13;;-1:-1:-1;;;;;10680:39:85;10668:52;;10740:12;;;;10775:15;;;;10716:1;10634:9;10605:195;;10830:772;10889:3;10927:5;10921:12;10954:6;10949:3;10942:19;10980:4;11009;11004:3;11000:14;10993:21;;11048:4;11041:5;11037:16;11071:1;11081:496;11095:6;11092:1;11089:13;11081:496;;;11154:13;;11193:3;11276:1;11290:205;11306:4;11301:3;11298:13;11290:205;;;11379:15;;11365:30;;11464:17;;;;11421:14;;;;11330:1;11321:11;11290:205;;;-1:-1:-1;;;11524:4:85;11515:14;;;;;11552:15;;;;11117:1;11110:9;11081:496;;11607:1685;11664:3;11708:5;11702:12;11735:4;11730:3;11723:17;11761:58;11813:4;11808:3;11804:14;11790:12;11761:58;:::i;:::-;11749:70;;11838:4;11890:2;11883:5;11879:14;11873:21;11934:3;11928:4;11924:14;11919:2;11914:3;11910:12;11903:36;11962:56;12013:4;11997:14;11962:56;:::i;:::-;11948:70;;;12066:4;12059:5;12055:16;12049:23;12116:3;12108:6;12104:16;12097:4;12092:3;12088:14;12081:40;12144:58;12195:6;12179:14;12144:58;:::i;:::-;12130:72;;;12250:4;12243:5;12239:16;12233:23;12300:3;12292:6;12288:16;12281:4;12276:3;12272:14;12265:40;12327:6;12362:14;12356:21;12401:6;12393;12386:22;12438:2;12430:6;12426:15;12417:24;;12497:2;12487:6;12484:1;12480:14;12472:6;12468:27;12464:36;12543:2;12527:14;12523:23;12509:37;;12564:1;12574:690;12588:6;12585:1;12582:13;12574:690;;;12655:19;;;-1:-1:-1;;12651:33:85;12637:48;;12708:13;;12782:9;;12804:24;;;12894:11;;;;12850:15;;;;12929:1;12943:209;12959:8;12954:3;12951:17;12943:209;;;13036:15;;13022:30;;13121:17;;;;13078:14;;;;12987:1;12978:11;12943:209;;;-1:-1:-1;;13203:15:85;;;;13240:14;;;;13175:5;-1:-1:-1;;12610:1:85;12603:9;12574:690;;;-1:-1:-1;13280:6:85;11607:1685;-1:-1:-1;;;;;;;;11607:1685:85:o;13297:281::-;13492:2;13481:9;13474:21;13455:4;13512:60;13568:2;13557:9;13553:18;13545:6;13512:60;:::i;13791:773::-;13913:6;13921;13929;13937;13990:2;13978:9;13969:7;13965:23;13961:32;13958:52;;;14006:1;14003;13996:12;13958:52;14046:9;14033:23;-1:-1:-1;;;;;14116:2:85;14108:6;14105:14;14102:34;;;14132:1;14129;14122:12;14102:34;14171:70;14233:7;14224:6;14213:9;14209:22;14171:70;:::i;:::-;14260:8;;-1:-1:-1;14145:96:85;-1:-1:-1;14348:2:85;14333:18;;14320:32;;-1:-1:-1;14364:16:85;;;14361:36;;;14393:1;14390;14383:12;14361:36;;14432:72;14496:7;14485:8;14474:9;14470:24;14432:72;:::i;:::-;13791:773;;;;-1:-1:-1;14523:8:85;-1:-1:-1;;;;13791:773:85:o;14569:416::-;14662:6;14670;14723:2;14711:9;14702:7;14698:23;14694:32;14691:52;;;14739:1;14736;14729:12;14691:52;14775:9;14762:23;14752:33;;14836:2;14825:9;14821:18;14808:32;-1:-1:-1;;;;;14855:6:85;14852:30;14849:50;;;14895:1;14892;14885:12;14849:50;14918:61;14971:7;14962:6;14951:9;14947:22;14918:61;:::i;:::-;14908:71;;;14569:416;;;;;:::o;14990:118::-;15076:5;15069:13;15062:21;15055:5;15052:32;15042:60;;15098:1;15095;15088:12;15113:382;15178:6;15186;15239:2;15227:9;15218:7;15214:23;15210:32;15207:52;;;15255:1;15252;15245:12;15207:52;15294:9;15281:23;15313:31;15338:5;15313:31;:::i;:::-;15363:5;-1:-1:-1;15420:2:85;15405:18;;15392:32;15433:30;15392:32;15433:30;:::i;15500:475::-;15548:3;15579;15633;15626:5;15622:15;15660:5;15683:1;15693:256;15707:4;15704:1;15701:11;15693:256;;;15776:5;15770:4;15766:16;15761:3;15754:29;15804:38;15837:4;15828:6;15822:13;15804:38;:::i;:::-;15865:4;15927:12;;;;15796:46;;-1:-1:-1;15892:15:85;;;;;15727:1;15720:9;15693:256;;;-1:-1:-1;15965:4:85;;15500:475;-1:-1:-1;;;;;15500:475:85:o;15980:598::-;16032:3;16063;16095:5;16089:12;16122:6;16117:3;16110:19;16148:4;16177;16172:3;16168:14;16161:21;;16235:4;16225:6;16222:1;16218:14;16211:5;16207:26;16203:37;16274:4;16267:5;16263:16;16297:1;16307:245;16321:6;16318:1;16315:13;16307:245;;;16408:2;16404:7;16396:5;16390:4;16386:16;16382:30;16377:3;16370:43;16434:38;16467:4;16458:6;16452:13;16434:38;:::i;:::-;16530:12;;;;16426:46;-1:-1:-1;16495:15:85;;;;16343:1;16336:9;16307:245;;;-1:-1:-1;16568:4:85;;15980:598;-1:-1:-1;;;;;;;15980:598:85:o;16583:1256::-;16635:3;16679:5;16673:12;16706:4;16701:3;16694:17;16732:53;16779:4;16774:3;16770:14;16756:12;16732:53;:::i;:::-;16720:65;;16833:4;16826:5;16822:16;16816:23;16881:3;16875:4;16871:14;16864:4;16859:3;16855:14;16848:38;16909:39;16943:4;16927:14;16909:39;:::i;:::-;16895:53;;;16996:4;16989:5;16985:16;16979:23;17046:3;17038:6;17034:16;17027:4;17022:3;17018:14;17011:40;17074:52;17119:6;17103:14;17074:52;:::i;:::-;17060:66;;;17174:4;17167:5;17163:16;17157:23;17224:3;17216:6;17212:16;17205:4;17200:3;17196:14;17189:40;17252:51;17296:6;17280:14;17252:51;:::i;:::-;17238:65;;;17351:4;17344:5;17340:16;17334:23;17401:3;17393:6;17389:16;17382:4;17377:3;17373:14;17366:40;17429:52;17474:6;17458:14;17429:52;:::i;:::-;17415:66;;;17529:4;17522:5;17518:16;17512:23;17579:3;17571:6;17567:16;17560:4;17555:3;17551:14;17544:40;17607:51;17651:6;17635:14;17607:51;:::i;:::-;17593:65;;;17706:4;17699:5;17695:16;17689:23;17756:3;17748:6;17744:16;17737:4;17732:3;17728:14;17721:40;17777:56;17826:6;17810:14;17777:56;:::i;:::-;17770:63;16583:1256;-1:-1:-1;;;;;16583:1256:85:o;17844:266::-;18029:2;18018:9;18011:21;17992:4;18049:55;18100:2;18089:9;18085:18;18077:6;18049:55;:::i;18115:388::-;18183:6;18191;18244:2;18232:9;18223:7;18219:23;18215:32;18212:52;;;18260:1;18257;18250:12;18212:52;18299:9;18286:23;18318:31;18343:5;18318:31;:::i;:::-;18368:5;-1:-1:-1;18425:2:85;18410:18;;18397:32;18438:33;18397:32;18438:33;:::i;18508:261::-;18687:2;18676:9;18669:21;18650:4;18707:56;18759:2;18748:9;18744:18;18736:6;18707:56;:::i;18774:823::-;18880:6;18888;18896;18904;18912;18920;18973:3;18961:9;18952:7;18948:23;18944:33;18941:53;;;18990:1;18987;18980:12;18941:53;19029:9;19016:23;19048:31;19073:5;19048:31;:::i;:::-;19098:5;-1:-1:-1;19155:2:85;19140:18;;19127:32;19168:33;19127:32;19168:33;:::i;:::-;19220:7;-1:-1:-1;19274:2:85;19259:18;;19246:32;;-1:-1:-1;19325:2:85;19310:18;;19297:32;;-1:-1:-1;19380:3:85;19365:19;;19352:33;-1:-1:-1;;;;;19397:30:85;;19394:50;;;19440:1;19437;19430:12;19394:50;19479:58;19529:7;19520:6;19509:9;19505:22;19479:58;:::i;:::-;18774:823;;;;-1:-1:-1;18774:823:85;;-1:-1:-1;18774:823:85;;19556:8;;18774:823;-1:-1:-1;;;18774:823:85:o;19602:849::-;19800:4;19829:2;19869;19858:9;19854:18;19899:2;19888:9;19881:21;19922:6;19957;19951:13;19988:6;19980;19973:22;20026:2;20015:9;20011:18;20004:25;;20088:2;20078:6;20075:1;20071:14;20060:9;20056:30;20052:39;20038:53;;20126:2;20118:6;20114:15;20147:1;20157:265;20171:6;20168:1;20165:13;20157:265;;;20264:2;20260:7;20248:9;20240:6;20236:22;20232:36;20227:3;20220:49;20292:50;20335:6;20326;20320:13;20292:50;:::i;:::-;20282:60;-1:-1:-1;20400:12:85;;;;20365:15;;;;20193:1;20186:9;20157:265;;;-1:-1:-1;20439:6:85;;19602:849;-1:-1:-1;;;;;;;19602:849:85:o;20456:380::-;20535:1;20531:12;;;;20578;;;20599:61;;20653:4;20645:6;20641:17;20631:27;;20599:61;20706:2;20698:6;20695:14;20675:18;20672:38;20669:161;;20752:10;20747:3;20743:20;20740:1;20733:31;20787:4;20784:1;20777:15;20815:4;20812:1;20805:15;20669:161;;20456:380;;;:::o;20841:274::-;-1:-1:-1;;;;;21033:32:85;;;;21015:51;;21097:2;21082:18;;21075:34;21003:2;20988:18;;20841:274::o;21120:245::-;21187:6;21240:2;21228:9;21219:7;21215:23;21211:32;21208:52;;;21256:1;21253;21246:12;21208:52;21288:9;21282:16;21307:28;21329:5;21307:28;:::i;21370:474::-;21632:30;21627:3;21620:43;21602:3;21692:6;21686:13;21747:6;21740:4;21732:6;21728:17;21723:2;21718:3;21714:12;21708:46;21818:1;21777:16;;21795:2;21773:25;21807:13;;;-1:-1:-1;21773:25:85;21370:474;-1:-1:-1;21370:474:85:o;21849:127::-;21910:10;21905:3;21901:20;21898:1;21891:31;21941:4;21938:1;21931:15;21965:4;21962:1;21955:15;21981:127;22042:10;22037:3;22033:20;22030:1;22023:31;22073:4;22070:1;22063:15;22097:4;22094:1;22087:15;22113:168;22186:9;;;22217;;22234:15;;;22228:22;;22214:37;22204:71;;22255:18;;:::i;22286:127::-;22347:10;22342:3;22338:20;22335:1;22328:31;22378:4;22375:1;22368:15;22402:4;22399:1;22392:15;22418:120;22458:1;22484;22474:35;;22489:18;;:::i;:::-;-1:-1:-1;22523:9:85;;22418:120::o;22543:628::-;22848:2;22837:9;22830:21;22811:4;22874:56;22926:2;22915:9;22911:18;22903:6;22874:56;:::i;:::-;22978:9;22970:6;22966:22;22961:2;22950:9;22946:18;22939:50;23012:44;23049:6;23041;23012:44;:::i;:::-;22998:58;;23104:9;23096:6;23092:22;23087:2;23076:9;23072:18;23065:50;23132:33;23158:6;23150;23132:33;:::i;:::-;23124:41;22543:628;-1:-1:-1;;;;;;22543:628:85:o;23176:184::-;23246:6;23299:2;23287:9;23278:7;23274:23;23270:32;23267:52;;;23315:1;23312;23305:12;23267:52;-1:-1:-1;23338:16:85;;23176:184;-1:-1:-1;23176:184:85:o;24188:128::-;24255:9;;;24276:11;;;24273:37;;;24290:18;;:::i;24321:359::-;24526:2;24522:15;;;;-1:-1:-1;;;;;;24518:53:85;24506:66;;24597:2;24588:12;;24581:28;;;;24634:2;24625:12;;24618:28;24671:2;24662:12;;24321:359::o;24937:135::-;24976:3;24997:17;;;24994:43;;25017:18;;:::i;:::-;-1:-1:-1;25064:1:85;25053:13;;24937:135::o;25077:125::-;25142:9;;;25163:10;;;25160:36;;;25176:18;;:::i;25904:251::-;25974:6;26027:2;26015:9;26006:7;26002:23;25998:32;25995:52;;;26043:1;26040;26033:12;25995:52;26075:9;26069:16;26094:31;26119:5;26094:31;:::i;26413:332::-;26620:2;26609:9;26602:21;26583:4;26640:56;26692:2;26681:9;26677:18;26669:6;26640:56;:::i;:::-;26632:64;;26732:6;26727:2;26716:9;26712:18;26705:34;26413:332;;;;;:::o;27818:561::-;-1:-1:-1;;;;;28115:15:85;;;28097:34;;28167:15;;28162:2;28147:18;;28140:43;28214:2;28199:18;;28192:34;;;28257:2;28242:18;;28235:34;;;28077:3;28300;28285:19;;28278:32;;;28040:4;;28327:46;;28353:19;;28345:6;28327:46;:::i;:::-;28319:54;27818:561;-1:-1:-1;;;;;;;27818:561:85:o;28384:112::-;28416:1;28442;28432:35;;28447:18;;:::i;:::-;-1:-1:-1;28481:9:85;;28384:112::o;29147:331::-;29252:9;29263;29305:8;29293:10;29290:24;29287:44;;;29327:1;29324;29317:12;29287:44;29356:6;29346:8;29343:20;29340:40;;;29376:1;29373;29366:12;29340:40;-1:-1:-1;;29402:23:85;;;29447:25;;;;;-1:-1:-1;29147:331:85:o;29483:665::-;29548:5;29601:3;29594:4;29586:6;29582:17;29578:27;29568:55;;29619:1;29616;29609:12;29568:55;29648:6;29642:13;29674:4;29698:60;29714:43;29754:2;29714:43;:::i;29698:60::-;29780:3;29804:2;29799:3;29792:15;29832:4;29827:3;29823:14;29816:21;;29889:4;29883:2;29880:1;29876:10;29868:6;29864:23;29860:34;29846:48;;29917:3;29909:6;29906:15;29903:35;;;29934:1;29931;29924:12;29903:35;29970:4;29962:6;29958:17;29984:135;30000:6;29995:3;29992:15;29984:135;;;30066:10;;30054:23;;30097:12;;;;30017;;29984:135;;30153:461;30207:5;30260:3;30253:4;30245:6;30241:17;30237:27;30227:55;;30278:1;30275;30268:12;30227:55;30307:6;30301:13;30338:49;30354:32;30383:2;30354:32;:::i;30338:49::-;30412:2;30403:7;30396:19;30458:3;30451:4;30446:2;30438:6;30434:15;30430:26;30427:35;30424:55;;;30475:1;30472;30465:12;30424:55;30533:2;30526:4;30518:6;30514:17;30507:4;30498:7;30494:18;30488:48;30581:1;30556:16;;;30574:4;30552:27;30545:38;;;;30560:7;30153:461;-1:-1:-1;;;30153:461:85:o;30619:1645::-;30716:6;30747:2;30790;30778:9;30769:7;30765:23;30761:32;30758:52;;;30806:1;30803;30796:12;30758:52;30839:9;30833:16;-1:-1:-1;;;;;30909:2:85;30901:6;30898:14;30895:34;;;30925:1;30922;30915:12;30895:34;30948:22;;;;31004:4;30986:16;;;30982:27;30979:47;;;31022:1;31019;31012:12;30979:47;31048:22;;:::i;:::-;31101:2;31095:9;31129:2;31119:8;31116:16;31113:36;;;31145:1;31142;31135:12;31113:36;31168:17;;31216:4;31208:13;;31204:27;-1:-1:-1;31194:55:85;;31245:1;31242;31235:12;31194:55;31274:2;31268:9;31297:60;31313:43;31353:2;31313:43;:::i;31297:60::-;31391:15;;;31473:1;31469:10;;;;31461:19;;31457:28;;;31422:12;;;;31497:19;;;31494:39;;;31529:1;31526;31519:12;31494:39;31553:11;;;;31573:216;31589:6;31584:3;31581:15;31573:216;;;31664:3;31658:10;31681:33;31706:7;31681:33;:::i;:::-;31727:20;;31606:12;;;;31767;;;;31573:216;;;31798:20;;-1:-1:-1;;;31849:11:85;;;31843:18;31873:16;;;31870:36;;;31902:1;31899;31892:12;31870:36;31938:67;31997:7;31986:8;31982:2;31978:17;31938:67;:::i;:::-;31933:2;31926:5;31922:14;31915:91;;32045:2;32041;32037:11;32031:18;32015:34;;32074:2;32064:8;32061:16;32058:36;;;32090:1;32087;32080:12;32058:36;32126:56;32174:7;32163:8;32159:2;32155:17;32126:56;:::i;:::-;32121:2;32114:5;32110:14;32103:80;32229:2;32225;32221:11;32215:18;32210:2;32203:5;32199:14;32192:42;32253:5;32243:15;;;;;;30619:1645;;;;:::o;32269:306::-;32345:6;32353;32406:2;32394:9;32385:7;32381:23;32377:32;32374:52;;;32422:1;32419;32412:12;32374:52;32454:9;32448:16;32473:28;32495:5;32473:28;:::i;:::-;32565:2;32550:18;;;;32544:25;32520:5;;32544:25;;-1:-1:-1;;;32269:306:85:o;32580:136::-;32619:3;32647:5;32637:39;;32656:18;;:::i;:::-;-1:-1:-1;;;32692:18:85;;32580:136::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "Will()": "535e9891",
        "allMembersOf(uint256)": "eef2e757",
        "asRootValuation(uint256,uint256)": "7f33d800",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "burn(uint256,uint256)": "b390c0ab",
        "burnPath(uint256,uint256)": "f039a733",
        "calculateUserTargetedPreferenceAmount(uint256,uint256,uint256,address)": "0ffd3910",
        "control(uint256)": "7d11e682",
        "createEndpointForOwner(uint256,address)": "45bbbf84",
        "executionAddress()": "78adc790",
        "getAllNodesForRoot(address,address)": "f87cc6b3",
        "getAllSignalsOfNode(uint256)": "30f9b165",
        "getChildrenOf(uint256)": "99f45689",
        "getFidPath(uint256)": "f6355a56",
        "getMembraneOf(uint256)": "7e44bffe",
        "getNodeData(uint256,address)": "a6bfbc20",
        "getParentOf(uint256)": "13e75206",
        "getUserNodeSignals(address,uint256)": "150d503d",
        "inParentDenomination(uint256,uint256)": "1e9b388d",
        "inflationOf(uint256)": "765063e5",
        "initSelfControl()": "68dc2747",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isMember(address,uint256)": "85752d03",
        "localizeEndpoint(address,uint256,address)": "28ca8e26",
        "membershipEnforce(address,uint256)": "62593f60",
        "membershipID(uint256)": "f77914c3",
        "mint(uint256,uint256)": "1b2ef1ca",
        "mintInflation(uint256)": "67c394fb",
        "mintMembership(uint256)": "0d78d0c1",
        "mintPath(uint256,uint256)": "791ddaf9",
        "name()": "06fdde03",
        "options(bytes32,uint256)": "20f94427",
        "redistribute(uint256)": "a0ce552d",
        "redistributePath(uint256)": "a0762253",
        "resignal(uint256,address)": "1fae703b",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "sendSignal(uint256,uint256[])": "5b4a26ed",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setControl(address)": "5ac8260c",
        "spawnNode(uint256)": "bfad25e5",
        "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": "114b6e49",
        "spawnRootNode(address)": "af1b55b0",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "taxPolicyPreference(address,uint256)": "1f017841",
        "toAddress(uint256)": "e0051aa9",
        "toID(address)": "0f336348",
        "totalSupply(uint256)": "bd85b039",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Execution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Membrane\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountBalanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadLen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseOrNonFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BurnE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSkip\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Endpoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteSign\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembershipOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembraneNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"No\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoControl\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSoup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTimeDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Noise\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoiseNotVoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNodeMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResignalMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignalOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetIsRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unautorised\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unqualified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnregisteredFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsoundMembership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isControled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"CreatedEndpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldInflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"}],\"name\":\"InflationSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MembershipMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMembrane\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMembrane\",\"type\":\"uint256\"}],\"name\":\"MembraneChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membraneId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"}],\"name\":\"MembraneSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootNodeId\",\"type\":\"uint256\"}],\"name\":\"NewRootNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"Resignaled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AgencyLocus\",\"type\":\"address\"}],\"name\":\"SelfControlAtAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SharesGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strenght\",\"type\":\"uint256\"}],\"name\":\"UserNodeSignal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Will\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"allMembersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"membersOf\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"asRootValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topVal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserTargetedPreferenceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"control\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createEndpointForOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"endpointAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userIfAny\",\"type\":\"address\"}],\"name\":\"getAllNodesForRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signalers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"inflationSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"membraneSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"redistributionSignals\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct AllNodeSignals\",\"name\":\"nodeSignals\",\"type\":\"tuple\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"getAllSignalsOfNode\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signalers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"inflationSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"membraneSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"redistributionSignals\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct AllNodeSignals\",\"name\":\"all\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getChildrenOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getFidPath\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getMembraneOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNodeData\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signalers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"inflationSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"membraneSignals\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"redistributionSignals\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct AllNodeSignals\",\"name\":\"nodeSignals\",\"type\":\"tuple\"}],\"internalType\":\"struct NodeState\",\"name\":\"nodeData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getParentOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"node_\",\"type\":\"uint256\"}],\"name\":\"getUserNodeSignals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"inParentDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inParentVal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"inflationOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initSelfControl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whoabout_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"whereabout_\",\"type\":\"uint256\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"endpoint_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endpointParent_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"localizeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipEnforce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"s\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"mintInflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"mintMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mintPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"NodeXUserXValue\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valueAtTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistributePath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originator\",\"type\":\"address\"}],\"name\":\"resignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"sendSignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"spawnNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances_\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"meta_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"inflationRate_\",\"type\":\"uint256\"}],\"name\":\"spawnNodeWithMembrane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fungible20_\",\"type\":\"address\"}],\"name\":\"spawnRootNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"taxRate_\",\"type\":\"uint256\"}],\"name\":\"taxPolicyPreference\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"toAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"toID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"parseb\",\"errors\":{\"AccountBalanceOverflow()\":[{\"details\":\"The recipient's balance has overflowed.\"}],\"ArrayLengthsMismatch()\":[{\"details\":\"The lengths of the input arrays are not the same.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"NotOwnerNorApproved()\":[{\"details\":\"Only the token owner or an approved account can manage the tokens.\"}],\"TransferToNonERC1155ReceiverImplementer()\":[{\"details\":\"Cannot safely transfer to a contract that does not implement the ERC1155Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Cannot mint or transfer to the zero address.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Emitted when `amounts` of token `ids` are transferred from `from` to `to` by `operator`.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `amount` of token `id` is transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the Uniform Resource Identifier (URI) for token `id` is updated to `value`. This event is not used in the base contract. You may need to emit this event depending on your URI logic. See: https://eips.ethereum.org/EIPS/eip-1155#metadata\"}},\"kind\":\"dev\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"params\":{\"amount\":\"how many of to price\",\"target_\":\"target node and its context token\"}},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of `id` owned by `owner`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length.\"},\"burn(uint256,uint256)\":{\"params\":{\"amount_\":\"amount to burn\",\"fid_\":\"id of node\"}},\"createEndpointForOwner(uint256,address)\":{\"params\":{\"nodeId_\":\"id of context node\",\"owner\":\"address of agent that will control the endpoint\"},\"returns\":{\"endpointAddress\":\"address of created endpoint\"}},\"getFidPath(uint256)\":{\"params\":{\"fid_\":\"target fid to trace path to from root\"},\"returns\":{\"fids\":\"lineage in chronologic order\"}},\"inParentDenomination(uint256,uint256)\":{\"params\":{\"amt_\":\"how many of to price\",\"id_\":\"target node by id and its context token\"},\"returns\":{\"inParentVal\":\"max price of inputs at current minted inflation\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns whether `operator` is approved to manage the tokens of `owner`.\"},\"isMember(address,uint256)\":{\"params\":{\"whereabout_\":\"you abouting about where exactly\",\"whoabout_\":\"you care about them dont you\"}},\"mint(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"fid_\":\"id to target for mint of kind\"}},\"mintInflation(uint256)\":{\"params\":{\"node\":\"identifier of node context\"}},\"mintMembership(uint256)\":{\"params\":{\"fid_\":\"node for which to mint membership\"}},\"mintPath(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"target_\":\"id to target for mint of kind\"}},\"redistribute(uint256)\":{\"params\":{\"nodeId_\":\"redistribution target group\"}},\"redistributePath(uint256)\":{\"params\":{\"nodeId_\":\"target node to actualize path to and mint inflation for\"},\"returns\":{\"distributedAmt\":\"total amount distributed\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event.\"},\"setControl(address)\":{\"params\":{\"newController\":\"address of new controller\"}},\"spawnNode(uint256)\":{\"params\":{\"fid_\":\"context node id\"}},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"params\":{\"balances_\":\"array of required balances for each token\",\"fid_\":\"context (parent) node\",\"inflationRate_\":\"rate for new Node token shares in gwei per second\",\"meta_\":\"metadata string (e.g. IPFS hash) for membrane details\",\"tokens_\":\"array of token addresses for membrane conditions\"}},\"spawnRootNode(address)\":{\"params\":{\"fungible20_\":\"address of ERC20 token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas.\"},\"taxPolicyPreference(address,uint256)\":{\"params\":{\"taxRate_\":\"share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"WillWe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"notice\":\"calculates and returns the value of a number of context tokens in terms of its root reserve\"},\"burn(uint256,uint256)\":{\"notice\":\"burn the amount of targeted node id\"},\"createEndpointForOwner(uint256,address)\":{\"notice\":\"creates an external endpoint for an agent in node contextnode owner can be external\"},\"getFidPath(uint256)\":{\"notice\":\"retrieves token path id array from root to target id\"},\"inParentDenomination(uint256,uint256)\":{\"notice\":\"calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller\"},\"isMember(address,uint256)\":{\"notice\":\"checks if provided address who is member in where id\"},\"mint(uint256,uint256)\":{\"notice\":\"mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve\"},\"mintInflation(uint256)\":{\"notice\":\"mints the inflation of a specific context tokenincreases ratio of reserve to context denomination\"},\"mintMembership(uint256)\":{\"notice\":\"mints membership to calling address if it satisfies membership conditions\"},\"mintPath(uint256,uint256)\":{\"notice\":\"mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root\"},\"options(bytes32,uint256)\":{\"notice\":\"stores a users option for change and node state [ wanted value, lastExpressedAt, signalStrength ]\"},\"redistribute(uint256)\":{\"notice\":\"redistributes eligible acummulated inflationary flows\"},\"redistributePath(uint256)\":{\"notice\":\"redistributes eligible amounts to all nodes on target path and mints inflation for target\"},\"setControl(address)\":{\"notice\":\"sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function\"},\"spawnNode(uint256)\":{\"notice\":\"creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context\"},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"notice\":\"spawns Node with an enforceable membership mechanism and creates new membrane\"},\"spawnRootNode(address)\":{\"notice\":\"spawns core Node for a tokenacts as port for token valuenests all token specific contexts\"}},\"notice\":\"Experimental. Do not use.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WillWe.sol\":\"WillWe\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":150},\"remappings\":[\":@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":@solady/=lib/solady/src/\",\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/\",\":src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/\",\":src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/\",\":src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/\",\":will/contracts/=lib/will/packages/contracts/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solady/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581\",\"dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9\"]},\"src/Fun.sol\":{\"keccak256\":\"0x111dc5cef03e09085fb3d0ebaf80fe1845fbfdaa0ce7878a0a5d74f2dc74966c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6d708b2e015f016e5311d3f3540f32270db67455c630ea5ddffaf1d3b815d38b\",\"dweb:/ipfs/QmTc7XLmCwhurSRjx5a8xy4bLMB94VcJ4nY85gxuxdGLtw\"]},\"src/Fungido.sol\":{\"keccak256\":\"0x8d9a0d3189fe146315d41b21c20ea9f93d0add510e4e63e5f464482496000c65\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://828cf089d505fc00730a36b4b8a1d138aad1582d3d38251b2cf4defc31a9cd3c\",\"dweb:/ipfs/Qmdwbp2P9uXUeyu4RTLXZymJtFEJytmDPVkKSRXAtPhc6V\"]},\"src/WillWe.sol\":{\"keccak256\":\"0x4ffbbab6ebebfe70a69db2788787560e04bfdba627e8eb856836fa0652e82fa8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c66c6da17b1361c43e324f68f600c0e729be382d34b1eb1ced2feabfdc9362fd\",\"dweb:/ipfs/Qmea4cMc52ysc8kK6mDYgwcfPTJBCD9wyFdjWYworh6Pcf\"]},\"src/components/PureUtils.sol\":{\"keccak256\":\"0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee\",\"dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC\"]},\"src/interfaces/IExecution.sol\":{\"keccak256\":\"0x854400dfbe5ab714ceef8e38291e0be43831ee38b28090488ed6f3695bfe459d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b204716405919db4dc45dfea0cf6d25f4610f3d8a3231c04cef06a75eafef43e\",\"dweb:/ipfs/QmZohsC9naWmFp6fT9VKgtCZKWDVktbiY4WKvZbhfwuWCk\"]},\"src/interfaces/IMembrane.sol\":{\"keccak256\":\"0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25\",\"dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "Execution",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "Membrane",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccountBalanceOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ArrayLengthsMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BadLen"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BaseOrNonFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BurnE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotSkip"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Disabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EOA"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Endpoint"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExecutionOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "IncompleteSign"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientAmt"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembershipOp"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembraneNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MintE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "No"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoControl"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoSoup"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoTimeDelta"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeAlreadyExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Noise"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoiseNotVoice"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotNodeMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotOwnerNorApproved"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Overreach"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ResignalMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "RootExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SignalOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TargetIsRoot"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToNonERC1155ReceiverImplementer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToZeroAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unautorised"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unqualified"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnregisteredFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsoundMembership"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsupportedTransfer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "isControled"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Burned",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CreatedEndpoint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "oldInflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newInflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationRateChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strength",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "userAddress",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MemberRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "who",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MembershipMinted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "previousMembrane",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newMembrane",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "membraneId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strength",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Minted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "creator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "rootNodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewRootNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Resignaled",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "AgencyLocus",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SelfControlAtAddress",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SharesGenerated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strenght",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UserNodeSignal",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "Will",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allMembersOf",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "membersOf",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "asRootValuation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "result",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "owners",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "balances",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "topVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnPath"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "childId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateUserTargetedPreferenceAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "control",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createEndpointForOwner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "endpointAddress",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "executionAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "userIfAny",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllNodesForRoot",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "struct AllNodeSignals",
                                    "name": "nodeSignals",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "address[]",
                                            "name": "signalers",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[2][]",
                                            "name": "inflationSignals",
                                            "type": "uint256[2][]"
                                        },
                                        {
                                            "internalType": "uint256[2][]",
                                            "name": "membraneSignals",
                                            "type": "uint256[2][]"
                                        },
                                        {
                                            "internalType": "uint256[][]",
                                            "name": "redistributionSignals",
                                            "type": "uint256[][]"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllSignalsOfNode",
                    "outputs": [
                        {
                            "internalType": "struct AllNodeSignals",
                            "name": "all",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address[]",
                                    "name": "signalers",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[2][]",
                                    "name": "inflationSignals",
                                    "type": "uint256[2][]"
                                },
                                {
                                    "internalType": "uint256[2][]",
                                    "name": "membraneSignals",
                                    "type": "uint256[2][]"
                                },
                                {
                                    "internalType": "uint256[][]",
                                    "name": "redistributionSignals",
                                    "type": "uint256[][]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChildrenOf",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFidPath",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "fids",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMembraneOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodeData",
                    "outputs": [
                        {
                            "internalType": "struct NodeState",
                            "name": "nodeData",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "struct AllNodeSignals",
                                    "name": "nodeSignals",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "address[]",
                                            "name": "signalers",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[2][]",
                                            "name": "inflationSignals",
                                            "type": "uint256[2][]"
                                        },
                                        {
                                            "internalType": "uint256[2][]",
                                            "name": "membraneSignals",
                                            "type": "uint256[2][]"
                                        },
                                        {
                                            "internalType": "uint256[][]",
                                            "name": "redistributionSignals",
                                            "type": "uint256[][]"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getParentOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "node_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUserNodeSignals",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amt_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inParentDenomination",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inParentVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inflationOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initSelfControl",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "whoabout_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "whereabout_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isMember",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "endpointParent_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "localizeEndpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "membershipEnforce",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "s",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "membershipID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "node",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintInflation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintMembership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintPath"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "NodeXUserXValue",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "options",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "valueAtTime",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistribute",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistributePath",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "originator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "resignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "sendSignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newController",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setControl"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address[]",
                            "name": "tokens_",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balances_",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "string",
                            "name": "meta_",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNodeWithMembrane",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fungible20_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnRootNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "fID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootToken_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "taxRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "taxPolicyPreference"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "x",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "x",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "params": {
                            "amount": "how many of to price",
                            "target_": "target node and its context token"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "Returns the amount of `id` owned by `owner`."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length."
                    },
                    "burn(uint256,uint256)": {
                        "params": {
                            "amount_": "amount to burn",
                            "fid_": "id of node"
                        }
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "params": {
                            "nodeId_": "id of context node",
                            "owner": "address of agent that will control the endpoint"
                        },
                        "returns": {
                            "endpointAddress": "address of created endpoint"
                        }
                    },
                    "getFidPath(uint256)": {
                        "params": {
                            "fid_": "target fid to trace path to from root"
                        },
                        "returns": {
                            "fids": "lineage in chronologic order"
                        }
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "params": {
                            "amt_": "how many of to price",
                            "id_": "target node by id and its context token"
                        },
                        "returns": {
                            "inParentVal": "max price of inputs at current minted inflation"
                        }
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "Returns whether `operator` is approved to manage the tokens of `owner`."
                    },
                    "isMember(address,uint256)": {
                        "params": {
                            "whereabout_": "you abouting about where exactly",
                            "whoabout_": "you care about them dont you"
                        }
                    },
                    "mint(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "fid_": "id to target for mint of kind"
                        }
                    },
                    "mintInflation(uint256)": {
                        "params": {
                            "node": "identifier of node context"
                        }
                    },
                    "mintMembership(uint256)": {
                        "params": {
                            "fid_": "node for which to mint membership"
                        }
                    },
                    "mintPath(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "target_": "id to target for mint of kind"
                        }
                    },
                    "redistribute(uint256)": {
                        "params": {
                            "nodeId_": "redistribution target group"
                        }
                    },
                    "redistributePath(uint256)": {
                        "params": {
                            "nodeId_": "target node to actualize path to and mint inflation for"
                        },
                        "returns": {
                            "distributedAmt": "total amount distributed"
                        }
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event."
                    },
                    "setControl(address)": {
                        "params": {
                            "newController": "address of new controller"
                        }
                    },
                    "spawnNode(uint256)": {
                        "params": {
                            "fid_": "context node id"
                        }
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "params": {
                            "balances_": "array of required balances for each token",
                            "fid_": "context (parent) node",
                            "inflationRate_": "rate for new Node token shares in gwei per second",
                            "meta_": "metadata string (e.g. IPFS hash) for membrane details",
                            "tokens_": "array of token addresses for membrane conditions"
                        }
                    },
                    "spawnRootNode(address)": {
                        "params": {
                            "fungible20_": "address of ERC20 token"
                        }
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas."
                    },
                    "taxPolicyPreference(address,uint256)": {
                        "params": {
                            "taxRate_": "share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "notice": "calculates and returns the value of a number of context tokens in terms of its root reserve"
                    },
                    "burn(uint256,uint256)": {
                        "notice": "burn the amount of targeted node id"
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "notice": "creates an external endpoint for an agent in node contextnode owner can be external"
                    },
                    "getFidPath(uint256)": {
                        "notice": "retrieves token path id array from root to target id"
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "notice": "calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller"
                    },
                    "isMember(address,uint256)": {
                        "notice": "checks if provided address who is member in where id"
                    },
                    "mint(uint256,uint256)": {
                        "notice": "mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve"
                    },
                    "mintInflation(uint256)": {
                        "notice": "mints the inflation of a specific context tokenincreases ratio of reserve to context denomination"
                    },
                    "mintMembership(uint256)": {
                        "notice": "mints membership to calling address if it satisfies membership conditions"
                    },
                    "mintPath(uint256,uint256)": {
                        "notice": "mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root"
                    },
                    "options(bytes32,uint256)": {
                        "notice": "stores a users option for change and node state [ wanted value, lastExpressedAt, signalStrength ]"
                    },
                    "redistribute(uint256)": {
                        "notice": "redistributes eligible acummulated inflationary flows"
                    },
                    "redistributePath(uint256)": {
                        "notice": "redistributes eligible amounts to all nodes on target path and mints inflation for target"
                    },
                    "setControl(address)": {
                        "notice": "sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function"
                    },
                    "spawnNode(uint256)": {
                        "notice": "creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context"
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "notice": "spawns Node with an enforceable membership mechanism and creates new membrane"
                    },
                    "spawnRootNode(address)": {
                        "notice": "spawns core Node for a tokenacts as port for token valuenests all token specific contexts"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "@solady/=lib/solady/src/",
                "automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
                "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
                "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/",
                "openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "optimism/=lib/optimism/",
                "prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/",
                "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
                "solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "solady/=lib/solady/src/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/",
                "solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/",
                "src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/",
                "src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/",
                "src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/",
                "src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/",
                "will/contracts/=lib/will/packages/contracts/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 150
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/WillWe.sol": "WillWe"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
                "urls": [
                    "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
                    "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
                "urls": [
                    "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
                    "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
                "urls": [
                    "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
                    "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
                "urls": [
                    "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
                    "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
                ],
                "license": "MIT"
            },
            "lib/solady/src/tokens/ERC1155.sol": {
                "keccak256": "0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a",
                "urls": [
                    "bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581",
                    "dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9"
                ],
                "license": "MIT"
            },
            "src/Fun.sol": {
                "keccak256": "0x111dc5cef03e09085fb3d0ebaf80fe1845fbfdaa0ce7878a0a5d74f2dc74966c",
                "urls": [
                    "bzz-raw://6d708b2e015f016e5311d3f3540f32270db67455c630ea5ddffaf1d3b815d38b",
                    "dweb:/ipfs/QmTc7XLmCwhurSRjx5a8xy4bLMB94VcJ4nY85gxuxdGLtw"
                ],
                "license": "UNLICENSED"
            },
            "src/Fungido.sol": {
                "keccak256": "0x8d9a0d3189fe146315d41b21c20ea9f93d0add510e4e63e5f464482496000c65",
                "urls": [
                    "bzz-raw://828cf089d505fc00730a36b4b8a1d138aad1582d3d38251b2cf4defc31a9cd3c",
                    "dweb:/ipfs/Qmdwbp2P9uXUeyu4RTLXZymJtFEJytmDPVkKSRXAtPhc6V"
                ],
                "license": "UNLICENSED"
            },
            "src/WillWe.sol": {
                "keccak256": "0x4ffbbab6ebebfe70a69db2788787560e04bfdba627e8eb856836fa0652e82fa8",
                "urls": [
                    "bzz-raw://c66c6da17b1361c43e324f68f600c0e729be382d34b1eb1ced2feabfdc9362fd",
                    "dweb:/ipfs/Qmea4cMc52ysc8kK6mDYgwcfPTJBCD9wyFdjWYworh6Pcf"
                ],
                "license": "UNLICENSED"
            },
            "src/components/PureUtils.sol": {
                "keccak256": "0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7",
                "urls": [
                    "bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee",
                    "dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC"
                ],
                "license": "MIT"
            },
            "src/interfaces/IExecution.sol": {
                "keccak256": "0x854400dfbe5ab714ceef8e38291e0be43831ee38b28090488ed6f3695bfe459d",
                "urls": [
                    "bzz-raw://b204716405919db4dc45dfea0cf6d25f4610f3d8a3231c04cef06a75eafef43e",
                    "dweb:/ipfs/QmZohsC9naWmFp6fT9VKgtCZKWDVktbiY4WKvZbhfwuWCk"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IMembrane.sol": {
                "keccak256": "0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc",
                "urls": [
                    "bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25",
                    "dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 53222,
                "contract": "src/WillWe.sol:WillWe",
                "label": "entityCount",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
            },
            {
                "astId": 53224,
                "contract": "src/WillWe.sol:WillWe",
                "label": "executionAddress",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 53226,
                "contract": "src/WillWe.sol:WillWe",
                "label": "Will",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 53229,
                "contract": "src/WillWe.sol:WillWe",
                "label": "M",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(IMembrane)57193"
            },
            {
                "astId": 53234,
                "contract": "src/WillWe.sol:WillWe",
                "label": "totalSupplyOf",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 53240,
                "contract": "src/WillWe.sol:WillWe",
                "label": "childrenOf",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 53245,
                "contract": "src/WillWe.sol:WillWe",
                "label": "parentOf",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 53252,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inflSec",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 53259,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inUseMembraneId",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
            },
            {
                "astId": 53265,
                "contract": "src/WillWe.sol:WillWe",
                "label": "members",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
            },
            {
                "astId": 53272,
                "contract": "src/WillWe.sol:WillWe",
                "label": "options",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 53277,
                "contract": "src/WillWe.sol:WillWe",
                "label": "taxRate",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 53283,
                "contract": "src/WillWe.sol:WillWe",
                "label": "userNodeSignals",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 53287,
                "contract": "src/WillWe.sol:WillWe",
                "label": "control",
                "offset": 0,
                "slot": "13",
                "type": "t_array(t_address)2_storage"
            },
            {
                "astId": 53289,
                "contract": "src/WillWe.sol:WillWe",
                "label": "impersonatingAddress",
                "offset": 0,
                "slot": "15",
                "type": "t_address"
            },
            {
                "astId": 53291,
                "contract": "src/WillWe.sol:WillWe",
                "label": "name",
                "offset": 0,
                "slot": "16",
                "type": "t_string_storage"
            },
            {
                "astId": 53293,
                "contract": "src/WillWe.sol:WillWe",
                "label": "symbol",
                "offset": 0,
                "slot": "17",
                "type": "t_string_storage"
            },
            {
                "astId": 53295,
                "contract": "src/WillWe.sol:WillWe",
                "label": "useBefore",
                "offset": 0,
                "slot": "18",
                "type": "t_bool"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
                "encoding": "inplace",
                "label": "address[2]",
                "numberOfBytes": "64",
                "base": "t_address"
            },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_array(t_uint256)2_storage": {
                "encoding": "inplace",
                "label": "uint256[2]",
                "numberOfBytes": "64",
                "base": "t_uint256"
            },
            "t_array(t_uint256)3_storage": {
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96",
                "base": "t_uint256"
            },
            "t_array(t_uint256)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32",
                "base": "t_uint256"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(IMembrane)57193": {
                "encoding": "inplace",
                "label": "contract IMembrane",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => address[])",
                "numberOfBytes": "32",
                "value": "t_array(t_address)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[2])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)2_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    },
    "ast": {
        "absolutePath": "src/WillWe.sol",
        "id": 56264,
        "exportedSymbols": {
            "Fun": [
                53198
            ],
            "WillWe": [
                56263
            ]
        },
        "nodeType": "SourceUnit",
        "src": "3372:241:64",
        "nodes": [
            {
                "id": 56245,
                "nodeType": "PragmaDirective",
                "src": "3372:23:64",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".25"
                ]
            },
            {
                "id": 56247,
                "nodeType": "ImportDirective",
                "src": "3397:30:64",
                "nodes": [],
                "absolutePath": "src/Fun.sol",
                "file": "./Fun.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 56264,
                "sourceUnit": 53199,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 56246,
                            "name": "Fun",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53198,
                            "src": "3405:3:64",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 56263,
                "nodeType": "ContractDefinition",
                "src": "3505:107:64",
                "nodes": [
                    {
                        "id": 56262,
                        "nodeType": "FunctionDefinition",
                        "src": "3534:76:64",
                        "nodes": [],
                        "body": {
                            "id": 56261,
                            "nodeType": "Block",
                            "src": "3608:2:64",
                            "nodes": [],
                            "statements": []
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 56257,
                                        "name": "Execution",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 56252,
                                        "src": "3587:9:64",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 56258,
                                        "name": "Membrane",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 56254,
                                        "src": "3598:8:64",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 56259,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 56256,
                                    "name": "Fun",
                                    "nameLocations": [
                                        "3583:3:64"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53198,
                                    "src": "3583:3:64"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3583:24:64"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 56255,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 56252,
                                    "mutability": "mutable",
                                    "name": "Execution",
                                    "nameLocation": "3554:9:64",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 56262,
                                    "src": "3546:17:64",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 56251,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3546:7:64",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 56254,
                                    "mutability": "mutable",
                                    "name": "Membrane",
                                    "nameLocation": "3573:8:64",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 56262,
                                    "src": "3565:16:64",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 56253,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3565:7:64",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3545:37:64"
                        },
                        "returnParameters": {
                            "id": 56260,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3608:0:64"
                        },
                        "scope": 56263,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 56249,
                            "name": "Fun",
                            "nameLocations": [
                                "3524:3:64"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53198,
                            "src": "3524:3:64"
                        },
                        "id": 56250,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3524:3:64"
                    }
                ],
                "canonicalName": "WillWe",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 56248,
                    "nodeType": "StructuredDocumentation",
                    "src": "3429:75:64",
                    "text": "@title WillWe\n @author parseb\n @notice Experimental. Do not use."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    56263,
                    53198,
                    55874,
                    56558,
                    46933
                ],
                "name": "WillWe",
                "nameLocation": "3514:6:64",
                "scope": 56264,
                "usedErrors": [
                    46106,
                    46109,
                    46112,
                    46115,
                    46118,
                    46121,
                    51559,
                    51561,
                    51563,
                    51565,
                    51567,
                    51569,
                    51571,
                    51573,
                    51575,
                    51577,
                    51579,
                    53344,
                    53346,
                    53348,
                    53350,
                    53352,
                    53354,
                    53356,
                    53358,
                    53360,
                    53362,
                    53364,
                    53366,
                    53368,
                    53370,
                    53372,
                    53374,
                    53376,
                    53378,
                    53380,
                    53382,
                    53384,
                    53386,
                    53388,
                    53390
                ],
                "usedEvents": [
                    46134,
                    46149,
                    46158,
                    46165,
                    51587,
                    51595,
                    51605,
                    51615,
                    51626,
                    53394,
                    53398,
                    53406,
                    53412,
                    53420,
                    53428,
                    53434,
                    53442,
                    53450,
                    53456
                ]
            }
        ],
        "license": "UNLICENSED"
    },
    "id": 64
}