{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "Execution",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "Membrane",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "Will",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allMembersOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "asRootValuation",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "owners",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "balances",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "topVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "calculateUserTargetedPreferenceAmount",
            "inputs": [
                {
                    "name": "childId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "control",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "createEndpointForOwner",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "endpointAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "executionAddress",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAllNodesForRoot",
            "inputs": [
                {
                    "name": "rootAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "userIfAny",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChangePrevalence",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signal_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getChildrenOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFidPath",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "fids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMembraneOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodeData",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "nodeData",
                    "type": "tuple",
                    "internalType": "struct NodeState",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getNodes",
            "inputs": [
                {
                    "name": "nodeIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "nodes",
                    "type": "tuple[]",
                    "internalType": "struct NodeState[]",
                    "components": [
                        {
                            "name": "basicInfo",
                            "type": "string[12]",
                            "internalType": "string[12]"
                        },
                        {
                            "name": "membraneMeta",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "membersOfNode",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "childrenNodes",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "movementEndpoints",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "rootPath",
                            "type": "string[]",
                            "internalType": "string[]"
                        },
                        {
                            "name": "signals",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getParentOf",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUserNodeSignals",
            "inputs": [
                {
                    "name": "user_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "node_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inParentDenomination",
            "inputs": [
                {
                    "name": "amt_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "inParentVal",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "inflationOf",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initSelfControl",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isMember",
            "inputs": [
                {
                    "name": "whoabout_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "whereabout_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "localizeEndpoint",
            "inputs": [
                {
                    "name": "endpoint_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "endpointParent_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "owner_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipEnforce",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "s",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "membershipID",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintInflation",
            "inputs": [
                {
                    "name": "node",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintMembership",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mintPath",
            "inputs": [
                {
                    "name": "target_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "options",
            "inputs": [
                {
                    "name": "NodeXUserXValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "valueAtTime",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redistribute",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "redistributePath",
            "inputs": [
                {
                    "name": "nodeId_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "distributedAmt",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "resignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "originator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sendSignal",
            "inputs": [
                {
                    "name": "targetNode_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setControl",
            "inputs": [
                {
                    "name": "newController",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNode",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnNodeWithMembrane",
            "inputs": [
                {
                    "name": "fid_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokens_",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "balances_",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "meta_",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "inflationRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "newID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "spawnRootNode",
            "inputs": [
                {
                    "name": "fungible20_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "fID",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "taxPolicyPreference",
            "inputs": [
                {
                    "name": "rootToken_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "taxRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "toAddress",
            "inputs": [
                {
                    "name": "x",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "toID",
            "inputs": [
                {
                    "name": "x",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "id_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isApproved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Burned",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CreatedEndpoint",
            "inputs": [
                {
                    "name": "endpoint",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationRateChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "oldInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newInflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InflationSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "inflationRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "strength",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MemberRemoved",
            "inputs": [
                {
                    "name": "userAddress",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembershipMinted",
            "inputs": [
                {
                    "name": "who",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneChanged",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "previousMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newMembrane",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MembraneSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "membraneId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "strength",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Minted",
            "inputs": [
                {
                    "name": "fromAddressOrNode",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewNode",
            "inputs": [
                {
                    "name": "newId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "parentId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "creator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "NewRootNode",
            "inputs": [
                {
                    "name": "rootNodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Resignaled",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "origin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SelfControlAtAddress",
            "inputs": [
                {
                    "name": "AgencyLocus",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SharesGenerated",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "UserNodeSignal",
            "inputs": [
                {
                    "name": "nodeId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signals",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "strenght",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AccountBalanceOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AlreadyMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ArrayLengthsMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BadLen",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BaseOrNonFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BurnE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CannotSkip",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Disabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EOA",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Endpoint",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExecutionOnly",
            "inputs": []
        },
        {
            "type": "error",
            "name": "IncompleteSign",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientAmt",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientBalance",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembershipOp",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MembraneNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MintE20TransferFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "No",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoControl",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoSoup",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoTimeDelta",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeAlreadyExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NodeNotFound",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Noise",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NoiseNotVoice",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotNodeMember",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotOwnerNorApproved",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Overreach",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ResignalMismatch",
            "inputs": []
        },
        {
            "type": "error",
            "name": "RootExists",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SignalOverflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TargetIsRoot",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToNonERC1155ReceiverImplementer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TransferToZeroAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unautorised",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Unqualified",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnregisteredFungible",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsoundMembership",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnsupportedTransfer",
            "inputs": []
        },
        {
            "type": "error",
            "name": "isControled",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "3505:107:68:-:0;;;3534:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2289:19:66;;;:7;:19;;;;2311:5;2289:19;:27;2326:16;:32;;-1:-1:-1;;;;;;2326:32:66;-1:-1:-1;;;;;2326:32:66;;;;;;;;2289:19;2375:37;;-1:-1:-1;;;2375:37:66;;;;2326:32;;3598:8:68;;2326:32:66;;3598:8:68;;2326:32:66;;2375:35;;:37;;;;;;;;;;2326:32;2375:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2368:4;:44;;-1:-1:-1;;;;;;2368:44:66;;;-1:-1:-1;;;;;2368:44:66;;;;;;;2422:1;:24;;;;;;;;;;;;;;2457:19;;;;;;;;;;;;-1:-1:-1;;;2457:19:66;;;;:4;;:19;;:4;:19;:::i;:::-;-1:-1:-1;2486:15:66;;;;;;;;;;;;-1:-1:-1;;;2486:15:66;;;;:6;;:15;;:6;:15;:::i;:::-;-1:-1:-1;;2512:9:66;:16;;2524:4;-1:-1:-1;;2512:16:66;;;;;;;;404:26:65;;-1:-1:-1;;;;;;404:26:65::1;-1:-1:-1::0;;;;;404:26:65;::::1;::::0;;::::1;::::0;;;440:44:::1;::::0;-1:-1:-1;;;440:44:65;;478:4:::1;440:44;::::0;::::1;3540:51:92::0;404:26:65;;-1:-1:-1;440:29:65::1;::::0;3513:18:92;;440:44:65::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;316:175:::0;;3534:76:68;;3505:107;;14:177:92;93:13;;-1:-1:-1;;;;;135:31:92;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:208::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;656:40;686:9;656:40;:::i;:::-;646:50;494:208;-1:-1:-1;;;494:208:92:o;707:127::-;768:10;763:3;759:20;756:1;749:31;799:4;796:1;789:15;823:4;820:1;813:15;839:380;918:1;914:12;;;;961;;;982:61;;1036:4;1028:6;1024:17;1014:27;;982:61;1089:2;1081:6;1078:14;1058:18;1055:38;1052:161;;1135:10;1130:3;1126:20;1123:1;1116:31;1170:4;1167:1;1160:15;1198:4;1195:1;1188:15;1052:161;;839:380;;;:::o;1350:518::-;1452:2;1447:3;1444:11;1441:421;;;1488:5;1485:1;1478:16;1532:4;1529:1;1519:18;1602:2;1590:10;1586:19;1583:1;1579:27;1573:4;1569:38;1638:4;1626:10;1623:20;1620:47;;;-1:-1:-1;1661:4:92;1620:47;1716:2;1711:3;1707:12;1704:1;1700:20;1694:4;1690:31;1680:41;;1771:81;1789:2;1782:5;1779:13;1771:81;;;1848:1;1834:16;;1815:1;1804:13;1771:81;;;1775:3;;1441:421;1350:518;;;:::o;2044:1345::-;2164:10;;-1:-1:-1;;;;;2186:30:92;;2183:56;;;2219:18;;:::i;:::-;2248:97;2338:6;2298:38;2330:4;2324:11;2298:38;:::i;:::-;2292:4;2248:97;:::i;:::-;2400:4;;2457:2;2446:14;;2474:1;2469:663;;;;3176:1;3193:6;3190:89;;;-1:-1:-1;3245:19:92;;;3239:26;3190:89;-1:-1:-1;;2001:1:92;1997:11;;;1993:24;1989:29;1979:40;2025:1;2021:11;;;1976:57;3292:81;;2439:944;;2469:663;1297:1;1290:14;;;1334:4;1321:18;;-1:-1:-1;;2505:20:92;;;2623:236;2637:7;2634:1;2631:14;2623:236;;;2726:19;;;2720:26;2705:42;;2818:27;;;;2786:1;2774:14;;;;2653:19;;2623:236;;;2627:3;2887:6;2878:7;2875:19;2872:201;;;2948:19;;;2942:26;-1:-1:-1;;3031:1:92;3027:14;;;3043:3;3023:24;3019:37;3015:42;3000:58;2985:74;;2872:201;;;3119:1;3110:6;3107:1;3103:14;3099:22;3093:4;3086:36;2439:944;;;;;2044:1345;;:::o;3394:203::-;3505:107:68;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106102fe575f3560e01c8063765063e511610195578063a6bfbc20116100e4578063e985e9c51161009e578063f242432a11610079578063f242432a1461075c578063f6355a561461076f578063f77914c314610782578063f87cc6b314610795575f80fd5b8063e985e9c5146106fe578063eef2e75714610729578063f039a73314610749575f80fd5b8063a6bfbc2014610673578063af1b55b014610693578063b390c0ab146106a6578063bd85b039146106b9578063bfad25e5146106d8578063e0051aa9146106eb575f80fd5b806385752d031161014f578063a07622531161012a578063a07622531461061a578063a0ce552d1461062d578063a22cb46514610640578063a5541c8414610653575f80fd5b806385752d03146105ec57806395d89b41146105ff57806399f4568914610607575f80fd5b8063765063e51461057a57806378adc7901461058d578063791ddaf9146105a05780637d11e682146105b35780637e44bffe146105c65780637f33d800146105d9575f80fd5b80631f017841116102515780634e1273f41161020b5780635b4a26ed116101e65780635b4a26ed1461053957806362593f601461054c57806367c394fb1461055f57806368dc274714610572575f80fd5b80634e1273f414610500578063535e9891146105135780635ac8260c14610526575f80fd5b80631f017841146104765780631fae703b1461048957806320f944271461049c57806328ca8e26146104af5780632eb2c2d6146104c257806345bbbf84146104d5575f80fd5b80630ffd3910116102bc578063150d503d11610297578063150d503d1461041d5780631a61eda61461043d5780631b2ef1ca146104505780631e9b388d14610463575f80fd5b80630ffd3910146103d8578063114b6e49146103eb57806313e75206146103fe575f80fd5b8062fdd58e1461030257806301ffc9a71461034157806306fdde03146103815780630d78d0c1146103965780630e89341c146103ab5780630f336348146103be575b5f80fd5b61032e610310366004614b4d565b679a31110384e0b0c96020526014919091525f908152604090205490565b6040519081526020015b60405180910390f35b61037161034f366004614b77565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b6040519015158152602001610338565b6103896107a8565b6040516103389190614bcc565b6103a96103a4366004614bde565b610834565b005b6103896103b9366004614bde565b6109aa565b61032e6103cc366004614bf5565b6001600160a01b031690565b61032e6103e6366004614c10565b6109db565b61032e6103f9366004614dbb565b610abb565b61032e61040c366004614bde565b5f9081526006602052604090205490565b61043061042b366004614b4d565b610c17565b6040516103389190614ee5565b61032e61044b366004614ef7565b610ca8565b6103a961045e366004614ef7565b610d05565b61032e610471366004614ef7565b610d75565b6103a9610484366004614b4d565b610df0565b6103a9610497366004614f17565b610e67565b61032e6104aa366004614ef7565b61111c565b6103a96104bd366004614f45565b61113e565b6103a96104d0366004615008565b611229565b6104e86104e3366004614f17565b6114e2565b6040516001600160a01b039091168152602001610338565b61043061050e3660046150be565b6115cd565b6002546104e8906001600160a01b031681565b6103a9610534366004614bf5565b61163a565b6103a9610547366004615124565b6116c6565b61037161055a366004614b4d565b611a97565b61032e61056d366004614bde565b611bdc565b6104e8611caa565b61032e610588366004614bde565b611e7c565b6001546104e8906001600160a01b031681565b6103a96105ae366004614ef7565b611e93565b6104e86105c1366004614bde565b611eeb565b61032e6105d4366004614bde565b611f0a565b61032e6105e7366004614ef7565b611f1d565b6103716105fa366004614b4d565b611fa4565b610389611fc1565b610430610615366004614bde565b611fce565b61032e610628366004614bde565b61202d565b61032e61063b366004614bde565b612085565b6103a961064e366004615174565b6121de565b6106666106613660046151a0565b6121f7565b604051610338919061535d565b610686610681366004614f17565b6122a6565b60405161033891906153bf565b61032e6106a1366004614bf5565b612378565b61032e6106b4366004614ef7565b612424565b61032e6106c7366004614bde565b5f9081526004602052604090205490565b61032e6106e6366004614bde565b61273a565b6104e86106f9366004614bde565b612877565b61037161070c3660046153d1565b679a31110384e0b0c96020526014919091525f526034600c205490565b61073c610737366004614bde565b612893565b60405161033891906153fd565b6103a9610757366004614ef7565b6128fb565b6103a961076a36600461540f565b6129e6565b61043061077d366004614bde565b612bae565b61032e610790366004614bde565b612cba565b6106666107a33660046153d1565b612ce2565b601080546107b590615485565b80601f01602080910402602001604051908101604052809291908181526020018280546107e190615485565b801561082c5780601f106108035761010080835404028352916020019161082c565b820191905f5260205f20905b81548152906001019060200180831161080f57829003601f168201915b505050505081565b5f81815260066020526040812054900361086157604051634825e09360e01b815260040160405180910390fd5b5f8181526006602052604090205481900361088f5760405163bd23392760e01b815260040160405180910390fd5b5f818152600460205260409020546001016108bd57604051630cf32f7560e21b815260040160405180910390fd5b6108ce6108c8612dd1565b82611fa4565b156108ec576040516340803a5f60e11b815260040160405180910390fd5b6003546001600160a01b03166389160e0e610905612dd1565b61090e84611f0a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015610955573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097991906154b7565b6109965760405163b2cab42960e01b815260040160405180910390fd5b6109a76109a1612dd1565b82612e10565b50565b60606109b582612ead565b6040516020016109c591906154d2565b6040516020818303038152906040529050919050565b5f848152600660205260408120548414610a0857604051635f12529560e01b815260040160405180910390fd5b5f610a41610a1586612877565b5f87815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b679a31110384e0b0c9602090815260148590525f878152604080822054600790935290205491925090633b9aca008211610a80575f9350505050610ab3565b5f610a8d84612710615539565b82610a988986615539565b610aa29190615539565b610aac9190615564565b9450505050505b949350505050565b60035460405163333cabc560e01b81525f9182916001600160a01b039091169063333cabc590610af390899089908990600401615577565b6020604051808303815f875af1158015610b0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3391906155b9565b9050610b3e8761273a565b5f8181526008602052604090208281554260019091015591508215610b7057610b6b83633b9aca00615539565b610b77565b64e8d4a510005b5f8381526007602052604081200155604080515f81526020810183905283917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a997611910160405180910390a25f82815260076020526040812083917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf918101546040805192835260208301919091520160405180910390a25095945050505050565b6060600c5f8484604051602001610c2f9291906155d0565b6040516020818303038152906040528051906020012081526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610c9a57602002820191905f5260205f20905b815481526020019060010190808311610c86575b505050505090505b92915050565b5f600a5f8484604051602001610cc8929190918252602082015260400190565b6040516020818303038152906040528051906020012081526020019081526020015f205f60038110610cfc57610cfc615511565b01549392505050565b5f828152600660205260408120549003610d3257604051635f12529560e01b815260040160405180910390fd5b610d71610d3d612dd1565b8383604051602001610d5d906766756e6769626c6560c01b815260080190565b604051602081830303815290604052612f3c565b5050565b5f8181526004602052604081205415610de7575f82815260046020526040902054610dce610da284612877565b5f85815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b610dd89085615539565b610de29190615564565b610de9565b5f5b9392505050565b600d546001600160a01b0316610e04612dd1565b6001600160a01b031614610e2b576040516385ea10fd60e01b815260040160405180910390fd5b80600103610e4c5760405163023ad70560e31b815260040160405180910390fd5b6001600160a01b039091165f908152600b6020526040902055565b5f610e728284610c17565b90506002815111610e8257505050565b5f356001600160e01b03191663b390c0ab60e01b1480610eb3575063f039a73360e01b6001600160e01b03195f3516145b156110a1575f83815260056020908152604080832080548251818502810185019093528083529192909190830182828015610f0b57602002820191905f5260205f20905b815481526020019060010190808311610ef7575b50939450600293505050505b825181108015610f3157508151610f2f6002836155ed565b105b1561109e575f848684610f456002866155ed565b81518110610f5557610f55615511565b6020026020010151604051602001610f8f9392919060609390931b6001600160601b03191683526014830191909152603482015260540190565b6040516020818303038152906040528051906020012090505f83600284610fb691906155ed565b81518110610fc657610fc6615511565b602002602001015187604051602001610fe9929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f858152600a90935291206002015490915015611089575f818152600a60205260408082205484835291206002015410611048575f818152600a6020526040812055611077565b5f828152600a6020526040808220600201548383529082208054919290916110719084906155ed565b90915550505b5f828152600a60205260408120600201555b5050808061109690615600565b915050610f17565b50505b600f80546001600160a01b0319166001600160a01b0384161790556110c683826116c6565b600f80546001600160a01b03191690556040516001600160a01b0383168152839033907f081dd7a021608cb1e85f93c3e497da26967bb26442035ffc020ba466aed4049d906020015b60405180910390a3505050565b600a602052815f5260405f208160038110611135575f80fd5b01549150829050565b6001546001600160a01b0316331461116957604051630fc714ab60e01b815260040160405180910390fd5b6111738183611fa4565b15611211576001600160a01b038181165f818152600960208181526040832080546001810182559084529083200180546001600160a01b031916948816949094179093559084906111c49190615618565b815260208082019290925260409081015f90812080546001810182559082528382200180546001600160a01b0319166001600160a01b0388169081179091558152600490925290205f1990555b6112246001600160a01b03841683612fb0565b505050565b60125460ff16156112d4576112d488888888808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284375f9201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284375f920191909152506130b892505050565b8285146112e857633b800a465f526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c9850886113265763ea553b345f526004601cfd5b89331461134757335f526034600c205461134757634b6e7f185f526004601cfd5b8660051b5b80156113b4576020810390508087013583602052818a01355f5260405f208054808311156113815763f4d678b85f526004601cfd5b8290039055602083905260405f208054808301818110156113a9576301336cea5f526004601cfd5b9091555061134c9050565b505050604051604081528560051b602001604082018160208a03823781604001602084015281602088038383013750888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb60408586010186a450506114185f90565b1561142d5761142d8888888888888888613377565b863b156114d857865f5260405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a001806080850152826020890384840137820160a084015260208401601f19860183800183013750808101830160c401905060208282601c85015f80515af16114b9573d156114b9573d5f833e3d82fd5b50805163bc197c8160e01b146114d657639c05499b5f526004601cfd5b505b5050505050505050565b5f6114ed8284611fa4565b61150a576040516359c5ba6f60e11b815260040160405180910390fd5b6001546040516311eb232d60e21b8152336004820152602481018590526001600160a01b038481166044830152909116906347ac8cb4906064016020604051808303815f875af1158015611560573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611584919061562b565b905082826001600160a01b0316826001600160a01b03167fcc812fbe8760ac7f5d76dc25596b5575304a089699833975adb3e253e8c627bd60405160405180910390a492915050565b60608382146115e357633b800a465f526004601cfd5b6040519050818152602081018260051b8181016040525b801561163057602081039050808701358060601b679a31110384e0b0c91760205250808501355f5260405f2054818301526115fa565b5050949350505050565b600d5f01546001600160a01b03163314611667576040516330e1d31f60e21b815260040160405180910390fd5b600e546001600160a01b038281169116036116a45750600e8054600d80546001600160a01b03199081166001600160a01b03841617909155169055565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6116d86116d2612dd1565b84611fa4565b90505f6116e66103cc612dd1565b5f8581526006602052604090205490915084900361171757604051638c9b017f60e01b815260040160405180910390fd5b8161173557604051639db14b6d60e01b815260040160405180910390fd5b5f61175c611741612dd1565b679a31110384e0b0c96020526014525f868152604090205490565b5f8681526004602052604090205490915061177a9061271090615564565b81101561179a5760405163ccf7064560e01b815260040160405180910390fd5b6117a385611bdc565b505f858152600560209081526040808320805482518185028101850190935280835291929091908301828280156117f757602002820191905f5260205f20905b8154815260200190600101908083116117e3575b505050505090505f611807612dd1565b876040516020016118199291906155d0565b6040516020818303038152906040528051906020012090505f805b875181101561199e575f88828151811061185057611850615511565b602002602001015190505f8a8883604051602001611881939291909283526020830191909152604082015260600190565b6040516020818303038152906040528051906020012090506001831161197757815f036118af575050611996565b825f0361190f576118be612dd1565b6001600160a01b03168b7f943160e80d4390312ba6a6b9454170cca140ef12a38700ecba2c4493c5aeeacb848a604051611902929190918252602082015260400190565b60405180910390a3611964565b611917612dd1565b6001600160a01b03168b7fb3e6e74723822f1505c88c48c07f18300671b4b94ad78cbbb8251f079b5f97bd848a60405161195b929190918252602082015260400190565b60405180910390a35b6119728b83858a858a61337c565b611993565b6119868b8984868e518b61343b565b6119908285615618565b93505b50505b600101611834565b60038851101580156119af57508115155b80156119bd57508161271014155b156119db57604051630442bea560e31b815260040160405180910390fd5b6119e486612877565b6001600160a01b0316897ff20290976fc9d3610e92cfe332f5574e0b98bc2ce4ea65d33fcbdf8488fddcf28a88604051611a1f929190615646565b60405180910390a3600f546001600160a01b03166114d65787600c5f611a43612dd1565b8c604051602001611a559291906155d0565b6040516020818303038152906040528051906020012081526020019081526020015f209080519060200190611a8b929190614a1b565b50505050505050505050565b5f611aa28383611fa4565b611abf5760405163148fe22160e11b815260040160405180910390fd5b611ac7612dd1565b6001600160a01b0316836001600160a01b031603611afb57611af383611aec84612cba565b60016135af565b506001610ca2565b6003546001600160a01b03166389160e0e84611b1685611f0a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015611b5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b8191906154b7565b159050611b8d82612cba565b91508015611ba157611ba1838360016135af565b60405182906001600160a01b038516907f3ac963493df564de734d98633f1145d21512e282ba4c02d3c1011119bf7f2862905f90a392915050565b5f81815260066020526040812054829003611bf857505f919050565b5f8281526007602052604090208054600290910154611c1790426155ed565b611c219190615539565b9050805f03611c3157505f919050565b5f8281526007602052604090204290600201556040516834b7333630ba34b7b760b91b6020820152611c6b90839081908490602901610d5d565b817f695f517929cb0a761ce9f28118b11060d9646bcf6668b6fc3dfb89aaddce26e482604051611c9d91815260200190565b60405180910390a2919050565b600d545f906001600160a01b031615611cd65760405163bdc7d58160e01b815260040160405180910390fd5b60015460025460405163bfad25e560e01b81526001600160a01b03918216600482015291169063bd8f46f990309063bfad25e5906024016020604051808303815f875af1158015611d29573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d4d91906155b9565b6040518263ffffffff1660e01b8152600401611d6b91815260200190565b6020604051808303815f875af1158015611d87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dab919061562b565b600d5f0180546001600160a01b0319166001600160a01b03928316179055600354604080516301abf02960e51b81529051919092169163357e0520916004808301925f92919082900301818387803b158015611e05575f80fd5b505af1158015611e17573d5f803e3d5ffd5b505050507ff890fc28c3f9900b0f626f2dbd8913e1cb84a7d771c3ca70f19ac3ed52cfde12600d5f60028110611e4f57611e4f615511565b01546040516001600160a01b03909116815260200160405180910390a150600d546001600160a01b031690565b5f818152600760205260408120815b015492915050565b5f611e9d83612bae565b90505f5b8151811015611ed557611ecd828281518110611ebf57611ebf615511565b602002602001015184610d05565b600101611ea1565b8015611ee557611ee58484610d05565b50505050565b600d8160028110611efa575f80fd5b01546001600160a01b0316905081565b5f81815260086020526040812081611e8b565b5f80611f2884612bae565b90505f805b8251811015611f9a578060018451611f4591906155ed565b611f4f91906155ed565b9150828281518110611f6357611f63615511565b602002602001015195508560065f8881526020019081526020015f20540315611f9a57611f908587610d75565b9450600101611f2d565b5092949350505050565b5f6001611fb48461031085612cba565b10610ca257506001610ca2565b601180546107b590615485565b5f8181526005602090815260409182902080548351818402810184019094528084526060939283018282801561202157602002820191905f5260205f20905b81548152602001906001019080831161200d575b50505050509050919050565b5f8061203883612bae565b9050600191505b80518210156120765761206a81838151811061205d5761205d615511565b6020026020010151612085565b5081600101915061203f565b61207f83611bdc565b50610de9835b5f818152600660205260408120548082036120b357604051636d9430a960e11b815260040160405180910390fd5b5f818152600660205260409020548190036120d057505f92915050565b6120d981611bdc565b50604080516020808201869052818301849052825180830384018152606090920190925280519101205f61212a61210f84612877565b679a31110384e0b0c96020526014525f848152604090205490565b5f838152600a602052604090209091506001015461214890426155ed565b5f838152600a60205260409020546121609190615539565b93508084111561216e578093505b5f828152600a6020526040902042906001015583156121d6576121d661219384612877565b61219c87612877565b85876040516020016121c2906d3932b234b9ba3934b13aba34b7b760911b8152600e0190565b6040516020818303038152906040526135e8565b505050919050565b604051633ac4266d60e11b815260040160405180910390fd5b606081516001600160401b0381111561221257612212614c4e565b60405190808252806020026020018201604052801561224b57816020015b612238614a60565b8152602001906001900390816122305790505b5090505f5b82518110156122a05761227b83828151811061226e5761226e615511565b60200260200101516135f6565b82828151811061228d5761228d615511565b6020908102919091010152600101612250565b50919050565b6122ae614a60565b6122b7836135f6565b90506001600160a01b03821615610ca257679a31110384e0b0c960205260148290525f83815260409020546122f090612ead565b612ead565b815161012001525f61230b846001600160a01b038516615618565b5f8181526009602052604090205490915015612362575f818152600960205260408120805461235a929061234157612341615511565b5f918252602090912001546001600160a01b031661391f565b825161014001525b61236c8385610c17565b60c08301525092915050565b5f816001600160a01b03163b5f036123a357604051637dc5186f60e01b815260040160405180910390fd5b506001600160a01b0381165f81815260066020526040902054156123da57604051633293a2cf60e01b815260040160405180910390fd5b6123e48182612fb0565b5f8081546123f190615600565b9091555060405181907f4bc7a1fd073ebdf928da09f58ed29b779ed99b26bddee327e87d0be21af8594f905f90a2919050565b5f8281526006602052604081205481036124515760405163bd23392760e01b815260040160405180910390fd5b5f8381526006602052604090205483146124745761246f8284610d75565b612476565b815b905061248a612483612dd1565b84846135af565b5f838152600660205260409020548314612543573063f242432a6124ad85612877565b6124b5612dd1565b60065f8881526020019081526020015f2054856040516020016124e29063313ab93760e11b815260040190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401612511959493929190615667565b5f604051808303815f87803b158015612528575f80fd5b505af115801561253a573d5f803e3d5ffd5b50505050610ca2565b5f600b5f61255086612877565b6001600160a01b0316815260208101919091526040015f20541561259f57600b5f61257a86612877565b6001600160a01b03166001600160a01b031681526020019081526020015f20546125ca565b5f8052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76545b90506125d68184615564565b90505f6125e382856155ed565b9050808411612605576040516337b936ed60e11b815260040160405180910390fd5b61260e85612877565b60025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af115801561265d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061268191906154b7565b8015612715575061269185612877565b6001600160a01b031663a9059cbb6126a7612dd1565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156126f1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061271591906154b7565b61273257604051632ebc317760e21b815260040160405180910390fd5b505092915050565b5f81815260066020526040812054810361275c5761275a6106a183612877565b505b61276d612767612dd1565b83611fa4565b15801561278757505f828152600660205260409020548214155b156127a55760405163148fe22160e11b815260040160405180910390fd5b5f828152600460205260409020546001016127d357604051630cf32f7560e21b815260040160405180910390fd5b5f8081546127e090615600565b909155506127f2633b9aca00446156ab565b5f546127fe42856155ed565b61280891906155ed565b61281291906155ed565b905061282861282082612877565b306001613935565b6128328183612fb0565b333014612844576128446109a1612dd1565b6040513390839083907f907e845f974b1e16735c498eca2c72acd8c3d61c86675d4cab952054450ee358905f90a4919050565b5f6001600160a01b03821161288c5781610ca2565b5f92915050565b5f8181526009602090815260409182902080548351818402810184019094528084526060939283018282801561202157602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116128d25750505050509050919050565b5f8281526006602052604081205490036129285760405163bd23392760e01b815260040160405180910390fd5b5f61293283612bae565b90505f805b82518110156129d457806001845161294f91906155ed565b61295991906155ed565b915083612982612967612dd1565b679a31110384e0b0c96020526014525f878152604090205490565b10156129a157604051632f72e11160e21b815260040160405180910390fd5b6129ab8585612424565b93508282815181106129bf576129bf615511565b60200260200101519450806001019050612937565b506129df8484612424565b5050505050565b60125460ff1615612a6357612a638686612a13876040805180820190915260018152602081019190915290565b60408051808201909152600181526020810188905286868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506130b892505050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c965086612aa15763ea553b345f526004601cfd5b873314612ac257335f526034600c2054612ac257634b6e7f185f526004601cfd5b855f5260405f209150815480861115612ae25763f4d678b85f526004601cfd5b8581038355508060205260405f209150815485810181811015612b0c576301336cea5f526004601cfd5b909255505060208390528486335f805160206158e483398151915260405fa4843b15612ba65760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c84015f8a5af1612b88573d15612b88573d5f823e3d81fd5b805163f23a6e6160e01b14612ba457639c05499b5f526004601cfd5b505b505050505050565b5f818152600660205260409020546060906001905b612bce846001615618565b8110612c08575f818152600660205260409020548114612c0857612bf182615600565b5f9182526006602052604090912054909150612bc3565b816001600160401b03811115612c2057612c20614c4e565b604051908082528060200260200182016040528015612c49578160200160208202803683370190505b5092505f90505b81811015612cb3575f84815260066020526040902054836001612c7384866155ed565b612c7d91906155ed565b81518110612c8d57612c8d615511565b6020908102919091018101919091525f9485526006905260409093205492600101612c50565b5050919050565b5f6804e1003b28d9280000821115612cde57610ca2678ac7230489e80000836156ab565b5090565b6001600160a01b0382165f81815260096020526040902054606091906001600160401b03811115612d1557612d15614c4e565b604051908082528060200260200182016040528015612d4e57816020015b612d3b614a60565b815260200190600190039081612d335790505b5091505f5b5f82815260096020526040902054811015612732575f8281526009602052604090208054612dac91612da69184908110612d8f57612d8f615511565b5f918252602090912001546001600160a01b031690565b856122a6565b838281518110612dbe57612dbe615511565b6020908102919091010152600101612d53565b600f545f906001600160a01b031615612df45750600f546001600160a01b031690565b6002546001600160a01b03163303612e0b57503090565b503390565b5f8181526009602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b038416179055612e7482612e5383612cba565b6040516906d656d626572736869760b41b6020820152600190602a01610d5d565b60405181906001600160a01b038416907fbab4562ae868d1765ed8452e98bba908a974596c4babc3ada5e90e05e3f433fb905f90a35050565b60605f612eb98361398d565b60010190505f816001600160401b03811115612ed757612ed7614c4e565b6040519080825280601f01601f191660200182016040528015612f01576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612f0b57509392505050565b612f4884848484613a64565b5f8381526004602052604081208054849290612f65908490615618565b909155505060405182815283906001600160a01b038616907f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff9060200160405180910390a350505050565b5f8281526006602052604090205415612fdc5760405163731918fb60e11b815260040160405180910390fd5b5f828152600660205260409020819055818114610d71575f818152600560209081526040822080546001810182559083529082200183905560099061302083612bae565b5f8151811061303157613031615511565b602002602001015181526020019081526020015f2061304f83612877565b8154600180820184555f938452602080852090920180546001600160a01b0319166001600160a01b0394909416939093179092558483526004905260409091205401613099575050565b505f90815260076020526040902064e8d4a51000815542600290910155565b6304ed360560e51b5f356001600160e01b03191601156129df575f5b8084511115612ba6575f8482815181106130f0576130f0615511565b602002602001015190505f84838151811061310d5761310d615511565b602002602001015190505f6001600160a01b0316886001600160a01b03161415801561314157506001600160a01b03871615155b801561315857505f82815260066020526040902054155b156131765760405163ce2d28e160e01b815260040160405180910390fd5b678ac7230489e80000821015613235575f356001600160e01b031916630d78d0c160e01b1415806131b957505f356001600160e01b031916630312c9fb60e51b14155b806131d657505f356001600160e01b031916630af1b55b60e41b14155b806131f357505f356001600160e01b03191663114b6e4960e01b14155b8061321057505f356001600160e01b03191663bfad25e560e01b14155b61322d57604051630dbd110f60e21b815260040160405180910390fd5b5050506129df565b5f356001600160e01b031916630d9778e560e11b148061326657505f356001600160e01b03191663791ddaf960e01b145b1561336d575f828152600660205260409020548290036133225761328982612877565b6040516323b872dd60e01b81526001600160a01b0389811660048301523060248301526044820184905291909116906323b872dd906064016020604051808303815f875af11580156132dd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061330191906154b7565b61331d5760405162916a1960e51b815260040160405180910390fd5b61336d565b6012805460ff1916905561335f613337612dd1565b61334084612877565b5f8581526006602052604081205490859061076a9060019036816156be565b6012805460ff191660011790555b50506001016130d4565b6114d8565b8415612ba657604080516020808201899052818301889052825180830384018152606090920183528151918101919091205f858152600a9092529190206001015442036133dc5760405163d445b7c360e01b815260040160405180910390fd5b845f036133f7576133f28784838988878b613b49565b613406565b6134068784838988878b613d2b565b50505f908152600a60209081526040808320426001918201556005835290832080549182018155835291200192909255505050565b6134466002836155ed565b81511461346657604051631b9103a360e11b815260040160405180910390fd5b5f8587836134756002886155ed565b8151811061348557613485615511565b60200260200101516040516020016134bf9392919060609390931b6001600160601b03191683526014830191909152603482015260540190565b60408051808303601f1901815291815281516020928301205f818152600a909352912054909150612710861180156134f5575080155b15613501575050612ba6565b6127108611156135245760405163bb82191f60e01b815260040160405180910390fd5b858114158061353d5750600f546001600160a01b031615155b156114d857858114613561575f828152600a60205260409020868155426001909101555b613580836135706002886155ed565b8151811061205d5761205d615511565b506114d8836135906002886155ed565b815181106135a0576135a0615511565b60200260200101518984613ec0565b6135ba83838361402b565b6001600160a01b0383165f908152600460205260409020546001116135de57505050565b6112248284610e67565b6129df5f86868686866140d8565b6135fe614a60565b61360782612ead565b8151525f828152600760205260408120613623915b0154612ead565b8151602001526136386122eb610da284612877565b81516040015261364d6122eb61210f84612877565b8151606001526136666122eb836105e761174182612877565b81516080015261367f6122eb836105e7610a1582612877565b815160a001525f82815260086020526040812061369b9161361c565b815160c001525f828152600660209081526040808320548151808401879052808301829052825180820384018152606090910183528051908401208452600a909252909120546136ee916122eb91611f1d565b815160e001525f82815260076020526040902061370c90600261361c565b815161010001525f8281526004602052604090205461372a90612ead565b815161016001526003545f8381526008602052604090819020549051631ba2a35b60e31b815260048101919091526001600160a01b039091169063dd151ad8906024015f60405180830381865afa158015613787573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526137ae919081019061578e565b6040908101516020808401919091525f848152600982528290208054835181840281018401909452808452909183018282801561381257602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116137f4575b505050505060408201526001546009905f906138389085906001600160a01b0316615618565b81526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561389757602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311613879575b505050505060808201525f8281526005602090815260409182902080548351818402810184019094528084526138ff93928301828280156138f557602002820191905f5260205f20905b8154815260200190600101908083116138e1575b505050505061420e565b606082015261391561391083612bae565b61420e565b60a0820152919050565b6060610ca26001600160a01b03831660146142b9565b8015159050679a31110384e0b0c960205282601452815f52806034600c2055805f525f1960601c8281168482167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106139cb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106139f7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613a1557662386f26fc10000830492506010015b6305f5e1008310613a2d576305f5e100830492506008015b6127108310613a4157612710830492506004015b60648310613a53576064830492506002015b600a8310610ca25760010192915050565b60125460ff1615613aac57613aac5f85613a91866040805180820190915260018152602081019190915290565b604080518082019091526001815260208101879052856130b8565b8360601b80613ac25763ea553b345f526004601cfd5b679a31110384e0b0c960205284601452835f5260405f20805484810181811015613af3576301336cea5f526004601cfd5b808355505050826020528060601c5f335f805160206158e483398151915260405fa450613b35565b604080518082019091526001815260208101879052611ee5565b833b15611ee557611ee55f85858585614452565b6001600160a01b03841080613bcd5750600354604051631ba2a35b60e31b8152600481018690526001600160a01b039091169063dd151ad8906024015f60405180830381865afa158015613b9f573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052613bc6919081019061578e565b6040015151155b15613beb57604051639cd2c44760e01b815260040160405180910390fd5b613bfa8686868686868d6144dc565b5f87815260046020908152604080832054888452600a90925290912054613c22906002615539565b1115612ba4576003546040516350885bc560e01b8152600481018990525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613c6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c9291906158a2565b50905080613cb35760405163a74ab56560e01b815260040160405180910390fd5b5f88815260086020526040812089917fe48aa5e298e92f05c7b7489cb783dd272acece1ed2b7aae5007022513a99761191015460408051918252602082018990520160405180910390a2604080518082018252868152426020808301919091525f8b81526008909152919091206114d6916002614aa3565b613d3a8686868686868d6144dc565b5f87815260046020908152604080832054888452600a90925290912054613d62906002615539565b1115612ba4576003546040516350885bc560e01b8152600481018990525f916001600160a01b0316906350885bc5906024016040805180830381865afa158015613dae573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613dd291906158a2565b50905080613df35760405163a74ab56560e01b815260040160405180910390fd5b613dfc88611bdc565b505f8881526007602052604090205488907f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf90613e3d88633b9aca00615539565b6040805192835260208301919091520160405180910390a25f88815260076020526040902054613e7c908990613e7788633b9aca00615539565b6146d7565b604051806060016040528086633b9aca00613e979190615539565b81524260208083018290526040928301919091525f8b81526007909152206114d6916003614ad0565b604080516020808201869052818301859052825180830384018152606090920183528151918101919091205f848152600a90925291812054613f0890869086906103e6612dd1565b5f848152600a6020526040902090915060010154421015613f3c5760405163d445b7c360e01b815260040160405180910390fd5b5f828152600a60205260408082205485835291206002015410613f6c575f828152600a6020526040812055613f9b565b5f838152600a602052604080822060020154848352908220805491929091613f959084906155ed565b90915550505b5f828152600a602052604081208054839290613fb8908490615618565b90915550505f84815260076020526040812001545f838152600a6020526040812001541115614000575f84815260076020526040812001545f838152600a6020526040812001555b5f918252600a6020526040808320426001918201819055948452922091820192909255600201555050565b5f82815260046020526040812080548392906140489084906155ed565b90915550505f82815260066020526040902054821080156140705750678ac7230489e8000082115b156140915761407e82611bdc565b5061122461408a612dd1565b838361493b565b61409c83838361493b565b81836001600160a01b03167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f8360405161110f91815260200190565b60125460ff1615614105576141058585613a91866040805180820190915260018152602081019190915290565b8460601b8460601b8061411f5763ea553b345f526004601cfd5b81679a31110384e0b0c9176020528760601b82811481151761415557885f526034600c205461415557634b6e7f185f526004601cfd5b50845f5260405f208054808611156141745763f4d678b85f526004601cfd5b8590039055679a31110384e0b0c9811760205260405f208054808601818110156141a5576301336cea5f526004601cfd5b808355505050836020528060601c8260601c335f805160206158e483398151915260405fa450506141d35f90565b156141fa576141fa8585613b1b866040805180820190915260018152602081019190915290565b833b15612ba657612ba68585858585614452565b60605f82516001600160401b0381111561422a5761422a614c4e565b60405190808252806020026020018201604052801561425d57816020015b60608152602001906001900390816142485790505b5090505f5b83518110156142b25761428d84828151811061428057614280615511565b6020026020010151612ead565b82828151811061429f5761429f615511565b6020908102919091010152600101614262565b5092915050565b60605f6142c7836002615539565b6142d2906002615618565b6001600160401b038111156142e9576142e9614c4e565b6040519080825280601f01601f191660200182016040528015614313576020820181803683370190505b509050600360fc1b815f8151811061432d5761432d615511565b60200101906001600160f81b03191690815f1a905350600f60fb1b8160018151811061435b5761435b615511565b60200101906001600160f81b03191690815f1a9053505f61437d846002615539565b614388906001615618565b90505b60018111156143ff576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106143bc576143bc615511565b1a60f81b8282815181106143d2576143d2615511565b60200101906001600160f81b03191690815f1a90535060049490941c936143f8816158ce565b905061438b565b508315610de95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b60405163f23a6e6181523360208201528560601b60601c604082015283606082015282608082015260a08082015281518060c0830152801561449e578060e08301826020860160045afa505b6020828260c401601c85015f8a5af16144bf573d156144bf573d5f833e3d82fd5b50805163f23a6e6160e01b14612ba657639c05499b5f526004601cfd5b5f878152600a602052604090206001015415614552575f878152600a602052604081206002015411801561451e57505f878152600a6020526040812060010154115b15614552575f878152600a60205260408082206002015488835290822080549192909161454c9084906155ed565b90915550505b5f838152600c6020526040902054821015614676575f838152600c6020526040812080548490811061458657614586615511565b905f5260205f200154905085811461467457600a5f836145a4612dd1565b846040516020016145d59392919092835260609190911b6001600160601b0319166020830152603482015260540190565b6040516020818303038152906040528051906020012081526020019081526020015f2060026003811061460a5761460a615511565b0154600a5f848460405160200161462b929190918252602082015260400190565b6040516020818303038152906040528051906020012081526020019081526020015f205f6003811061465f5761465f615511565b015f82825461466e91906155ed565b90915550505b505b60408051606081018252868152426020808301919091528183018790525f8a8152600a909152919091206146ab916003614ad0565b505f868152600a6020526040812080548692906146c9908490615618565b909155505050505050505050565b5f8381526005602090815260408083208054825181850281018501909352808352919290919083018282801561472a57602002820191905f5260205f20905b815481526020019060010190808311614716575b5050505050905080515f0361473f5750505050565b5f805b8251811015614806575f83828151811061475e5761475e615511565b602002602001015187604051602001614781929190918252602082015260400190565b60408051808303601f1901815291815281516020928301205f818152600a9093529120549091506147b28185615618565b9350633b9aca008111156147fc576147d585848151811061205d5761205d615511565b505f876147e28884615539565b6147ec9190615564565b5f848152600a6020526040902055505b5050600101614742565b5060018111801561483d57505f8581526007602052604090205461482e90620186a090615564565b61483b620186a083615564565b105b156148c3575f61487b61484f87612877565b5f88815260066020526040902054679a31110384e0b0c96020526014919091525f908152604090205490565b6148a261488788612877565b679a31110384e0b0c96020526014525f888152604090205490565b6148ac91906155ed565b90506148c16148ba87612877565b87836135af565b505b60408051606081018252848152426020808301829052828401919091525f8881526007909152919091206148f8916003614ad0565b50604080518581526020810185905286917f0ad1727523f8a97d260a40299bd81a21bbcdb605a771d1390f8fa163b2632caf910160405180910390a25050505050565b6112245f84848460125460ff161561499857614998835f61496f856040805180820190915260018152602081019190915290565b60408051808201909152600181526020810186905260405180602001604052805f8152506130b8565b8260601b80679a31110384e0b0c917602052808560601b148560601b15176149d457845f526034600c20546149d457634b6e7f185f526004601cfd5b825f5260405f208054808411156149f25763f4d678b85f526004601cfd5b83810382555050816020525f8160601c335f805160206158e483398151915260405fa450611ee5565b828054828255905f5260205f20908101928215614a54579160200282015b82811115614a54578251825591602001919060010190614a39565b50612cde929150614afd565b6040518060e00160405280614a73614b11565b81526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b8260028101928215614a545791602002820182811115614a54578251825591602001919060010190614a39565b8260038101928215614a545791602002820182811115614a54578251825591602001919060010190614a39565b5b80821115612cde575f8155600101614afe565b604051806101800160405280600c905b6060815260200190600190039081614b215790505090565b6001600160a01b03811681146109a7575f80fd5b5f8060408385031215614b5e575f80fd5b8235614b6981614b39565b946020939093013593505050565b5f60208284031215614b87575f80fd5b81356001600160e01b031981168114610de9575f80fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610de96020830184614b9e565b5f60208284031215614bee575f80fd5b5035919050565b5f60208284031215614c05575f80fd5b8135610de981614b39565b5f805f8060808587031215614c23575f80fd5b8435935060208501359250604085013591506060850135614c4381614b39565b939692955090935050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b0381118282101715614c8457614c84614c4e565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614cb257614cb2614c4e565b604052919050565b5f6001600160401b03821115614cd257614cd2614c4e565b5060051b60200190565b5f82601f830112614ceb575f80fd5b81356020614d00614cfb83614cba565b614c8a565b8083825260208201915060208460051b870101935086841115614d21575f80fd5b602086015b84811015614d3d5780358352918301918301614d26565b509695505050505050565b5f6001600160401b03821115614d6057614d60614c4e565b50601f01601f191660200190565b5f82601f830112614d7d575f80fd5b8135614d8b614cfb82614d48565b818152846020838601011115614d9f575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215614dcf575f80fd5b853594506020808701356001600160401b0380821115614ded575f80fd5b818901915089601f830112614e00575f80fd5b8135614e0e614cfb82614cba565b81815260059190911b8301840190848101908c831115614e2c575f80fd5b938501935b82851015614e53578435614e4481614b39565b82529385019390850190614e31565b985050506040890135925080831115614e6a575f80fd5b614e768a848b01614cdc565b95506060890135925080831115614e8b575f80fd5b5050614e9988828901614d6e565b95989497509295608001359392505050565b5f815180845260208085019450602084015f5b83811015614eda57815187529582019590820190600101614ebe565b509495945050505050565b602081525f610de96020830184614eab565b5f8060408385031215614f08575f80fd5b50508035926020909101359150565b5f8060408385031215614f28575f80fd5b823591506020830135614f3a81614b39565b809150509250929050565b5f805f60608486031215614f57575f80fd5b8335614f6281614b39565b9250602084013591506040840135614f7981614b39565b809150509250925092565b5f8083601f840112614f94575f80fd5b5081356001600160401b03811115614faa575f80fd5b6020830191508360208260051b8501011115614fc4575f80fd5b9250929050565b5f8083601f840112614fdb575f80fd5b5081356001600160401b03811115614ff1575f80fd5b602083019150836020828501011115614fc4575f80fd5b5f805f805f805f8060a0898b03121561501f575f80fd5b883561502a81614b39565b9750602089013561503a81614b39565b965060408901356001600160401b0380821115615055575f80fd5b6150618c838d01614f84565b909850965060608b0135915080821115615079575f80fd5b6150858c838d01614f84565b909650945060808b013591508082111561509d575f80fd5b506150aa8b828c01614fcb565b999c989b5096995094979396929594505050565b5f805f80604085870312156150d1575f80fd5b84356001600160401b03808211156150e7575f80fd5b6150f388838901614f84565b9096509450602087013591508082111561510b575f80fd5b5061511887828801614f84565b95989497509550505050565b5f8060408385031215615135575f80fd5b8235915060208301356001600160401b03811115615151575f80fd5b61515d85828601614cdc565b9150509250929050565b80151581146109a7575f80fd5b5f8060408385031215615185575f80fd5b823561519081614b39565b91506020830135614f3a81615167565b5f602082840312156151b0575f80fd5b81356001600160401b038111156151c5575f80fd5b610ab384828501614cdc565b5f826101808101835f5b600c81101561520a5783830387526151f4838351614b9e565b60209788019790935091909101906001016151db565b509095945050505050565b5f815180845260208085019450602084015f5b83811015614eda5781516001600160a01b031687529582019590820190600101615228565b5f8282518085526020808601955060208260051b840101602086015f5b8481101561529857601f19868403018952615286838351614b9e565b9884019892509083019060010161526a565b5090979650505050505050565b5f815160e084526152b960e08501826151d1565b9050602083015184820360208601526152d28282614b9e565b915050604083015184820360408601526152ec8282615215565b91505060608301518482036060860152615306828261524d565b915050608083015184820360808601526153208282615215565b91505060a083015184820360a086015261533a828261524d565b91505060c083015184820360c08601526153548282614eab565b95945050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156153b257603f198886030184526153a08583516152a5565b94509285019290850190600101615384565b5092979650505050505050565b602081525f610de960208301846152a5565b5f80604083850312156153e2575f80fd5b82356153ed81614b39565b91506020830135614f3a81614b39565b602081525f610de96020830184615215565b5f805f805f8060a08789031215615424575f80fd5b863561542f81614b39565b9550602087013561543f81614b39565b9450604087013593506060870135925060808701356001600160401b03811115615467575f80fd5b61547389828a01614fcb565b979a9699509497509295939492505050565b600181811c9082168061549957607f821691505b6020821081036122a057634e487b7160e01b5f52602260045260245ffd5b5f602082840312156154c7575f80fd5b8151610de981615167565b7f68747470733a2f2f77696c6c77652e78797a2f6d657461646174612f0000000081525f82518060208501601c85015e5f9201601c0191825250919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610ca257610ca2615525565b634e487b7160e01b5f52601260045260245ffd5b5f8261557257615572615550565b500490565b606081525f6155896060830186615215565b828103602084015261559b8186614eab565b905082810360408401526155af8185614b9e565b9695505050505050565b5f602082840312156155c9575f80fd5b5051919050565b60609290921b6001600160601b0319168252601482015260340190565b81810381811115610ca257610ca2615525565b5f6001820161561157615611615525565b5060010190565b80820180821115610ca257610ca2615525565b5f6020828403121561563b575f80fd5b8151610de981614b39565b604081525f6156586040830185614eab565b90508260208301529392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906156a090830184614b9e565b979650505050505050565b5f826156b9576156b9615550565b500690565b5f80858511156156cc575f80fd5b838611156156d8575f80fd5b5050820193919092039150565b5f82601f8301126156f4575f80fd5b81516020615704614cfb83614cba565b8083825260208201915060208460051b870101935086841115615725575f80fd5b602086015b84811015614d3d578051835291830191830161572a565b5f82601f830112615750575f80fd5b815161575e614cfb82614d48565b818152846020838601011115615772575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f602080838503121561579f575f80fd5b82516001600160401b03808211156157b5575f80fd5b90840190608082870312156157c8575f80fd5b6157d0614c62565b8251828111156157de575f80fd5b8301601f810188136157ee575f80fd5b80516157fc614cfb82614cba565b81815260059190911b8201860190868101908a83111561581a575f80fd5b928701925b8284101561584157835161583281614b39565b8252928701929087019061581f565b84525050508284015182811115615856575f80fd5b615862888286016156e5565b8583015250604083015193508184111561587a575f80fd5b61588687858501615741565b6040820152606083015160608201528094505050505092915050565b5f80604083850312156158b3575f80fd5b82516158be81615167565b6020939093015192949293505050565b5f816158dc576158dc615525565b505f19019056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220012012908dac0cc7de5cd80d097b9bac8de611dc1e81934dd2bc8db895f5007d64736f6c63430008190033",
        "sourceMap": "3505:107:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:334:53;;;;;;:::i;:::-;6250:25;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;;;;616:25:92;;;604:2;589:18;6070:334:53;;;;;;;;19823:385;;;;;;:::i;:::-;20141:10;20001:3;19997:21;;;;20135:17;;;20160:10;20154:17;;20132:40;20180:10;20174:17;;;20129:63;;19823:385;;;;1108:14:92;;1101:22;1083:41;;1071:2;1056:18;19823:385:53;943:187:92;2154:18:66;;;:::i;:::-;;;;;;;:::i;8007:446::-;;;;;;:::i;:::-;;:::i;:::-;;20940:175;;;;;;:::i;:::-;;:::i;19011:98::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19083:19:66;;19011:98;13809:676:65;;;;;;:::i;:::-;;:::i;7209:648:66:-;;;;;;:::i;:::-;;:::i;19942:103::-;;;;;;:::i;:::-;19998:7;20024:14;;;:8;:14;;;;;;;19942:103;24374:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14491:174:65:-;;;;;;:::i;:::-;;:::i;8691:205:66:-;;;;;;:::i;:::-;;:::i;15060:228::-;;;;;;:::i;:::-;;:::i;13749:232::-;;;;;;:::i;:::-;;:::i;1301:1327:65:-;;;;;;:::i;:::-;;:::i;1740:73:66:-;;;;;;:::i;:::-;;:::i;12453:470::-;;;;;;:::i;:::-;;:::i;12757:5689:53:-;;;;;;:::i;:::-;;:::i;13434:347:65:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10524:32:92;;;10506:51;;10494:2;10479:18;13434:347:65;10360:203:92;18593:1021:53;;;;;;:::i;:::-;;:::i;788:19:66:-;;;;;-1:-1:-1;;;;;788:19:66;;;4523:295;;;;;;:::i;:::-;;:::i;2634:1846:65:-;;;;;;:::i;:::-;;:::i;11193:446:66:-;;;;;;:::i;:::-;;:::i;11823:412::-;;;;;;:::i;:::-;;:::i;4975:327::-;;;:::i;20204:111::-;;;;;;:::i;:::-;;:::i;751:31::-;;;;;-1:-1:-1;;;;;751:31:66;;;9153:278;;;;;;:::i;:::-;;:::i;2088:25::-;;;;;;:::i;:::-;;:::i;19581:115::-;;;;;;:::i;:::-;;:::i;14303:433::-;;;;;;:::i;:::-;;:::i;19404:171::-;;;;;;:::i;:::-;;:::i;2178:20::-;;;:::i;19820:116::-;;;;;;:::i;:::-;;:::i;12509:390:65:-;;;;;;:::i;:::-;;:::i;11411:907::-;;;;;;:::i;:::-;;:::i;21121:112:66:-;;;;;;:::i;:::-;;:::i;23693:262::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24559:524::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5604:320::-;;;;;;:::i;:::-;;:::i;9558:993::-;;;;;;:::i;:::-;;:::i;20321:114::-;;;;;;:::i;:::-;20381:7;20407:21;;;:13;:21;;;;;;;20321:114;6122:651;;;;;;:::i;:::-;;:::i;18865:140::-;;;;;;:::i;:::-;;:::i;6495:386:53:-;;;;;;:::i;:::-;6721:25;6715:4;6708:39;6767:4;6760:19;;;;6615:11;6792:22;6859:4;-1:-1:-1;6843:21:53;6837:28;;6495:386;19702:112:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10557:494::-;;;;;;:::i;:::-;;:::i;8225:3984:53:-;;;;;;:::i;:::-;;:::i;15471:538:66:-;;;;;;:::i;:::-;;:::i;20051:147::-;;;;;;:::i;:::-;;:::i;23969:399::-;;;;;;:::i;:::-;;:::i;2154:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8007:446::-;8074:14;;;;:8;:14;;;;;;:19;;8070:46;;8102:14;;-1:-1:-1;;;8102:14:66;;;;;;;;;;;8070:46;8130:14;;;;:8;:14;;;;;;:22;;;8126:54;;8161:19;;-1:-1:-1;;;8161:19:66;;;;;;;;;;;8126:54;8194:19;;;;:13;:19;;;;;;:40;;8190:63;;8243:10;;-1:-1:-1;;;8243:10:66;;;;;;;;;;;8190:63;8268:28;8277:12;:10;:12::i;:::-;8291:4;8268:8;:28::i;:::-;8264:56;;;8305:15;;-1:-1:-1;;;8305:15:66;;;;;;;;;;;8264:56;8335:1;;-1:-1:-1;;;;;8335:1:66;:8;8344:12;:10;:12::i;:::-;8358:19;8372:4;8358:13;:19::i;:::-;8335:43;;-1:-1:-1;;;;;;8335:43:66;;;;;;;-1:-1:-1;;;;;19095:32:92;;;8335:43:66;;;19077:51:92;19144:18;;;19137:34;19050:18;;8335:43:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8330:70;;8387:13;;-1:-1:-1;;;8387:13:66;;;;;;;;;;;8330:70;8411:35;8427:12;:10;:12::i;:::-;8441:4;8411:15;:35::i;:::-;8007:446;:::o;20940:175::-;21004:13;21092:14;:3;:12;:14::i;:::-;21043:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;21029:79;;20940:175;;;:::o;13809:676:65:-;13966:7;13993:17;;;:8;:17;;;;;;:29;;13989:64;;14031:22;;-1:-1:-1;;;14031:22:65;;;;;;;;;;;13989:64;14064:25;14092:50;14102:19;14112:8;14102:9;:19::i;:::-;14123:18;;;;:8;:18;;;;;;6250:25:53;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;14092:50:65;6250:25:53;6244:4;6237:39;;;6296:4;6289:19;;;14152:29:65;6321:16:53;;;6382:4;6366:21;;;6360:28;14249:7:65;:17;;;;;:20;14064:78;;-1:-1:-1;6360:28:53;14308:6:65;14283:31;;14279:45;;14323:1;14316:8;;;;;;;14279:45;14334:23;14418:26;:17;14438:6;14418:26;:::i;:::-;14394:19;14361:30;14385:6;14361:21;:30;:::i;:::-;:52;;;;:::i;:::-;14360:85;;;;:::i;:::-;14334:111;-1:-1:-1;;;;;13809:676:65;;;;;;;:::o;7209:648:66:-;7469:1;;:43;;-1:-1:-1;;;7469:43:66;;7423:13;;;;-1:-1:-1;;;;;7469:1:66;;;;:16;;:43;;7486:7;;7495:9;;7506:5;;7469:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7448:64;;7530:15;7540:4;7530:9;:15::i;:::-;7555:22;;;;:15;:22;;;;;:38;;;7631:15;7626:1;7603:25;;;:43;7555:22;-1:-1:-1;7676:19:66;;:58;;7711:23;:14;7728:6;7711:23;:::i;:::-;7676:58;;;7698:10;7676:58;7656:14;;;;:7;:14;;;;;:17;:78;7749:37;;;7772:1;21609:25:92;;21665:2;21650:18;;21643:34;;;7765:5:66;;7749:37;;21582:18:92;7749:37:66;;;;;;;7829:1;7832:14;;;:7;:14;;;;;7822:5;;7801:49;;7829:1;7832:17;;7801:49;;;21609:25:92;;;21665:2;21650:18;;21643:34;;;;21582:18;7801:49:66;;;;;;;7438:419;7209:648;;;;;;;:::o;24374:179::-;24453:16;24488:15;:58;24531:5;24538;24514:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24504:41;;;;;;24488:58;;;;;;;;;;;24481:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24374:179;;;;;:::o;14491:174:65:-;14575:7;14601;:54;14636:7;14645;14619:34;;;;;;;;22144:19:92;;;22188:2;22179:12;;22172:28;22225:2;22216:12;;21987:247;14619:34:65;;;;;;;;;;;;;14609:45;;;;;;14601:54;;;;;;;;;;;14656:1;14601:57;;;;;;;:::i;:::-;;;;14491:174;-1:-1:-1;;;14491:174:65:o;8691:205:66:-;8765:14;;;;:8;:14;;;;;;:19;;8761:54;;8793:22;;-1:-1:-1;;;8793:22:66;;;;;;;;;;;8761:54;8825:64;8831:12;:10;:12::i;:::-;8845:4;8851:7;8860:28;;;;;;-1:-1:-1;;;22441:23:92;;22489:1;22480:11;;22239:258;8860:28:66;;;;;;;;;;;;;8825:5;:64::i;:::-;8691:205;;:::o;15060:228::-;15138:19;15183:18;;;:13;:18;;;;;;:23;:98;;15263:18;;;;:13;:18;;;;;;15220:40;15230:14;15277:3;15230:9;:14::i;:::-;15246:13;;;;:8;:13;;;;;;6250:25:53;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;15220:40:66;15213:47;;:4;:47;:::i;:::-;:68;;;;:::i;:::-;15183:98;;;15209:1;15183:98;15169:112;15060:228;-1:-1:-1;;;15060:228:66:o;13749:232::-;13855:7;:10;-1:-1:-1;;;;;13855:10:66;13839:12;:10;:12::i;:::-;-1:-1:-1;;;;;13839:26:66;;13835:52;;13874:13;;-1:-1:-1;;;13874:13:66;;;;;;;;;;;13835:52;13901:8;13913:1;13901:13;13897:37;;13923:11;;-1:-1:-1;;;13923:11:66;;;;;;;;;;;13897:37;-1:-1:-1;;;;;13944:19:66;;;;;;;:7;:19;;;;;:30;13749:232::o;1301:1327:65:-;1385:24;1412:43;1431:10;1443:11;1412:18;:43::i;:::-;1385:70;;1488:1;1470:7;:14;:19;1466:32;;1491:7;1301:1327;;:::o;1466:32::-;1511:7;;-1:-1:-1;;;;;;1511:7:65;-1:-1:-1;;;1511:29:65;;:66;;-1:-1:-1;;;;;;;;;;1570:7:65;;;1544:33;1511:66;1507:930;;;1593:25;1621:23;;;:10;:23;;;;;;;;1593:51;;;;;;;;;;;;;;;;;;;1621:23;;1593:51;;;1621:23;1593:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1593:51:65;;-1:-1:-1;1675:1:65;;-1:-1:-1;;;;1658:769:65;1682:7;:14;1678:1;:18;:45;;;;-1:-1:-1;1708:15:65;;1700:5;1704:1;1700;:5;:::i;:::-;:23;1678:45;1658:769;;;1748:30;1808:10;1820:11;1833:8;1842:5;1846:1;1842;:5;:::i;:::-;1833:15;;;;;;;;:::i;:::-;;;;;;;1791:58;;;;;;;;;22840:2:92;22836:15;;;;-1:-1:-1;;;;;;22832:53:92;22820:66;;22911:2;22902:12;;22895:28;;;;22948:2;22939:12;;22932:28;22985:2;22976:12;;22635:359;1791:58:65;;;;;;;;;;;;;1781:69;;;;;;1748:102;;1868:30;1928:8;1941:1;1937;:5;;;;:::i;:::-;1928:15;;;;;;;;:::i;:::-;;;;;;;1945:11;1911:46;;;;;;;;22144:19:92;;;22188:2;22179:12;;22172:28;22225:2;22216:12;;21987:247;1911:46:65;;;;;;;-1:-1:-1;;1911:46:65;;;;;;1901:57;;1911:46;1901:57;;;;2018:1;1981:31;;;:7;:31;;;;;2013:1;1981:34;;1901:57;;-1:-1:-1;1981:38:65;1977:436;;2085:31;;;;:7;:31;;;;;;:34;2047:31;;;;;2079:1;2047:34;;:72;2043:292;;2184:1;2147:31;;;:7;:31;;;;;:38;2043:292;;;2278:31;;;;:7;:31;;;;;;2310:1;2278:34;;2240:31;;;;;;:72;;2278:34;;2240:31;;:72;;2278:34;;2240:72;:::i;:::-;;;;-1:-1:-1;;2043:292:65;2393:1;2356:31;;;:7;:31;;;;;2388:1;2356:34;:38;1977:436;1730:697;;1725:3;;;;;:::i;:::-;;;;1658:769;;;;1579:858;1507:930;2447:20;:33;;-1:-1:-1;;;;;;2447:33:65;-1:-1:-1;;;;;2447:33:65;;;;;2490:32;2501:11;2514:7;2490:10;:32::i;:::-;2539:20;2532:27;;-1:-1:-1;;;;;;2532:27:65;;;2574:47;;-1:-1:-1;;;;;10524:32:92;;10506:51;;2597:11:65;;2585:10;;2574:47;;10494:2:92;10479:18;2574:47:65;;;;;;;;1375:1253;1301:1327;;:::o;1740:73:66:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:73:66;;-1:-1:-1;1740:73:66:o;12453:470::-;12576:16;;-1:-1:-1;;;;;12576:16:66;12562:10;:30;12558:58;;12601:15;;-1:-1:-1;;;12601:15:66;;;;;;;;;;;12558:58;12630:33;12639:6;12647:15;12630:8;:33::i;:::-;12626:234;;;-1:-1:-1;;;;;19083:19:66;;;12679:21;;;;:7;:21;;;;;;;:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12679:37:66;;;;;;;;;;;:21;12753:15;;12738:30;;;;:::i;:::-;12730:39;;;;;;;;;;;;;;-1:-1:-1;12730:39:66;;;:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12730:55:66;-1:-1:-1;;;;;12730:55:66;;;;;;;;12799:30;;:13;:30;;;;;-1:-1:-1;;12799:50:66;;12626:234;12869:47;-1:-1:-1;;;;;19083:19:66;;12900:15;12869:13;:47::i;:::-;12453:470;;;:::o;12757:5689:53:-;16318:9:66;;;;12958:106:53;;;13003:50;13024:4;13030:2;13034:3;;13003:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13003:50:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13039:7:53;;-1:-1:-1;13039:7:53;;;;13003:50;;;13039:7;;13003:50;13039:7;13003:50;;;;;;;;;-1:-1:-1;;13003:50:53;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13048:4:53;;-1:-1:-1;13048:4:53;;;;13003:50;;13048:4;;;;13003:50;;;;;;;;;-1:-1:-1;13003:20:53;;-1:-1:-1;;;13003:50:53:i;:::-;13164:14;13152:10;13149:30;13139:162;;13212:10;13206:4;13199:24;13282:4;13276;13269:18;13139:162;13372:4;13368:2;13364:13;13337:25;13334:44;13447:2;13443;13439:11;13412:25;13409:42;13477:12;13471:4;13464:26;13559:12;13555:2;13551:21;13543:29;;13599:10;13595:2;13591:19;13585:25;;13684:2;13674:135;;13719:10;13713:4;13706:24;13790:4;13784;13777:18;13674:135;13917:4;13907:8;13904:18;13894:272;;13955:8;13949:4;13942:22;14013:4;14007;13997:21;13991:28;13981:171;;14056:10;14050:4;14043:24;14129:4;14123;14116:18;13981:171;14286:10;14283:1;14279:18;14264:1482;14300:1;14264:1482;;;14339:4;14336:1;14332:12;14327:17;;14412:1;14396:14;14392:22;14379:36;14548:12;14542:4;14535:26;14628:1;14616:10;14612:18;14599:32;14593:4;14586:46;14696:4;14690;14680:21;14751:15;14745:22;14806:11;14798:6;14795:23;14792:182;;;14862:10;14856:4;14849:24;14943:4;14937;14930:18;14792:182;15023:24;;;14999:49;;15195:4;15188:24;;;15274:4;15268;15258:21;15327:20;;15394:28;;;15450:35;;;15447:197;;;15529:10;15523:4;15516:24;15613:4;15607;15600:18;15447:197;15669:37;;;-1:-1:-1;14264:1482:53;;-1:-1:-1;14264:1482:53;;14268:31;14246:1514;;15851:4;15845:11;15918:4;15915:1;15908:15;15966:10;15963:1;15959:18;15953:4;15949:29;16011:4;16008:1;16004:12;16072:1;16065:4;16053:10;16049:21;16046:1;16033:41;16161:1;16155:4;16151:12;16144:4;16141:1;16137:12;16130:34;16232:1;16225:4;16209:14;16205:25;16201:1;16198;16194:9;16181:53;;16362:2;16356:4;16346:8;16313:31;16306:4;16302:1;16299;16295:9;16291:20;16288:1;16283:82;;;16402:24;16187:4:66;16121:101;;16402:24:53;16398:112;;;16442:57;16470:4;16476:2;16480:3;;16485:7;;16494:4;;16442:27;:57::i;:::-;16682:2;16670:15;16667:1763;;;16717:2;16711:4;16704:16;16793:4;16787:11;16954:10;16951:1;16944:21;17003:8;16996:4;16993:1;16989:12;16982:30;17050:4;17043;17040:1;17036:12;17029:26;17128:4;17121;17118:1;17114:12;17107:26;17176:10;17173:1;17169:18;17163:4;17159:29;17221:4;17218:1;17214:12;17282:1;17275:4;17263:10;17259:21;17256:1;17243:41;17359:1;17353:4;17349:12;17399:1;17392:4;17389:1;17385:12;17378:23;17469:1;17462:4;17446:14;17442:25;17438:1;17435;17431:9;17418:53;17545:9;;17538:4;17531:12;;17524:31;17632:4;17628:22;;-1:-1:-1;;17604:22:53;;17592:9;;;17585:17;;17572:79;;17714:1;17711;17707:9;17694:11;17690:27;17684:4;17680:38;17668:50;;17843:4;17840:1;17834:4;17827;17824:1;17820:12;17817:1;17810:4;17804:11;17797:5;17792:56;17782:338;;17875:16;17872:230;;;18011:16;18005:4;18002:1;17987:41;18063:16;18060:1;18053:27;17872:230;-1:-1:-1;18232:8:53;;-1:-1:-1;;;18229:34:53;18219:197;;18300:10;18294:4;18287:24;18393:4;18387;18380:18;18219:197;;16667:1763;12757:5689;;;;;;;;:::o;13434:347:65:-;13516:23;13556:24;13565:5;13572:7;13556:8;:24::i;:::-;13551:53;;13589:15;;-1:-1:-1;;;13589:15:65;;;;;;;;;;;13551:53;13643:16;;13632:79;;-1:-1:-1;;;13632:79:65;;13684:10;13632:79;;;23509:34:92;23559:18;;;23552:34;;;-1:-1:-1;;;;;23622:15:92;;;23602:18;;;23595:43;13643:16:65;;;;13632:51;;23444:18:92;;13632:79:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13614:97;;13766:7;13759:5;-1:-1:-1;;;;;13726:48:65;13742:15;-1:-1:-1;;;;;13726:48:65;;;;;;;;;;;13434:347;;;;:::o;18593:1021:53:-;18729:25;18861:13;18849:10;18846:29;18836:161;;18908:10;18902:4;18895:24;18978:4;18972;18965:18;18836:161;19028:4;19022:11;19010:23;;19063:10;19053:8;19046:28;19110:4;19100:8;19096:19;19144:10;19141:1;19137:18;19188:1;19185;19181:9;19175:4;19168:23;19269:329;19276:1;19269:329;;;19311:4;19308:1;19304:12;19299:17;;19378:1;19363:13;19359:21;19346:35;19449:5;19445:2;19441:14;19414:25;19411:45;19405:4;19398:59;;19516:1;19504:10;19500:18;19487:32;19481:4;19474:46;19577:4;19571;19561:21;19555:28;19551:1;19548;19544:9;19537:47;19269:329;;;19273:2;;18593:1021;;;;;;:::o;4523:295:66:-;4603:7;4611:1;4603:10;;-1:-1:-1;;;;;4603:10:66;4589;:24;4585:48;;4622:11;;-1:-1:-1;;;4622:11:66;;;;;;;;;;;4585:48;4647:10;;-1:-1:-1;;;;;4647:27:66;;;:10;;:27;4643:169;;-1:-1:-1;4703:10:66;;;:7;4690:23;;-1:-1:-1;;;;;;4690:23:66;;;-1:-1:-1;;;;;4703:10:66;;4690:23;;;;4727:17;;;8007:446::o;4643:169::-;4775:10;:26;;-1:-1:-1;;;;;;4775:26:66;-1:-1:-1;;;;;4775:26:66;;;;;;;;;;4523:295::o;2634:1846:65:-;2726:13;2742:35;2751:12;:10;:12::i;:::-;2765:11;2742:8;:35::i;:::-;2726:51;;2787:12;2802:18;2807:12;:10;:12::i;2802:18::-;2834:21;;;;:8;:21;;;;;;2787:33;;-1:-1:-1;2834:36:65;;;2830:63;;2879:14;;-1:-1:-1;;;2879:14:65;;;;;;;;;;;2830:63;2908:8;2903:29;;2925:7;;-1:-1:-1;;;2925:7:65;;;;;;;;;;;2903:29;2943:23;2969:36;2979:12;:10;:12::i;:::-;6250:25:53;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;2969:36:65;3037:26;;;;:13;:26;;;;;;2943:62;;-1:-1:-1;3037:35:65;;3066:6;;3037:35;:::i;:::-;3019:15;:53;3015:81;;;3081:15;;-1:-1:-1;;;3081:15:65;;;;;;;;;;;3015:81;3107:26;3121:11;3107:13;:26::i;:::-;-1:-1:-1;3144:25:65;3172:23;;;:10;:23;;;;;;;;3144:51;;;;;;;;;;;;;;;;;;;3172:23;;3144:51;;;3172:23;3144:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3205:18;3253:12;:10;:12::i;:::-;3267:11;3236:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3226:54;;;;;;3205:75;;3291:14;3315:9;3334:806;3346:7;:14;3342:1;:18;3334:806;;;3381:19;3403:7;3411:1;3403:10;;;;;;;;:::i;:::-;;;;;;;3381:32;;3427:15;3472:11;3485:4;3491:11;3455:48;;;;;;;;;24090:19:92;;;24134:2;24125:12;;24118:28;;;;24171:2;24162:12;;24155:28;24208:2;24199:12;;23905:312;3455:48:65;;;;;;;;;;;;;3445:59;;;;;;3427:77;;3528:1;3523;:6;3519:611;;3553:11;3568:1;3553:16;3549:30;;3571:8;;;;3549:30;3601:1;3606;3601:6;3597:253;;3665:12;:10;:12::i;:::-;-1:-1:-1;;;;;3636:72:65;3652:11;3636:72;3679:11;3692:15;3636:72;;;;;;21609:25:92;;;21665:2;21650:18;;21643:34;21597:2;21582:18;;21427:256;3636:72:65;;;;;;;;3597:253;;;3788:12;:10;:12::i;:::-;-1:-1:-1;;;;;3760:71:65;3775:11;3760:71;3802:11;3815:15;3760:71;;;;;;21609:25:92;;;21665:2;21650:18;;21643:34;21597:2;21582:18;;21427:256;3760:71:65;;;;;;;;3597:253;3867:88;3889:11;3902;3915:1;3918:15;3935:7;3944:10;3867:21;:88::i;:::-;3519:611;;;3994:82;4016:11;4029:4;4035:11;4048:1;4051:7;:14;4067:8;3994:21;:82::i;:::-;4094:21;4104:11;4094:21;;:::i;:::-;;;3519:611;3367:773;;3334:806;3362:3;;3334:806;;;4171:1;4153:7;:14;:19;;:34;;;;-1:-1:-1;4176:11:65;;;4153:34;:54;;;;;4191:6;4201;4191:16;;4153:54;4149:83;;;4216:16;;-1:-1:-1;;;4216:16:65;;;;;;;;;;;4149:83;4275:15;4285:4;4275:9;:15::i;:::-;-1:-1:-1;;;;;4247:70:65;4262:11;4247:70;4292:7;4301:15;4247:70;;;;;;;:::i;:::-;;;;;;;;4332:20;;-1:-1:-1;;;;;4332:20:65;4328:146;;4456:7;4382:15;:71;4425:12;:10;:12::i;:::-;4439:11;4408:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4398:54;;;;;;4382:71;;;;;;;;;;;:81;;;;;;;;;;;;:::i;:::-;;2716:1764;;;;;;;2634:1846;;:::o;11193:446:66:-;11274:6;11297:22;11306:6;11314:4;11297:8;:22::i;:::-;11292:47;;11328:11;;-1:-1:-1;;;11328:11:66;;;;;;;;;;;11292:47;11363:12;:10;:12::i;:::-;-1:-1:-1;;;;;11353:22:66;:6;-1:-1:-1;;;;;11353:22:66;;11349:114;;11391:36;11397:6;11405:18;11418:4;11405:12;:18::i;:::-;11425:1;11391:5;:36::i;:::-;-1:-1:-1;11448:4:66;11441:11;;11349:114;11478:1;;-1:-1:-1;;;;;11478:1:66;:8;11487:6;11495:19;11509:4;11495:13;:19::i;:::-;11478:37;;-1:-1:-1;;;;;;11478:37:66;;;;;;;-1:-1:-1;;;;;19095:32:92;;;11478:37:66;;;19077:51:92;19144:18;;;19137:34;19050:18;;11478:37:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11477:38;11473:42;;11532:18;11545:4;11532:12;:18::i;:::-;11525:25;;11565:1;11561:29;;;11568:22;11574:6;11582:4;11588:1;11568:5;:22::i;:::-;11605:27;;11627:4;;-1:-1:-1;;;;;11605:27:66;;;;;;;;11193:446;;;;:::o;11823:412::-;11884:14;11914;;;:8;:14;;;;;;:22;;;11910:36;;-1:-1:-1;11945:1:66;;11823:412;-1:-1:-1;11823:412:66:o;11910:36::-;12004:13;;;;:7;:13;;;;;:16;;11998:1;11984:16;;;;11966:34;;:15;:34;:::i;:::-;11965:55;;;;:::i;:::-;11956:64;;12034:6;12044:1;12034:11;12030:25;;-1:-1:-1;12054:1:66;;11823:412;-1:-1:-1;11823:412:66:o;12030:25::-;12065:13;;;;:7;:13;;;;;12084:15;;12079:1;12065:16;:34;12154:29;;-1:-1:-1;;;12154:29:66;;;25014:24:92;12110:74:66;;12132:4;;;;12146:6;;25054:11:92;;12154:29:66;24812:259:92;12110:74:66;12215:4;12199:29;12221:6;12199:29;;;;616:25:92;;604:2;589:18;;470:177;12199:29:66;;;;;;;;11823:412;;;:::o;4975:327::-;5043:7;:10;5020:7;;-1:-1:-1;;;;;5043:10:66;:24;5039:50;;5076:13;;-1:-1:-1;;;5076:13:66;;;;;;;;;;;5039:50;5123:16;;5186:4;;5166:26;;-1:-1:-1;;;5166:26:66;;-1:-1:-1;;;;;5186:4:66;;;5166:26;;;616:25:92;5123:16:66;;;5112:53;;5166:4;;:14;;589:18:92;;5166:26:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5112:81;;;;;;;;;;;;;616:25:92;;604:2;589:18;;470:177;5112:81:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5099:7;5107:1;5099:10;:94;;-1:-1:-1;;;;;;5099:94:66;-1:-1:-1;;;;;5099:94:66;;;;;;5204:1;;:17;;;-1:-1:-1;;;5204:17:66;;;;:1;;;;;:15;;:17;;;;;-1:-1:-1;;5204:17:66;;;;;;;-1:-1:-1;5204:1:66;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5236:32;5257:7;5265:1;5257:10;;;;;;;:::i;:::-;;;5236:32;;-1:-1:-1;;;;;5257:10:66;;;10506:51:92;;10494:2;10479:18;5236:32:66;;;;;;;-1:-1:-1;5285:7:66;:10;-1:-1:-1;;;;;5285:10:66;;4975:327::o;20204:111::-;20264:7;20290:15;;;:7;:15;;;;;20264:7;20290:18;;;;20204:111;-1:-1:-1;;20204:111:66:o;9153:278::-;9224:24;9251:19;9262:7;9251:10;:19::i;:::-;9224:46;;9280:9;9299:83;9311:7;:14;9307:1;:18;9299:83;;;9346:25;9351:7;9359:1;9351:10;;;;;;;;:::i;:::-;;;;;;;9363:7;9346:4;:25::i;:::-;9327:3;;9299:83;;;9395:5;;9391:33;;9402:22;9407:7;9416;9402:4;:22::i;:::-;9214:217;;9153:278;;:::o;2088:25::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:25:66;;-1:-1:-1;2088:25:66;:::o;19581:115::-;19639:7;19665:21;;;:15;:21;;;;;19639:7;19665:24;;14303:433;14382:7;14401:22;14426:19;14437:7;14426:10;:19::i;:::-;14401:44;;14455:9;14479;14474:233;14494:5;:12;14490:1;:16;14474:233;;;14550:1;14546;14531:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;14527:24;;14575:5;14581:1;14575:8;;;;;;;;:::i;:::-;;;;;;;14565:18;;14622:7;14601:8;:17;14610:7;14601:17;;;;;;;;;;;;:28;14597:39;14631:5;14597:39;14659:37;14680:6;14688:7;14659:20;:37::i;:::-;14650:46;-1:-1:-1;14508:3:66;;14474:233;;;-1:-1:-1;14723:6:66;;14303:433;-1:-1:-1;;;;14303:433:66:o;19404:171::-;19483:4;19554:1;19503:47;19513:9;19524:25;19537:11;19524:12;:25::i;19503:47::-;:52;19499:69;;-1:-1:-1;19564:4:66;19557:11;;2178:20;;;;;;;:::i;19820:116::-;19913:16;;;;:10;:16;;;;;;;;;19906:23;;;;;;;;;;;;;;;;;19878:16;;19906:23;;;19913:16;19906:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19820:116;;;:::o;12509:390:65:-;12570:22;12604:21;12628:19;12639:7;12628:10;:19::i;:::-;12604:43;;12674:1;12657:18;;12685:128;12723:4;:11;12706:14;:28;12685:128;;;12768:34;12781:4;12786:14;12781:20;;;;;;;;:::i;:::-;;;;;;;12768:12;:34::i;:::-;;12736:16;;;;;12685:128;;;12822:22;12836:7;12822:13;:22::i;:::-;;12871:21;12884:7;11411:907;11466:22;11517:17;;;:8;:17;;;;;;11548:11;;;11544:32;;11568:8;;-1:-1:-1;;;11568:8:65;;;;;;;;;;;11544:32;11590:16;;;;:8;:16;;;;;;:26;;;11586:40;;-1:-1:-1;11625:1:65;;11411:907;-1:-1:-1;;11411:907:65:o;11586:40::-;11637:21;11651:6;11637:13;:21::i;:::-;-1:-1:-1;11713:33:65;;;;;;;22144:19:92;;;22179:12;;;22172:28;;;11713:33:65;;;;;;;;;22216:12:92;;;;11713:33:65;;;11702:46;;;;;-1:-1:-1;11786:36:65;11796:17;22172:28:92;11796:9:65;:17::i;:::-;6250:25:53;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;11786:36:65;11905:31;;;;:7;:31;;;;;11759:63;;-1:-1:-1;11937:1:65;11905:34;;11887:52;;:15;:52;:::i;:::-;11849:31;;;;:7;:31;;;;;:34;:91;;;;:::i;:::-;11832:108;;11972:16;11955:14;:33;11951:97;;;12021:16;12004:33;;11951:97;12058:31;;;;:7;:31;;;;;12095:15;;12090:1;12058:34;:52;12125:18;;12121:191;;12159:142;12190:17;12200:6;12190:9;:17::i;:::-;12209:18;12219:7;12209:9;:18::i;:::-;12229:6;12237:14;12253:34;;;;;;-1:-1:-1;;;25278:29:92;;25332:2;25323:12;;25076:265;12253:34:65;;;;;;;;;;;;;12159:13;:142::i;:::-;11490:828;;;11411:907;;;:::o;21121:112:66:-;21216:10;;-1:-1:-1;;;21216:10:66;;;;;;;;;;;23693:262;23760:24;23820:7;:14;-1:-1:-1;;;;;23804:31:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23796:39;;23850:9;23845:104;23869:7;:14;23865:1;:18;23845:104;;;23915:23;23927:7;23935:1;23927:10;;;;;;;;:::i;:::-;;;;;;;23915:11;:23::i;:::-;23904:5;23910:1;23904:8;;;;;;;;:::i;:::-;;;;;;;;;;:34;23885:3;;23845:104;;;;23693:262;;;:::o;24559:524::-;24631:25;;:::i;:::-;24679:19;24691:6;24679:11;:19::i;:::-;24668:30;-1:-1:-1;;;;;;24712:18:66;;24708:39;24732:15;24708:39;6250:25:53;6244:4;6237:39;6296:4;6289:19;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;24781:34:66;;:32;:34::i;:23::-;:32;:34::i;:::-;24757:18;;:21;;:58;24825:22;24850:19;24863:6;-1:-1:-1;;;;;19083:19:66;;24850;:::i;:::-;24916:1;24883:23;;;:7;:23;;;;;:30;24825:44;;-1:-1:-1;24883:34:66;24879:137;;24978:23;;;;:7;:23;;;;;:26;;24958:47;;24978:23;:26;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24978:26:66;24958:19;:47::i;:::-;24933:18;;:22;;:72;24879:137;25044:32;25063:4;25069:6;25044:18;:32::i;:::-;25025:16;;;:51;-1:-1:-1;24559:524:66;;;;:::o;5604:320::-;5672:11;5699;-1:-1:-1;;;;;5699:23:66;;5726:1;5699:28;5695:46;;5736:5;;-1:-1:-1;;;5736:5:66;;;;;;;;;;;5695:46;-1:-1:-1;;;;;;19083:19:66;;5789:13;;;;:8;:13;;;;;;:18;5785:43;;5816:12;;-1:-1:-1;;;5816:12:66;;;;;;;;;;;5785:43;5839:23;5853:3;5858;5839:13;:23::i;:::-;5874:11;;5872:13;;;;;:::i;:::-;;;;-1:-1:-1;5901:16:66;;5913:3;;5901:16;;;;;5604:320;;;:::o;9558:993::-;9627:14;9657;;;:8;:14;;;;;;:19;;9653:51;;9685:19;;-1:-1:-1;;;9685:19:66;;;;;;;;;;;9653:51;9723:14;;;;:8;:14;;;;;;:22;;:70;;9758:35;9779:7;9788:4;9758:20;:35::i;:::-;9723:70;;;9748:7;9723:70;9714:79;;9803:34;9809:12;:10;:12::i;:::-;9823:4;9829:7;9803:5;:34::i;:::-;9851:14;;;;:8;:14;;;;;;:22;;9847:698;;9889:4;:21;9911:15;9921:4;9911:9;:15::i;:::-;9928:12;:10;:12::i;:::-;9942:8;:14;9951:4;9942:14;;;;;;;;;;;;9958:6;9966:24;;;;;;-1:-1:-1;;;25548:19:92;;25592:1;25583:11;;25346:254;9966:24:66;;;;;;;;;;;;;9889:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9847:698;;;10022:17;10042:7;:24;10050:15;10060:4;10050:9;:15::i;:::-;-1:-1:-1;;;;;10042:24:66;;;;;;;;;;;;-1:-1:-1;10042:24:66;;:29;:78;;10096:7;:24;10104:15;10114:4;10104:9;:15::i;:::-;-1:-1:-1;;;;;10096:24:66;-1:-1:-1;;;;;10096:24:66;;;;;;;;;;;;;10042:78;;;10074:19;;;:7;:19;;;;10042:78;10022:98;-1:-1:-1;10146:19:66;10022:98;10146:7;:19;:::i;:::-;10134:31;-1:-1:-1;10179:20:66;10202:19;10134:31;10202:7;:19;:::i;:::-;10179:42;;10250:12;10239:7;:23;10235:40;;10271:4;;-1:-1:-1;;;10271:4:66;;;;;;;;;;;10235:40;10341:15;10351:4;10341:9;:15::i;:::-;10367:4;;10334:49;;-1:-1:-1;;;10334:49:66;;-1:-1:-1;;;;;10367:4:66;;;10334:49;;;19077:51:92;19144:18;;;19137:34;;;10334:32:66;;;;;19050:18:92;;10334:49:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;;;10418:15;10428:4;10418:9;:15::i;:::-;-1:-1:-1;;;;;10411:32:66;;10444:12;:10;:12::i;:::-;10411:60;;-1:-1:-1;;;;;;10411:60:66;;;;;;;-1:-1:-1;;;;;19095:32:92;;;10411:60:66;;;19077:51:92;19144:18;;;19137:34;;;19050:18;;10411:60:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10290:244;;10511:23;;-1:-1:-1;;;10511:23:66;;;;;;;;;;;10290:244;10008:537;;9558:993;;;;:::o;6122:651::-;6179:13;6208:14;;;:8;:14;;;;;;:19;;6204:55;;6229:30;6243:15;6253:4;6243:9;:15::i;6229:30::-;;6204:55;6274:28;6283:12;:10;:12::i;:::-;6297:4;6274:8;:28::i;:::-;6273:29;:57;;;;-1:-1:-1;6307:14:66;;;;:8;:14;;;;;;:22;;;6273:57;6269:81;;;6339:11;;-1:-1:-1;;;6339:11:66;;;;;;;;;;;6269:81;6364:19;;;;:13;:19;;;;;;:40;;6360:63;;6413:10;;-1:-1:-1;;;6413:10:66;;;;;;;;;;;6360:63;6436:11;;6434:13;;;;;:::i;:::-;;;;-1:-1:-1;6506:29:66;6525:10;6506:16;:29;:::i;:::-;6491:11;;6466:22;6473:15;6466:4;:22;:::i;:::-;:36;;;;:::i;:::-;:70;;;;:::i;:::-;6458:78;;6546:57;6565:16;6575:5;6565:9;:16::i;:::-;6591:4;6598;6546:18;:57::i;:::-;6613:26;6627:5;6634:4;6613:13;:26::i;:::-;6653:10;6675:4;6653:27;6649:69;;6682:36;6698:12;:10;:12::i;6682:36::-;6734:32;;6755:10;;6749:4;;6742:5;;6734:32;;;;;6122:651;;;:::o;18865:140::-;18916:7;-1:-1:-1;;;;;18942:21:66;;:56;;18995:1;18942:56;;;18974:1;18935:63;18865:140;-1:-1:-1;;18865:140:66:o;19702:112::-;19794:13;;;;:7;:13;;;;;;;;;19787:20;;;;;;;;;;;;;;;;;19759:16;;19787:20;;;19794:13;19787:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19787:20:66;;;;;;;;;;;;;;;;;;;;;;19702:112;;;:::o;10557:494::-;10631:17;;;;:8;:17;;;;;;:22;;10627:54;;10662:19;;-1:-1:-1;;;10662:19:66;;;;;;;;;;;10627:54;10692:22;10717:19;10728:7;10717:10;:19::i;:::-;10692:44;;10746:9;10770;10765:249;10785:5;:12;10781:1;:16;10765:249;;;10841:1;10837;10822:5;:12;:16;;;;:::i;:::-;:20;;;;:::i;:::-;10818:24;;10895:6;10860:32;10870:12;:10;:12::i;:::-;6250:25:53;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;10860:32:66;:41;10856:71;;;10910:17;;-1:-1:-1;;;10910:17:66;;;;;;;;;;;10856:71;10950:21;10955:7;10964:6;10950:4;:21::i;:::-;10941:30;;10995:5;11001:1;10995:8;;;;;;;;:::i;:::-;;;;;;;10985:18;;10799:3;;;;;10765:249;;;;11023:21;11028:7;11037:6;11023:4;:21::i;:::-;;10617:434;;10557:494;;:::o;8225:3984:53:-;16318:9:66;;;;8397:122:53;;;8442:66;8463:4;8469:2;8473:11;8481:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;8473:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;8503:4;;8442:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8442:20:53;;-1:-1:-1;;;8442:66:53:i;:::-;8652:4;8648:2;8644:13;8617:25;8614:44;8727:2;8723;8719:11;8692:25;8689:42;8757:12;8751:4;8744:26;8839:12;8835:2;8831:21;8823:29;;8879:10;8875:2;8871:19;8865:25;;8964:2;8954:135;;8999:10;8993:4;8986:24;9070:4;9064;9057:18;8954:135;9197:4;9187:8;9184:18;9174:272;;9235:8;9229:4;9222:22;9293:4;9287;9277:21;9271:28;9261:171;;9336:10;9330:4;9323:24;9409:4;9403;9396:18;9261:171;9555:2;9549:4;9542:16;9614:4;9608;9598:21;9575:44;;9661:15;9655:22;9708:11;9700:6;9697:23;9694:158;;;9756:10;9750:4;9743:24;9829:4;9823;9816:18;9694:158;9910:6;9897:11;9893:24;9876:15;9869:49;;10039:10;10033:4;10026:24;10104:4;10098;10088:21;10067:42;;10155:13;10149:20;10229:6;10212:15;10208:28;10275:15;10259:14;10256:35;10253:173;;;10327:10;10321:4;10314:24;10403:4;10397;10390:18;10253:173;10443:37;;;-1:-1:-1;;10560:4:53;10553:20;;;10653:2;10647:4;10637:8;-1:-1:-1;;;;;;;;;;;10597:4:53;10591;10586:70;10962:2;10950:15;10947:1246;;;11040:4;11034:11;11151:10;11148:1;11141:21;11200:8;11193:4;11190:1;11186:12;11179:30;11247:4;11240;11237:1;11233:12;11226:26;11290:2;11283:4;11280:1;11276:12;11269:24;11331:6;11324:4;11321:1;11317:12;11310:28;11376:4;11369;11366:1;11362:12;11355:26;11459:11;11453:4;11449:22;11442:4;11429:11;11425:22;11418:4;11415:1;11411:12;11398:74;11606:4;11603:1;11589:11;11583:4;11579:22;11572:4;11569:1;11565:12;11562:1;11558:2;11551:5;11546:65;11536:347;;11638:16;11635:230;;;11774:16;11768:4;11765:1;11750:41;11826:16;11823:1;11816:27;11635:230;11995:8;;-1:-1:-1;;;11992:34:53;11982:197;;12063:10;12057:4;12050:24;12156:4;12150;12143:18;11982:197;;10947:1246;8225:3984;;;;;;:::o;15471:538:66:-;15559:16;15606:14;;;:8;:14;;;;;;15526:21;;15578:1;;15630:154;15648:8;:4;15655:1;15648:8;:::i;:::-;15637:6;:20;15630:154;;15687:16;;;;:8;:16;;;;;;15673:37;;15705:5;15673:37;15724:10;;;:::i;:::-;15757:16;;;;:8;:16;;;;;;;15724:10;;-1:-1:-1;15630:154:66;;;15814:8;-1:-1:-1;;;;;15800:23:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15800:23:66;;15793:30;;15834:13;;;15857:146;15879:8;15870:6;:17;15857:146;;;15943:14;;;;:8;:14;;;;;;15913:4;15938:1;15918:17;15929:6;15918:8;:17;:::i;:::-;:21;;;;:::i;:::-;15913:27;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;15978:14;;;;:8;:14;;;;;;;;15889:8;;15857:146;;;15549:460;;15471:538;;;:::o;20051:147::-;20108:7;20138:8;20131:4;:15;20127:43;;;20155:15;20162:8;20155:4;:15;:::i;20127:43::-;-1:-1:-1;20187:4:66;20051:147::o;23969:399::-;-1:-1:-1;;;;;19083:19:66;;24124:14;24192:15;;;:7;:15;;;;;:22;24084:24;;19083:19;-1:-1:-1;;;;;24176:39:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24168:47;;24230:9;24225:137;24249:15;;;;:7;:15;;;;;:22;24245:26;;24225:137;;;24320:15;;;;:7;:15;;;;;:18;;24303:48;;24315:24;;24336:1;;24320:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;24320:18:66;;19011:98;24315:24;24341:9;24303:11;:48::i;:::-;24292:5;24298:1;24292:8;;;;;;;;:::i;:::-;;;;;;;;;;:59;24273:3;;24225:137;;18640:219;18708:20;;18685:7;;-1:-1:-1;;;;;18708:20:66;:34;18704:67;;-1:-1:-1;18751:20:66;;-1:-1:-1;;;;;18751:20:66;;18640:219::o;18704:67::-;18799:4;;-1:-1:-1;;;;;18799:4:66;18785:10;:18;18781:44;;-1:-1:-1;18820:4:66;;18640:219::o;18781:44::-;-1:-1:-1;18842:10:66;;18640:219::o;12241:206::-;12308:11;;;;:7;:11;;;;;;;:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12308:20:66;-1:-1:-1;;;;;12308:20:66;;;;;12339:62;12308:20;12349:16;12308:11;12349:12;:16::i;:::-;12370:30;;-1:-1:-1;;;12370:30:66;;;26490:25:92;12367:1:66;;26531:12:92;;12370:30:66;26288:261:92;12339:62:66;12416:24;;12437:2;;-1:-1:-1;;;;;12416:24:66;;;;;;;;12241:206;;:::o;447:696:41:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;-1:-1:-1;;;;;627:18:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:41;-1:-1:-1;604:41:41;-1:-1:-1;765:28:41;;;781:2;765:28;820:280;-1:-1:-1;;851:5:41;-1:-1:-1;;;985:2:41;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:41;820:280;1064:21;-1:-1:-1;1120:6:41;447:696;-1:-1:-1;;;447:696:41:o;18023:216:66:-;18125:33;18137:2;18141;18145:6;18153:4;18125:11;:33::i;:::-;18168:17;;;;:13;:17;;;;;:27;;18189:6;;18168:17;:27;;18189:6;;18168:27;:::i;:::-;;;;-1:-1:-1;;18210:22:66;;616:25:92;;;18221:2:66;;-1:-1:-1;;;;;18210:22:66;;;;;604:2:92;589:18;18210:22:66;;;;;;;18023:216;;;;:::o;12929:488::-;13008:15;;;;:8;:15;;;;;;:20;13004:52;;13037:19;;-1:-1:-1;;;13037:19:66;;;;;;;;;;;13004:52;13066:15;;;;:8;:15;;;;;:26;;;13106:17;;;13102:309;;13139:20;;;;:10;:20;;;;;;;:32;;;;;;;;;;;;;;;;;13185:7;;13193:20;13150:8;13193:10;:20::i;:::-;13214:1;13193:23;;;;;;;;:::i;:::-;;;;;;;13185:32;;;;;;;;;;;13223:16;13233:5;13223:9;:16::i;:::-;13185:55;;;;;;;;-1:-1:-1;13185:55:66;;;;;;;;;;;;-1:-1:-1;;;;;;13185:55:66;-1:-1:-1;;;;;13185:55:66;;;;;;;;;;;13258:20;;;:13;:20;;;;;;;:41;13254:54;;12929:488;;:::o;13254:54::-;-1:-1:-1;13321:14:66;;;;:7;:14;;;;;13341:10;13321:30;;13385:15;13380:1;13365:17;;;:35;12929:488::o;16340:1677::-;-1:-1:-1;;;16549:7:66;;-1:-1:-1;;;;;;16549:7:66;:42;16545:79;16607:7;16545:79;16638:9;16633:1378;16662:1;16649:3;:10;:14;16633:1378;;;16680:17;16700:3;16704:1;16700:6;;;;;;;;:::i;:::-;;;;;;;16680:26;;16720:18;16741:7;16749:1;16741:10;;;;;;;;:::i;:::-;;;;;;;16720:31;;16786:1;-1:-1:-1;;;;;16770:18:66;:4;-1:-1:-1;;;;;16770:18:66;;;:38;;;;-1:-1:-1;;;;;;16792:16:66;;;;16770:38;16769:70;;;;-1:-1:-1;16814:19:66;;;;:8;:19;;;;;;:24;16769:70;16765:104;;;16848:21;;-1:-1:-1;;;16848:21:66;;;;;;;;;;;16765:104;16900:8;16888:9;:20;16884:479;;;16981:7;;-1:-1:-1;;;;;;16981:7:66;-1:-1:-1;;;16981:39:66;;;16980:89;;-1:-1:-1;17026:7:66;;-1:-1:-1;;;;;;17026:7:66;-1:-1:-1;;;17026:42:66;;16980:89;:161;;;-1:-1:-1;17102:7:66;;-1:-1:-1;;;;;;17102:7:66;-1:-1:-1;;;17102:38:66;;16980:161;:213;;;-1:-1:-1;17146:7:66;;-1:-1:-1;;;;;;17146:7:66;-1:-1:-1;;;17146:46:66;;16980:213;:281;;;-1:-1:-1;17226:7:66;;-1:-1:-1;;;;;;17226:7:66;-1:-1:-1;;;17226:34:66;;16980:281;16928:395;;17309:14;;-1:-1:-1;;;17309:14:66;;;;;;;;;;;16928:395;17342:7;;;;;16884:479;17381:7;;-1:-1:-1;;;;;;17381:7:66;-1:-1:-1;;;17381:29:66;;:66;;-1:-1:-1;17414:7:66;;-1:-1:-1;;;;;;17414:7:66;-1:-1:-1;;;17414:33:66;17381:66;17377:564;;;17471:19;;;;:8;:19;;;;;;:32;;;17467:460;;17539:20;17549:9;17539;:20::i;:::-;17532:72;;-1:-1:-1;;;17532:72:66;;-1:-1:-1;;;;;26812:15:92;;;17532:72:66;;;26794:34:92;17586:4:66;26844:18:92;;;26837:43;26896:18;;;26889:34;;;17532:41:66;;;;;;;26729:18:92;;17532:72:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17527:158;;17639:23;;-1:-1:-1;;;17639:23:66;;;;;;;;;;;17527:158;17467:460;;;17731:9;:17;;-1:-1:-1;;17731:17:66;;;17770:100;17787:12;:10;:12::i;:::-;17801:20;17811:9;17801;:20::i;:::-;17823:19;;;;:8;:19;;;;;;;17844:10;;17856:13;;17867:1;;17856:8;17823:19;17856:13;:::i;17770:100::-;17892:9;:16;;-1:-1:-1;;17892:16:66;17904:4;17892:16;;;17467:460;-1:-1:-1;;17983:3:66;;16633:1378;;43437:310:53;43637:104;;4486:771:65;4703:24;;4720:7;4703:24;4764:37;;;;;;;22144:19:92;;;22179:12;;;22172:28;;;4764:37:65;;;;;;;;;22216:12:92;;;;4764:37:65;;4754:48;;;;;;;;;-1:-1:-1;4836:16:65;;;:7;:16;;;;;;4853:1;4836:19;;4817:15;:38;4813:64;;4864:13;;-1:-1:-1;;;4864:13:65;;;;;;;;;;;4813:64;4891:5;4900:1;4891:10;4887:265;;4917:96;4939:11;4952:7;4961;4970:6;4978:15;4995:10;5007:5;4917:21;:96::i;:::-;4887:265;;;5044:97;5067:11;5080:7;5089;5098:6;5106:15;5123:10;5135:5;5044:22;:97::i;:::-;-1:-1:-1;;5162:16:65;;;;:7;:16;;;;;;;;5184:15;5179:1;5162:19;;;:37;5209:10;:28;;;;;:41;;;;;;;;;;;;;;;;-1:-1:-1;;;4486:771:65:o;8167:1015::-;8410:17;8426:1;8410:13;:17;:::i;:::-;8390:8;:15;:38;8386:59;;8437:8;;-1:-1:-1;;;8437:8:65;;;;;;;;;;;8386:59;8455:30;8543:4;8551:11;8564:8;8573:9;8581:1;8573:5;:9;:::i;:::-;8564:19;;;;;;;;:::i;:::-;;;;;;;8510:74;;;;;;;;;22840:2:92;22836:15;;;;-1:-1:-1;;;;;;22832:53:92;22820:66;;22911:2;22902:12;;22895:28;;;;22948:2;22939:12;;22932:28;22985:2;22976:12;;22635:359;8510:74:65;;;;;;;-1:-1:-1;;8510:74:65;;;;;;8500:85;;8510:74;8500:85;;;;8595:18;8616:31;;;:7;:31;;;;;:34;8500:85;;-1:-1:-1;8673:6:65;8664:15;;:34;;;;-1:-1:-1;8683:15:65;;8664:34;8660:47;;;8700:7;;;;8660:47;8729:6;8720;:15;8716:40;;;8744:12;;-1:-1:-1;;;8744:12:65;;;;;;;;;;;8716:40;8785:6;8771:10;:20;;:58;;;-1:-1:-1;8795:20:65;;-1:-1:-1;;;;;8795:20:65;:34;;8771:58;8767:409;;;8863:6;8849:10;:20;8845:172;;8889:31;;;;:7;:31;;;;;:43;;;8987:15;8982:1;8950:34;;;:52;8845:172;9031:33;9044:8;9053:9;9061:1;9053:5;:9;:::i;:::-;9044:19;;;;;;;;:::i;9031:33::-;-1:-1:-1;9078:87:65;9108:8;9117:9;9125:1;9117:5;:9;:::i;:::-;9108:19;;;;;;;;:::i;:::-;;;;;;;9129:11;9142:22;9078:29;:87::i;12905:209::-;12993:32;13005:4;13011;13017:7;12993:11;:32::i;:::-;-1:-1:-1;;;;;19083:19:66;;13039:25:65;;;;:13;:25;;;;;;13068:1;-1:-1:-1;13035:43:65;;12905:209;;;:::o;13035:43::-;13087:20;13096:4;13102;13087:8;:20::i;32884:203:53:-;33027:53;33049:1;33053:4;33059:2;33063;33067:6;33075:4;33027:13;:53::i;21472:2215:66:-;21531:25;;:::i;:::-;21620:17;:6;:15;:17::i;:::-;21596:18;;:41;:18;21717:15;;;:7;21596:21;21717:15;;;;:29;;:18;;;:27;:29::i;:::-;21693:18;;:21;;:53;21852:57;:46;21862:17;21872:6;21862:9;:17::i;21852:57::-;21828:18;;:21;;:81;22016:47;:36;22026:17;22036:6;22026:9;:17::i;22016:47::-;21992:18;;:21;;:71;22169:74;22170:61;22186:6;22194:36;22204:17;22186:6;22204:9;:17::i;22169:74::-;22145:18;;:21;;:98;22350:84;22351:71;22367:6;22375:46;22385:17;22367:6;22385:9;:17::i;22350:84::-;22326:18;;:21;;:108;22508:23;;;;:15;22326:21;22508:23;;;;22507:39;;22508:26;;22507:39;22483:18;;:21;;:63;22695:16;;;;22502:1;22483:21;22695:16;;;;;;;;22731:42;;;;;22144:19:92;;;22179:12;;;22172:28;;;22731:42:66;;;;;;;;;22216:12:92;;;;22731:42:66;;22721:53;;;;;;22713:62;;:7;:62;;;;;;:65;22665:135;;22679:100;;:15;:100::i;22665:135::-;22641:18;;:21;;:159;22880:15;;;;22660:1;22641:21;22880:15;;;;:29;;22896:1;22880:18;;:29;22856:18;;:21;;:53;23110:21;;;;:13;22856:21;23110;;;;;:32;;:30;:32::i;:::-;23085:18;;:22;;:57;23211:1;;;23229:23;;;:15;23085:22;23229:23;;;;;;:26;23211:45;;-1:-1:-1;;;23211:45:66;;;;;616:25:92;;;;-1:-1:-1;;;;;23211:1:66;;;;:17;;589:18:92;;23211:45:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23211:45:66;;;;;;;;;;;;:::i;:::-;:50;;;;;23187:21;;;;:74;;;;23334:15;;;;:7;:15;;;;;23309:40;;;;;;;;;;;;;;;;;23334:15;;23309:40;;23334:15;23309:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23309:40:66;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23309:22:66;;;:40;23402:16;;23389:7;;:40;;23397:31;;23422:6;;-1:-1:-1;;;;;23402:16:66;23397:31;:::i;:::-;23389:40;;;;;;;;;;;23360:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23360:69:66;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23360:26:66;;;:69;23533:18;;;;:10;:18;;;;;;;;;23510:42;;;;;;;;;;;;;;;;;;;;;;23533:18;23510:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:42::i;:::-;23485:22;;;:67;23638:42;23661:18;23672:6;23661:10;:18::i;:::-;23638:22;:42::i;:::-;23618:17;;;:62;:8;21472:2215;-1:-1:-1;21472:2215:66:o;2407:149:41:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:41;;343:2;2497:11;:52::i;31804:707:53:-;32034:10;32027:18;32020:26;32006:40;;32135:25;32129:4;32122:39;32187:2;32181:4;32174:16;32216:8;32210:4;32203:22;32268:10;32261:4;32255;32245:21;32238:41;32353:10;32347:4;32340:24;32398:1;32394:6;32390:2;32386:15;32485:8;32482:1;32478:16;32473:2;32470:1;32466:10;32431:33;32425:4;32419;32414:81;;31804:707;;;:::o;10139:916:46:-;10192:7;;-1:-1:-1;;;10267:17:46;;10263:103;;-1:-1:-1;;;10304:17:46;;;-1:-1:-1;10349:2:46;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:46;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:46;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:46;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:46;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:46;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:46:o;20805:1574:53:-;16318:9:66;;;;20906:128:53;;;20951:72;20980:1;20984:2;20988:11;20996:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;20988:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;21018:4;20951:20;:72::i;:::-;21128:2;21124;21120:11;21205:3;21195:136;;21241:10;21235:4;21228:24;21312:4;21306;21299:18;21195:136;21438:25;21432:4;21425:39;21494:2;21488:4;21481:16;21527:2;21521:4;21514:16;21584:4;21578;21568:21;21635:13;21629:20;21709:6;21692:15;21688:28;21755:15;21739:14;21736:35;21733:173;;;21807:10;21801:4;21794:24;21883:4;21877;21870:18;21733:173;21945:14;21930:13;21923:37;;;;22046:6;22040:4;22033:20;22138:3;22134:2;22130:12;22127:1;22117:8;-1:-1:-1;;;;;;;;;;;22077:4:53;22071;22066:77;-1:-1:-1;22162:126:53;;22242:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;22255:15;47801:303;22206:71;43964:14;;22297:75;;;22315:57;22347:1;22351:2;22355;22359:6;22367:4;22315:23;:57::i;5263:802:65:-;-1:-1:-1;;;;;5509:26:65;;;:79;;-1:-1:-1;5545:1:65;;:25;;-1:-1:-1;;;5545:25:65;;;;;616::92;;;-1:-1:-1;;;;;5545:1:65;;;;:17;;589:18:92;;5545:25:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5545:25:65;;;;;;;;;;;;:::i;:::-;:30;;;5539:44;:49;5509:79;5505:110;;;5597:18;;-1:-1:-1;;;5597:18:65;;;;;;;;;;;5505:110;5625:94;5645:7;5654;5663:6;5671:15;5688:10;5700:5;5707:11;5625:19;:94::i;:::-;5759:26;;;;:13;:26;;;;;;;;;5733:16;;;:7;:16;;;;;;:19;:23;;5755:1;5733:23;:::i;:::-;:52;5729:330;;;5813:1;;:29;;-1:-1:-1;;;5813:29:65;;;;;616:25:92;;;5802:6:65;;-1:-1:-1;;;;;5813:1:65;;:16;;589:18:92;;5813:29:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5801:41;;;5861:1;5856:34;;5871:19;;-1:-1:-1;;;5871:19:65;;;;;;;;;;;5856:34;5938:28;;;;:15;:28;;;;;5925:11;;5909:69;;5938:31;;5909:69;;;21609:25:92;;;21665:2;21650:18;;21643:34;;;21582:18;5909:69:65;;;;;;;5992:56;;;;;;;;;;;6032:15;5992:56;;;;;;;;-1:-1:-1;5992:28:65;;;:15;:28;;;;;;;:56;;;;:::i;6071:838::-;6314:94;6334:7;6343;6352:6;6360:15;6377:10;6389:5;6396:11;6314:19;:94::i;:::-;6448:26;;;;:13;:26;;;;;;;;;6422:16;;;:7;:16;;;;;;:19;:23;;6444:1;6422:23;:::i;:::-;:52;6418:485;;;6502:1;;:29;;-1:-1:-1;;;6502:29:65;;;;;616:25:92;;;6491:6:65;;-1:-1:-1;;;;;6502:1:65;;:16;;589:18:92;;6502:29:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6490:41;;;6550:1;6545:34;;6560:19;;-1:-1:-1;;;6560:19:65;;;;;;;;;;;6545:34;6593:26;6607:11;6593:13;:26::i;:::-;-1:-1:-1;6672:20:65;;;;:7;:20;;;;;:23;:20;;6638:75;;6697:15;:6;6706;6697:15;:::i;:::-;6638:75;;;21609:25:92;;;21665:2;21650:18;;21643:34;;;;21582:18;6638:75:65;;;;;;;6763:20;;;;:7;:20;;;;;:23;6727:77;;6763:20;;6788:15;:6;6797;6788:15;:::i;:::-;6727:22;:77::i;:::-;6818:74;;;;;;;;6842:6;6851;6842:15;;;;:::i;:::-;6818:74;;6859:15;6818:74;;;;;;;;;;;;;;;-1:-1:-1;6818:20:65;;;:7;:20;;;;:74;;;;:::i;10121:1163::-;10294:35;;;;;;;22144:19:92;;;22179:12;;;22172:28;;;10294:35:65;;;;;;;;;22216:12:92;;;;10294:35:65;;10284:46;;;;;;;;;-1:-1:-1;10435:31:65;;;:7;:31;;;;;;:34;10378:106;;22144:19:92;;22172:28;;10471:12:65;:10;:12::i;10378:106::-;10519:31;;;;:7;:31;;;;;10340:144;;-1:-1:-1;10551:1:65;10519:34;;10500:15;:53;;10494:82;;10563:13;;-1:-1:-1;;;10563:13:65;;;;;;;;;;;10494:82;10629:37;;;;:7;:37;;;;;;:40;10591:31;;;;;10623:1;10591:34;;:78;10587:262;;10728:1;10685:37;;;:7;:37;;;;;:44;10587:262;;;10804:31;;;;:7;:31;;;;;;10836:1;10804:34;;10760:37;;;;;;:78;;10804:34;;10760:37;;:78;;10804:34;;10760:78;:::i;:::-;;;;-1:-1:-1;;10587:262:65;10859:37;;;;:7;:37;;;;;:59;;10903:15;;10859:37;:59;;10903:15;;10859:59;:::i;:::-;;;;-1:-1:-1;;10975:17:65;;;;:7;:17;;;;;:20;;10932:37;;;;:7;:37;;;;;:40;;:63;10928:157;;;11054:17;;;;:7;:17;;;;;:20;;11011:37;;;;:7;:37;;;;;:40;:63;10928:157;11095:37;;;;:7;:37;;;;;;11138:15;11133:1;11095:40;;;:58;;;11163:31;;;;;:34;;;:52;;;;11257:1;11225:34;:52;-1:-1:-1;;10121:1163:65:o;18245:389:66:-;18338:17;;;;:13;:17;;;;;:27;;18359:6;;18338:17;:27;;18359:6;;18338:27;:::i;:::-;;;;-1:-1:-1;;18380:12:66;;;;:8;:12;;;;;;:17;-1:-1:-1;18380:34:66;;;;;18406:8;18401:2;:13;18380:34;18376:213;;;18430:17;18444:2;18430:13;:17::i;:::-;;18461:37;18473:12;:10;:12::i;:::-;18487:2;18491:6;18461:11;:37::i;18376:213::-;18549:29;18561:4;18567:2;18571:6;18549:11;:29::i;:::-;18616:2;18610:4;-1:-1:-1;;;;;18603:24:66;;18620:6;18603:24;;;;616:25:92;;604:2;589:18;;470:177;33594:2706:53;16318:9:66;;;;33783:122:53;;;33828:66;33849:4;33855:2;33859:11;33867:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;33828:66;34001:4;33997:2;33993:13;34038:2;34034;34030:11;34115:3;34105:136;;34151:10;34145:4;34138:24;34222:4;34216;34209:18;34105:136;34297:5;34270:25;34267:36;34261:4;34254:50;34484:2;34480;34476:11;34534:5;34529:3;34526:14;34520:3;34513:11;34510:31;34500:279;;34574:2;34568:4;34561:16;34626:4;34620;34610:21;34604:28;34594:171;;34669:10;34663:4;34656:24;34742:4;34736;34729:18;34594:171;34500:279;34888:2;34882:4;34875:16;34947:4;34941;34931:21;34994:15;34988:22;35041:11;35033:6;35030:23;35027:158;;;35089:10;35083:4;35076:24;35162:4;35156;35149:18;35027:158;35226:24;;;35202:49;;35375:25;35372:34;;35366:4;35359:48;35461:4;35455;35445:21;35506:20;;35565:28;;;35613:35;;;35610:173;;;35684:10;35678:4;35671:24;35760:4;35754;35747:18;35610:173;35822:14;35807:13;35800:37;;;;35923:6;35917:4;35910:20;36071:3;36067:2;36063:12;36055:5;36051:2;36047:14;36037:8;-1:-1:-1;;;;;;;;;;;35997:4:53;35991;35986:90;;;36099:24;16187:4:66;16121:101;;36099:24:53;36095:120;;;36139:65;36159:4;36165:2;36169:11;36177:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;36139:65;43964:14;;36224:69;;;36242:51;36266:4;36272:2;36276;36280:6;36288:4;36242:23;:51::i;144:304:71:-;223:15;250:22;288:5;:12;-1:-1:-1;;;;;275:26:71;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:51;;317:9;312:106;336:5;:12;332:1;:16;312:106;;;381:26;398:5;404:1;398:8;;;;;;;;:::i;:::-;;;;;;;381:16;:26::i;:::-;369:6;376:1;369:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;350:3;;312:106;;;-1:-1:-1;435:6:71;144:304;-1:-1:-1;;144:304:71:o;1818:437:41:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:41;;1918:47;;-1:-1:-1;;;1975:6:41;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:41;;;;;;;;;-1:-1:-1;;;2000:6:41;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:41;;;;;;;;-1:-1:-1;2030:9:41;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:41;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:41;;;;;;;;-1:-1:-1;2141:1:41;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:41;;2162:55;;;;-1:-1:-1;;;2162:55:41;;30710:2:92;2162:55:41;;;30692:21:92;;;30729:18;;;30722:30;30788:34;30768:18;;;30761:62;30840:18;;2162:55:41;;;;;;;44187:1433:53;44475:4;44469:11;44578:10;44575:1;44568:21;44623:8;44616:4;44613:1;44609:12;44602:30;44682:4;44678:2;44674:13;44670:2;44666:22;44659:4;44656:1;44652:12;44645:44;44723:2;44716:4;44713:1;44709:12;44702:24;44760:6;44753:4;44750:1;44746:12;44739:28;44801:4;44794;44791:1;44787:12;44780:26;44834:4;44828:11;44873:1;44866:4;44863:1;44859:12;44852:23;44891:1;44888:71;;;44954:1;44947:4;44944:1;44940:12;44937:1;44930:4;44924;44920:15;44917:1;44910:5;44899:57;44895:62;44888:71;45075:4;45072:1;45068;45062:4;45058:12;45051:4;45048:1;45044:12;45041:1;45037:2;45030:5;45025:55;45015:313;;45103:16;45100:214;;;45231:16;45225:4;45222:1;45207:41;45279:16;45276:1;45269:27;45100:214;-1:-1:-1;45432:8:53;;-1:-1:-1;;;45429:34:53;45419:185;;45496:10;45490:4;45483:24;45585:4;45579;45572:18;9188:927:65;9454:1;9432:16;;;:7;:16;;;;;9449:1;9432:19;;:23;9428:186;;9497:1;9475:16;;;:7;:16;;;;;9492:1;9475:19;;:23;:52;;;;-1:-1:-1;9525:1:65;9503:16;;;:7;:16;;;;;9520:1;9503:19;;:23;9475:52;9471:133;;;9570:16;;;;:7;:16;;;;;;9587:1;9570:19;;9547:16;;;;;;:42;;9570:19;;9547:16;;:42;;9570:19;;9547:42;:::i;:::-;;;;-1:-1:-1;;9471:133:65;9627:27;;;;:15;:27;;;;;:34;:43;-1:-1:-1;9623:366:65;;;9686:18;9707:27;;;:15;:27;;;;;:35;;9735:6;;9707:35;;;;;;:::i;:::-;;;;;;;;;9686:56;;9774:6;9760:10;:20;9756:223;;9887:7;:74;9922:10;9934:12;:10;:12::i;:::-;9948:10;9905:54;;;;;;;;;31054:19:92;;;31111:2;31107:15;;;;-1:-1:-1;;;;;;31103:53:92;31098:2;31089:12;;31082:75;31182:2;31173:12;;31166:28;31219:2;31210:12;;30869:359;9905:54:65;;;;;;;;;;;;;9895:65;;;;;;9887:74;;;;;;;;;;;9962:1;9887:77;;;;;;;:::i;:::-;;;9800:7;:60;9835:10;9847;9818:40;;;;;;;;22144:19:92;;;22188:2;22179:12;;22172:28;22225:2;22216:12;;21987:247;9818:40:65;;;;;;;;;;;;;9808:51;;;;;;9800:60;;;;;;;;;;;9861:1;9800:63;;;;;;;:::i;:::-;;;:164;;;;;;;:::i;:::-;;;;-1:-1:-1;;9756:223:65;9672:317;9623:366;9999:61;;;;;;;;;;;10027:15;9999:61;;;;;;;;;;;;;;-1:-1:-1;9999:16:65;;;:7;:16;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;10070:16:65;;;;:7;:16;;;;;:38;;10093:15;;10070:16;:38;;10093:15;;10070:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;;9188:927:65:o;6915:1246::-;7015:25;7043:18;;;:10;:18;;;;;;;;7015:46;;;;;;;;;;;;;;;;;;;7043:18;;7015:46;;;7043:18;7015:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7075:8;:15;7094:1;7075:20;7071:33;;7097:7;6915:1246;;;:::o;7071:33::-;7113:30;;7153:544;7177:8;:15;7173:1;:19;7153:544;;;7213:30;7273:8;7282:1;7273:11;;;;;;;;:::i;:::-;;;;;;;7286:6;7256:37;;;;;;;;22144:19:92;;;22188:2;22179:12;;22172:28;22225:2;22216:12;;21987:247;7256:37:65;;;;;;;-1:-1:-1;;7256:37:65;;;;;;7246:48;;7256:37;7246:48;;;;7308:26;7337:31;;;:7;:31;;;;;:34;7246:48;;-1:-1:-1;7385:44:65;7337:34;7385:44;;:::i;:::-;;;7469:6;7448:18;:27;7444:243;;;7495:25;7508:8;7517:1;7508:11;;;;;;;;:::i;7495:25::-;-1:-1:-1;7538:22:65;7596:7;7564:28;7585:7;7564:18;:28;:::i;:::-;7563:40;;;;:::i;:::-;7621:31;;;;:7;:31;;;;;:51;-1:-1:-1;7444:243:65;-1:-1:-1;;7194:3:65;;7153:544;;;;7737:1;7712:22;:26;7711:97;;;;-1:-1:-1;7780:15:65;;;;:7;:15;;;;;:18;:27;;7801:6;;7780:27;:::i;:::-;7744:31;7769:6;7744:22;:31;:::i;:::-;7743:65;7711:97;7707:314;;;7824:21;7903:46;7913:17;7923:6;7913:9;:17::i;:::-;7932:16;;;;:8;:16;;;;;;6250:25:53;6244:4;6237:39;6296:4;6289:19;;;;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;7903:46:65;7864:36;7874:17;7884:6;7874:9;:17::i;:::-;6250:25:53;6244:4;6237:39;6296:4;6289:19;6145:14;6321:16;;;6382:4;6366:21;;6360:28;;6070:334;7864:36:65;:85;;;;:::i;:::-;7824:125;;7963:47;7969:17;7979:6;7969:9;:17::i;:::-;7988:6;7996:13;7963:5;:47::i;:::-;7810:211;7707:314;8031:61;;;;;;;;;;;8059:15;8031:61;;;;;;;;;;;;;;-1:-1:-1;8031:15:65;;;:7;:15;;;;;;;:61;;;;:::i;:::-;-1:-1:-1;8108:46:65;;;21609:25:92;;;21665:2;21650:18;;21643:34;;;8129:6:65;;8108:46;;21582:18:92;8108:46:65;;;;;;;7005:1156;;6915:1246;;;:::o;25830:126:53:-;25914:35;25928:1;25932:4;25938:2;25942:6;16318:9:66;;;;26365:128:53;;;26410:72;26431:4;26445:1;26449:11;26457:2;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;;47962:11;47801:303;26449:11;47968:4;47962:11;;47999:17;;;47986:31;;;48045:1;48030:17;;48079:4;48067:17;;48060:28;;;26410:72;;;;;;;;;;;;:20;:72::i;:::-;26589:4;26585:2;26581:13;26650:5;26623:25;26620:36;26614:4;26607:50;26868:5;26863:2;26859;26855:11;26852:22;26846:2;26842;26838:11;26831:19;26828:47;26818:295;;26908:2;26902:4;26895:16;26960:4;26954;26944:21;26938:28;26928:171;;27003:10;26997:4;26990:24;27076:4;27070;27063:18;26928:171;27222:2;27216:4;27209:16;27281:4;27275;27265:21;27328:15;27322:22;27375:11;27367:6;27364:23;27361:158;;;27423:10;27417:4;27410:24;27496:4;27490;27483:18;27361:158;27577:6;27564:11;27560:24;27543:15;27536:49;;;27671:6;27665:4;27658:20;27768:1;27760:5;27756:2;27752:14;27742:8;-1:-1:-1;;;;;;;;;;;27702:4:53;27696;27691:79;-1:-1:-1;27789:126:53;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:92:-;-1:-1:-1;;;;;89:31:92;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:92:o;652:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;;857:32:92;;847:43;;837:71;;904:1;901;894:12;1135:289;1177:3;1215:5;1209:12;1242:6;1237:3;1230:19;1298:6;1291:4;1284:5;1280:16;1273:4;1268:3;1264:14;1258:47;1350:1;1343:4;1334:6;1329:3;1325:16;1321:27;1314:38;1413:4;1406:2;1402:7;1397:2;1389:6;1385:15;1381:29;1376:3;1372:39;1368:50;1361:57;;;1135:289;;;;:::o;1429:220::-;1578:2;1567:9;1560:21;1541:4;1598:45;1639:2;1628:9;1624:18;1616:6;1598:45;:::i;1654:180::-;1713:6;1766:2;1754:9;1745:7;1741:23;1737:32;1734:52;;;1782:1;1779;1772:12;1734:52;-1:-1:-1;1805:23:92;;1654:180;-1:-1:-1;1654:180:92:o;1839:247::-;1898:6;1951:2;1939:9;1930:7;1926:23;1922:32;1919:52;;;1967:1;1964;1957:12;1919:52;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;2091:452::-;2177:6;2185;2193;2201;2254:3;2242:9;2233:7;2229:23;2225:33;2222:53;;;2271:1;2268;2261:12;2222:53;2307:9;2294:23;2284:33;;2364:2;2353:9;2349:18;2336:32;2326:42;;2415:2;2404:9;2400:18;2387:32;2377:42;;2469:2;2458:9;2454:18;2441:32;2482:31;2507:5;2482:31;:::i;:::-;2091:452;;;;-1:-1:-1;2091:452:92;;-1:-1:-1;;2091:452:92:o;2548:127::-;2609:10;2604:3;2600:20;2597:1;2590:31;2640:4;2637:1;2630:15;2664:4;2661:1;2654:15;2680:253;2752:2;2746:9;2794:4;2782:17;;-1:-1:-1;;;;;2814:34:92;;2850:22;;;2811:62;2808:88;;;2876:18;;:::i;:::-;2912:2;2905:22;2680:253;:::o;2938:275::-;3009:2;3003:9;3074:2;3055:13;;-1:-1:-1;;3051:27:92;3039:40;;-1:-1:-1;;;;;3094:34:92;;3130:22;;;3091:62;3088:88;;;3156:18;;:::i;:::-;3192:2;3185:22;2938:275;;-1:-1:-1;2938:275:92:o;3218:183::-;3278:4;-1:-1:-1;;;;;3303:6:92;3300:30;3297:56;;;3333:18;;:::i;:::-;-1:-1:-1;3378:1:92;3374:14;3390:4;3370:25;;3218:183::o;3406:668::-;3460:5;3513:3;3506:4;3498:6;3494:17;3490:27;3480:55;;3531:1;3528;3521:12;3480:55;3567:6;3554:20;3593:4;3617:60;3633:43;3673:2;3633:43;:::i;:::-;3617:60;:::i;:::-;3699:3;3723:2;3718:3;3711:15;3751:4;3746:3;3742:14;3735:21;;3808:4;3802:2;3799:1;3795:10;3787:6;3783:23;3779:34;3765:48;;3836:3;3828:6;3825:15;3822:35;;;3853:1;3850;3843:12;3822:35;3889:4;3881:6;3877:17;3903:142;3919:6;3914:3;3911:15;3903:142;;;3985:17;;3973:30;;4023:12;;;;3936;;3903:142;;;-1:-1:-1;4063:5:92;3406:668;-1:-1:-1;;;;;;3406:668:92:o;4079:187::-;4128:4;-1:-1:-1;;;;;4153:6:92;4150:30;4147:56;;;4183:18;;:::i;:::-;-1:-1:-1;4249:2:92;4228:15;-1:-1:-1;;4224:29:92;4255:4;4220:40;;4079:187::o;4271:464::-;4314:5;4367:3;4360:4;4352:6;4348:17;4344:27;4334:55;;4385:1;4382;4375:12;4334:55;4421:6;4408:20;4452:49;4468:32;4497:2;4468:32;:::i;4452:49::-;4526:2;4517:7;4510:19;4572:3;4565:4;4560:2;4552:6;4548:15;4544:26;4541:35;4538:55;;;4589:1;4586;4579:12;4538:55;4654:2;4647:4;4639:6;4635:17;4628:4;4619:7;4615:18;4602:55;4702:1;4677:16;;;4695:4;4673:27;4666:38;;;;4681:7;4271:464;-1:-1:-1;;;4271:464:92:o;4740:1551::-;4895:6;4903;4911;4919;4927;4980:3;4968:9;4959:7;4955:23;4951:33;4948:53;;;4997:1;4994;4987:12;4948:53;5033:9;5020:23;5010:33;;5062:2;5115;5104:9;5100:18;5087:32;-1:-1:-1;;;;;5179:2:92;5171:6;5168:14;5165:34;;;5195:1;5192;5185:12;5165:34;5233:6;5222:9;5218:22;5208:32;;5278:7;5271:4;5267:2;5263:13;5259:27;5249:55;;5300:1;5297;5290:12;5249:55;5336:2;5323:16;5359:60;5375:43;5415:2;5375:43;:::i;5359:60::-;5453:15;;;5535:1;5531:10;;;;5523:19;;5519:28;;;5484:12;;;;5559:19;;;5556:39;;;5591:1;5588;5581:12;5556:39;5615:11;;;;5635:217;5651:6;5646:3;5643:15;5635:217;;;5731:3;5718:17;5748:31;5773:5;5748:31;:::i;:::-;5792:18;;5668:12;;;;5830;;;;5635:217;;;5871:5;-1:-1:-1;;;5929:2:92;5914:18;;5901:32;;-1:-1:-1;5945:16:92;;;5942:36;;;5974:1;5971;5964:12;5942:36;5997:63;6052:7;6041:8;6030:9;6026:24;5997:63;:::i;:::-;5987:73;;6113:2;6102:9;6098:18;6085:32;6069:48;;6142:2;6132:8;6129:16;6126:36;;;6158:1;6155;6148:12;6126:36;;;6181:52;6225:7;6214:8;6203:9;6199:24;6181:52;:::i;:::-;4740:1551;;;;-1:-1:-1;4740:1551:92;;6280:3;6265:19;6252:33;;4740:1551;-1:-1:-1;;;4740:1551:92:o;6296:439::-;6349:3;6387:5;6381:12;6414:6;6409:3;6402:19;6440:4;6469;6464:3;6460:14;6453:21;;6508:4;6501:5;6497:16;6531:1;6541:169;6555:6;6552:1;6549:13;6541:169;;;6616:13;;6604:26;;6650:12;;;;6685:15;;;;6577:1;6570:9;6541:169;;;-1:-1:-1;6726:3:92;;6296:439;-1:-1:-1;;;;;6296:439:92:o;6740:261::-;6919:2;6908:9;6901:21;6882:4;6939:56;6991:2;6980:9;6976:18;6968:6;6939:56;:::i;7006:248::-;7074:6;7082;7135:2;7123:9;7114:7;7110:23;7106:32;7103:52;;;7151:1;7148;7141:12;7103:52;-1:-1:-1;;7174:23:92;;;7244:2;7229:18;;;7216:32;;-1:-1:-1;7006:248:92:o;7259:315::-;7327:6;7335;7388:2;7376:9;7367:7;7363:23;7359:32;7356:52;;;7404:1;7401;7394:12;7356:52;7440:9;7427:23;7417:33;;7500:2;7489:9;7485:18;7472:32;7513:31;7538:5;7513:31;:::i;:::-;7563:5;7553:15;;;7259:315;;;;;:::o;7832:456::-;7909:6;7917;7925;7978:2;7966:9;7957:7;7953:23;7949:32;7946:52;;;7994:1;7991;7984:12;7946:52;8033:9;8020:23;8052:31;8077:5;8052:31;:::i;:::-;8102:5;-1:-1:-1;8154:2:92;8139:18;;8126:32;;-1:-1:-1;8210:2:92;8195:18;;8182:32;8223:33;8182:32;8223:33;:::i;:::-;8275:7;8265:17;;;7832:456;;;;;:::o;8293:367::-;8356:8;8366:6;8420:3;8413:4;8405:6;8401:17;8397:27;8387:55;;8438:1;8435;8428:12;8387:55;-1:-1:-1;8461:20:92;;-1:-1:-1;;;;;8493:30:92;;8490:50;;;8536:1;8533;8526:12;8490:50;8573:4;8565:6;8561:17;8549:29;;8633:3;8626:4;8616:6;8613:1;8609:14;8601:6;8597:27;8593:38;8590:47;8587:67;;;8650:1;8647;8640:12;8587:67;8293:367;;;;;:::o;8665:347::-;8716:8;8726:6;8780:3;8773:4;8765:6;8761:17;8757:27;8747:55;;8798:1;8795;8788:12;8747:55;-1:-1:-1;8821:20:92;;-1:-1:-1;;;;;8853:30:92;;8850:50;;;8896:1;8893;8886:12;8850:50;8933:4;8925:6;8921:17;8909:29;;8985:3;8978:4;8969:6;8961;8957:19;8953:30;8950:39;8947:59;;;9002:1;8999;8992:12;9017:1338;9177:6;9185;9193;9201;9209;9217;9225;9233;9286:3;9274:9;9265:7;9261:23;9257:33;9254:53;;;9303:1;9300;9293:12;9254:53;9342:9;9329:23;9361:31;9386:5;9361:31;:::i;:::-;9411:5;-1:-1:-1;9468:2:92;9453:18;;9440:32;9481:33;9440:32;9481:33;:::i;:::-;9533:7;-1:-1:-1;9591:2:92;9576:18;;9563:32;-1:-1:-1;;;;;9644:14:92;;;9641:34;;;9671:1;9668;9661:12;9641:34;9710:70;9772:7;9763:6;9752:9;9748:22;9710:70;:::i;:::-;9799:8;;-1:-1:-1;9684:96:92;-1:-1:-1;9887:2:92;9872:18;;9859:32;;-1:-1:-1;9903:16:92;;;9900:36;;;9932:1;9929;9922:12;9900:36;9971:72;10035:7;10024:8;10013:9;10009:24;9971:72;:::i;:::-;10062:8;;-1:-1:-1;9945:98:92;-1:-1:-1;10150:3:92;10135:19;;10122:33;;-1:-1:-1;10167:16:92;;;10164:36;;;10196:1;10193;10186:12;10164:36;;10235:60;10287:7;10276:8;10265:9;10261:24;10235:60;:::i;:::-;9017:1338;;;;-1:-1:-1;9017:1338:92;;-1:-1:-1;9017:1338:92;;;;;;10314:8;-1:-1:-1;;;9017:1338:92:o;10568:773::-;10690:6;10698;10706;10714;10767:2;10755:9;10746:7;10742:23;10738:32;10735:52;;;10783:1;10780;10773:12;10735:52;10823:9;10810:23;-1:-1:-1;;;;;10893:2:92;10885:6;10882:14;10879:34;;;10909:1;10906;10899:12;10879:34;10948:70;11010:7;11001:6;10990:9;10986:22;10948:70;:::i;:::-;11037:8;;-1:-1:-1;10922:96:92;-1:-1:-1;11125:2:92;11110:18;;11097:32;;-1:-1:-1;11141:16:92;;;11138:36;;;11170:1;11167;11160:12;11138:36;;11209:72;11273:7;11262:8;11251:9;11247:24;11209:72;:::i;:::-;10568:773;;;;-1:-1:-1;11300:8:92;-1:-1:-1;;;;10568:773:92:o;11346:416::-;11439:6;11447;11500:2;11488:9;11479:7;11475:23;11471:32;11468:52;;;11516:1;11513;11506:12;11468:52;11552:9;11539:23;11529:33;;11613:2;11602:9;11598:18;11585:32;-1:-1:-1;;;;;11632:6:92;11629:30;11626:50;;;11672:1;11669;11662:12;11626:50;11695:61;11748:7;11739:6;11728:9;11724:22;11695:61;:::i;:::-;11685:71;;;11346:416;;;;;:::o;11767:118::-;11853:5;11846:13;11839:21;11832:5;11829:32;11819:60;;11875:1;11872;11865:12;11890:382;11955:6;11963;12016:2;12004:9;11995:7;11991:23;11987:32;11984:52;;;12032:1;12029;12022:12;11984:52;12071:9;12058:23;12090:31;12115:5;12090:31;:::i;:::-;12140:5;-1:-1:-1;12197:2:92;12182:18;;12169:32;12210:30;12169:32;12210:30;:::i;12277:348::-;12361:6;12414:2;12402:9;12393:7;12389:23;12385:32;12382:52;;;12430:1;12427;12420:12;12382:52;12470:9;12457:23;-1:-1:-1;;;;;12495:6:92;12492:30;12489:50;;;12535:1;12532;12525:12;12489:50;12558:61;12611:7;12602:6;12591:9;12587:22;12558:61;:::i;12630:475::-;12678:3;12709;12763;12756:5;12752:15;12790:5;12813:1;12823:256;12837:4;12834:1;12831:11;12823:256;;;12906:5;12900:4;12896:16;12891:3;12884:29;12934:38;12967:4;12958:6;12952:13;12934:38;:::i;:::-;12995:4;13057:12;;;;12926:46;;-1:-1:-1;13022:15:92;;;;;12857:1;12850:9;12823:256;;;-1:-1:-1;13095:4:92;;12630:475;-1:-1:-1;;;;;12630:475:92:o;13110:465::-;13163:3;13201:5;13195:12;13228:6;13223:3;13216:19;13254:4;13283;13278:3;13274:14;13267:21;;13322:4;13315:5;13311:16;13345:1;13355:195;13369:6;13366:1;13363:13;13355:195;;;13434:13;;-1:-1:-1;;;;;13430:39:92;13418:52;;13490:12;;;;13525:15;;;;13466:1;13384:9;13355:195;;13580:598;13632:3;13663;13695:5;13689:12;13722:6;13717:3;13710:19;13748:4;13777;13772:3;13768:14;13761:21;;13835:4;13825:6;13822:1;13818:14;13811:5;13807:26;13803:37;13874:4;13867:5;13863:16;13897:1;13907:245;13921:6;13918:1;13915:13;13907:245;;;14008:2;14004:7;13996:5;13990:4;13986:16;13982:30;13977:3;13970:43;14034:38;14067:4;14058:6;14052:13;14034:38;:::i;:::-;14130:12;;;;14026:46;-1:-1:-1;14095:15:92;;;;13943:1;13936:9;13907:245;;;-1:-1:-1;14168:4:92;;13580:598;-1:-1:-1;;;;;;;13580:598:92:o;14638:1263::-;14690:3;14734:5;14728:12;14761:4;14756:3;14749:17;14787:53;14834:4;14829:3;14825:14;14811:12;14787:53;:::i;:::-;14775:65;;14888:4;14881:5;14877:16;14871:23;14936:3;14930:4;14926:14;14919:4;14914:3;14910:14;14903:38;14964:39;14998:4;14982:14;14964:39;:::i;:::-;14950:53;;;15051:4;15044:5;15040:16;15034:23;15101:3;15093:6;15089:16;15082:4;15077:3;15073:14;15066:40;15129:52;15174:6;15158:14;15129:52;:::i;:::-;15115:66;;;15229:4;15222:5;15218:16;15212:23;15279:3;15271:6;15267:16;15260:4;15255:3;15251:14;15244:40;15307:51;15351:6;15335:14;15307:51;:::i;:::-;15293:65;;;15406:4;15399:5;15395:16;15389:23;15456:3;15448:6;15444:16;15437:4;15432:3;15428:14;15421:40;15484:52;15529:6;15513:14;15484:52;:::i;:::-;15470:66;;;15584:4;15577:5;15573:16;15567:23;15634:3;15626:6;15622:16;15615:4;15610:3;15606:14;15599:40;15662:51;15706:6;15690:14;15662:51;:::i;:::-;15648:65;;;15761:4;15754:5;15750:16;15744:23;15811:3;15803:6;15799:16;15792:4;15787:3;15783:14;15776:40;15832:63;15888:6;15872:14;15832:63;:::i;:::-;15825:70;14638:1263;-1:-1:-1;;;;;14638:1263:92:o;15906:849::-;16104:4;16133:2;16173;16162:9;16158:18;16203:2;16192:9;16185:21;16226:6;16261;16255:13;16292:6;16284;16277:22;16330:2;16319:9;16315:18;16308:25;;16392:2;16382:6;16379:1;16375:14;16364:9;16360:30;16356:39;16342:53;;16430:2;16422:6;16418:15;16451:1;16461:265;16475:6;16472:1;16469:13;16461:265;;;16568:2;16564:7;16552:9;16544:6;16540:22;16536:36;16531:3;16524:49;16596:50;16639:6;16630;16624:13;16596:50;:::i;:::-;16586:60;-1:-1:-1;16704:12:92;;;;16669:15;;;;16497:1;16490:9;16461:265;;;-1:-1:-1;16743:6:92;;15906:849;-1:-1:-1;;;;;;;15906:849:92:o;16760:266::-;16945:2;16934:9;16927:21;16908:4;16965:55;17016:2;17005:9;17001:18;16993:6;16965:55;:::i;17031:388::-;17099:6;17107;17160:2;17148:9;17139:7;17135:23;17131:32;17128:52;;;17176:1;17173;17166:12;17128:52;17215:9;17202:23;17234:31;17259:5;17234:31;:::i;:::-;17284:5;-1:-1:-1;17341:2:92;17326:18;;17313:32;17354:33;17313:32;17354:33;:::i;17424:261::-;17603:2;17592:9;17585:21;17566:4;17623:56;17675:2;17664:9;17660:18;17652:6;17623:56;:::i;17690:823::-;17796:6;17804;17812;17820;17828;17836;17889:3;17877:9;17868:7;17864:23;17860:33;17857:53;;;17906:1;17903;17896:12;17857:53;17945:9;17932:23;17964:31;17989:5;17964:31;:::i;:::-;18014:5;-1:-1:-1;18071:2:92;18056:18;;18043:32;18084:33;18043:32;18084:33;:::i;:::-;18136:7;-1:-1:-1;18190:2:92;18175:18;;18162:32;;-1:-1:-1;18241:2:92;18226:18;;18213:32;;-1:-1:-1;18296:3:92;18281:19;;18268:33;-1:-1:-1;;;;;18313:30:92;;18310:50;;;18356:1;18353;18346:12;18310:50;18395:58;18445:7;18436:6;18425:9;18421:22;18395:58;:::i;:::-;17690:823;;;;-1:-1:-1;17690:823:92;;-1:-1:-1;17690:823:92;;18472:8;;17690:823;-1:-1:-1;;;17690:823:92:o;18518:380::-;18597:1;18593:12;;;;18640;;;18661:61;;18715:4;18707:6;18703:17;18693:27;;18661:61;18768:2;18760:6;18757:14;18737:18;18734:38;18731:161;;18814:10;18809:3;18805:20;18802:1;18795:31;18849:4;18846:1;18839:15;18877:4;18874:1;18867:15;19182:245;19249:6;19302:2;19290:9;19281:7;19277:23;19273:32;19270:52;;;19318:1;19315;19308:12;19270:52;19350:9;19344:16;19369:28;19391:5;19369:28;:::i;19432:474::-;19694:30;19689:3;19682:43;19664:3;19754:6;19748:13;19809:6;19802:4;19794:6;19790:17;19785:2;19780:3;19776:12;19770:46;19880:1;19839:16;;19857:2;19835:25;19869:13;;;-1:-1:-1;19835:25:92;19432:474;-1:-1:-1;19432:474:92:o;19911:127::-;19972:10;19967:3;19963:20;19960:1;19953:31;20003:4;20000:1;19993:15;20027:4;20024:1;20017:15;20043:127;20104:10;20099:3;20095:20;20092:1;20085:31;20135:4;20132:1;20125:15;20159:4;20156:1;20149:15;20175:168;20248:9;;;20279;;20296:15;;;20290:22;;20276:37;20266:71;;20317:18;;:::i;20348:127::-;20409:10;20404:3;20400:20;20397:1;20390:31;20440:4;20437:1;20430:15;20464:4;20461:1;20454:15;20480:120;20520:1;20546;20536:35;;20551:18;;:::i;:::-;-1:-1:-1;20585:9:92;;20480:120::o;20605:628::-;20910:2;20899:9;20892:21;20873:4;20936:56;20988:2;20977:9;20973:18;20965:6;20936:56;:::i;:::-;21040:9;21032:6;21028:22;21023:2;21012:9;21008:18;21001:50;21074:44;21111:6;21103;21074:44;:::i;:::-;21060:58;;21166:9;21158:6;21154:22;21149:2;21138:9;21134:18;21127:50;21194:33;21220:6;21212;21194:33;:::i;:::-;21186:41;20605:628;-1:-1:-1;;;;;;20605:628:92:o;21238:184::-;21308:6;21361:2;21349:9;21340:7;21336:23;21332:32;21329:52;;;21377:1;21374;21367:12;21329:52;-1:-1:-1;21400:16:92;;21238:184;-1:-1:-1;21238:184:92:o;21688:294::-;21865:2;21861:15;;;;-1:-1:-1;;;;;;21857:53:92;21845:66;;21936:2;21927:12;;21920:28;21973:2;21964:12;;21688:294::o;22502:128::-;22569:9;;;22590:11;;;22587:37;;;22604:18;;:::i;22999:135::-;23038:3;23059:17;;;23056:43;;23079:18;;:::i;:::-;-1:-1:-1;23126:1:92;23115:13;;22999:135::o;23139:125::-;23204:9;;;23225:10;;;23222:36;;;23238:18;;:::i;23649:251::-;23719:6;23772:2;23760:9;23751:7;23747:23;23743:32;23740:52;;;23788:1;23785;23778:12;23740:52;23820:9;23814:16;23839:31;23864:5;23839:31;:::i;24475:332::-;24682:2;24671:9;24664:21;24645:4;24702:56;24754:2;24743:9;24739:18;24731:6;24702:56;:::i;:::-;24694:64;;24794:6;24789:2;24778:9;24774:18;24767:34;24475:332;;;;;:::o;25605:561::-;-1:-1:-1;;;;;25902:15:92;;;25884:34;;25954:15;;25949:2;25934:18;;25927:43;26001:2;25986:18;;25979:34;;;26044:2;26029:18;;26022:34;;;25864:3;26087;26072:19;;26065:32;;;25827:4;;26114:46;;26140:19;;26132:6;26114:46;:::i;:::-;26106:54;25605:561;-1:-1:-1;;;;;;;25605:561:92:o;26171:112::-;26203:1;26229;26219:35;;26234:18;;:::i;:::-;-1:-1:-1;26268:9:92;;26171:112::o;26934:331::-;27039:9;27050;27092:8;27080:10;27077:24;27074:44;;;27114:1;27111;27104:12;27074:44;27143:6;27133:8;27130:20;27127:40;;;27163:1;27160;27153:12;27127:40;-1:-1:-1;;27189:23:92;;;27234:25;;;;;-1:-1:-1;26934:331:92:o;27270:665::-;27335:5;27388:3;27381:4;27373:6;27369:17;27365:27;27355:55;;27406:1;27403;27396:12;27355:55;27435:6;27429:13;27461:4;27485:60;27501:43;27541:2;27501:43;:::i;27485:60::-;27567:3;27591:2;27586:3;27579:15;27619:4;27614:3;27610:14;27603:21;;27676:4;27670:2;27667:1;27663:10;27655:6;27651:23;27647:34;27633:48;;27704:3;27696:6;27693:15;27690:35;;;27721:1;27718;27711:12;27690:35;27757:4;27749:6;27745:17;27771:135;27787:6;27782:3;27779:15;27771:135;;;27853:10;;27841:23;;27884:12;;;;27804;;27771:135;;27940:461;27994:5;28047:3;28040:4;28032:6;28028:17;28024:27;28014:55;;28065:1;28062;28055:12;28014:55;28094:6;28088:13;28125:49;28141:32;28170:2;28141:32;:::i;28125:49::-;28199:2;28190:7;28183:19;28245:3;28238:4;28233:2;28225:6;28221:15;28217:26;28214:35;28211:55;;;28262:1;28259;28252:12;28211:55;28320:2;28313:4;28305:6;28301:17;28294:4;28285:7;28281:18;28275:48;28368:1;28343:16;;;28361:4;28339:27;28332:38;;;;28347:7;27940:461;-1:-1:-1;;;27940:461:92:o;28406:1645::-;28503:6;28534:2;28577;28565:9;28556:7;28552:23;28548:32;28545:52;;;28593:1;28590;28583:12;28545:52;28626:9;28620:16;-1:-1:-1;;;;;28696:2:92;28688:6;28685:14;28682:34;;;28712:1;28709;28702:12;28682:34;28735:22;;;;28791:4;28773:16;;;28769:27;28766:47;;;28809:1;28806;28799:12;28766:47;28835:22;;:::i;:::-;28888:2;28882:9;28916:2;28906:8;28903:16;28900:36;;;28932:1;28929;28922:12;28900:36;28955:17;;29003:4;28995:13;;28991:27;-1:-1:-1;28981:55:92;;29032:1;29029;29022:12;28981:55;29061:2;29055:9;29084:60;29100:43;29140:2;29100:43;:::i;29084:60::-;29178:15;;;29260:1;29256:10;;;;29248:19;;29244:28;;;29209:12;;;;29284:19;;;29281:39;;;29316:1;29313;29306:12;29281:39;29340:11;;;;29360:216;29376:6;29371:3;29368:15;29360:216;;;29451:3;29445:10;29468:33;29493:7;29468:33;:::i;:::-;29514:20;;29393:12;;;;29554;;;;29360:216;;;29585:20;;-1:-1:-1;;;29636:11:92;;;29630:18;29660:16;;;29657:36;;;29689:1;29686;29679:12;29657:36;29725:67;29784:7;29773:8;29769:2;29765:17;29725:67;:::i;:::-;29720:2;29713:5;29709:14;29702:91;;29832:2;29828;29824:11;29818:18;29802:34;;29861:2;29851:8;29848:16;29845:36;;;29877:1;29874;29867:12;29845:36;29913:56;29961:7;29950:8;29946:2;29942:17;29913:56;:::i;:::-;29908:2;29901:5;29897:14;29890:80;30016:2;30012;30008:11;30002:18;29997:2;29990:5;29986:14;29979:42;30040:5;30030:15;;;;;;28406:1645;;;;:::o;30056:306::-;30132:6;30140;30193:2;30181:9;30172:7;30168:23;30164:32;30161:52;;;30209:1;30206;30199:12;30161:52;30241:9;30235:16;30260:28;30282:5;30260:28;:::i;:::-;30352:2;30337:18;;;;30331:25;30307:5;;30331:25;;-1:-1:-1;;;30056:306:92:o;30367:136::-;30406:3;30434:5;30424:39;;30443:18;;:::i;:::-;-1:-1:-1;;;30479:18:92;;30367:136::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "Will()": "535e9891",
        "allMembersOf(uint256)": "eef2e757",
        "asRootValuation(uint256,uint256)": "7f33d800",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "burn(uint256,uint256)": "b390c0ab",
        "burnPath(uint256,uint256)": "f039a733",
        "calculateUserTargetedPreferenceAmount(uint256,uint256,uint256,address)": "0ffd3910",
        "control(uint256)": "7d11e682",
        "createEndpointForOwner(uint256,address)": "45bbbf84",
        "executionAddress()": "78adc790",
        "getAllNodesForRoot(address,address)": "f87cc6b3",
        "getChangePrevalence(uint256,uint256)": "1a61eda6",
        "getChildrenOf(uint256)": "99f45689",
        "getFidPath(uint256)": "f6355a56",
        "getMembraneOf(uint256)": "7e44bffe",
        "getNodeData(uint256,address)": "a6bfbc20",
        "getNodes(uint256[])": "a5541c84",
        "getParentOf(uint256)": "13e75206",
        "getUserNodeSignals(address,uint256)": "150d503d",
        "inParentDenomination(uint256,uint256)": "1e9b388d",
        "inflationOf(uint256)": "765063e5",
        "initSelfControl()": "68dc2747",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isMember(address,uint256)": "85752d03",
        "localizeEndpoint(address,uint256,address)": "28ca8e26",
        "membershipEnforce(address,uint256)": "62593f60",
        "membershipID(uint256)": "f77914c3",
        "mint(uint256,uint256)": "1b2ef1ca",
        "mintInflation(uint256)": "67c394fb",
        "mintMembership(uint256)": "0d78d0c1",
        "mintPath(uint256,uint256)": "791ddaf9",
        "name()": "06fdde03",
        "options(bytes32,uint256)": "20f94427",
        "redistribute(uint256)": "a0ce552d",
        "redistributePath(uint256)": "a0762253",
        "resignal(uint256,address)": "1fae703b",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "sendSignal(uint256,uint256[])": "5b4a26ed",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setControl(address)": "5ac8260c",
        "spawnNode(uint256)": "bfad25e5",
        "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": "114b6e49",
        "spawnRootNode(address)": "af1b55b0",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "taxPolicyPreference(address,uint256)": "1f017841",
        "toAddress(uint256)": "e0051aa9",
        "toID(address)": "0f336348",
        "totalSupply(uint256)": "bd85b039",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Execution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Membrane\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountBalanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadLen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseOrNonFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BurnE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSkip\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Endpoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteSign\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembershipOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MembraneNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintE20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"No\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoControl\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSoup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTimeDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodeNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Noise\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoiseNotVoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNodeMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResignalMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignalOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetIsRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unautorised\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unqualified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnregisteredFungible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsoundMembership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isControled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"CreatedEndpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldInflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInflationRate\",\"type\":\"uint256\"}],\"name\":\"InflationRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inflationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"}],\"name\":\"InflationSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"MembershipMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMembrane\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMembrane\",\"type\":\"uint256\"}],\"name\":\"MembraneChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membraneId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"}],\"name\":\"MembraneSignal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddressOrNode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootNodeId\",\"type\":\"uint256\"}],\"name\":\"NewRootNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"Resignaled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"AgencyLocus\",\"type\":\"address\"}],\"name\":\"SelfControlAtAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SharesGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strenght\",\"type\":\"uint256\"}],\"name\":\"UserNodeSignal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Will\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"allMembersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"asRootValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topVal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserTargetedPreferenceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"control\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createEndpointForOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"endpointAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userIfAny\",\"type\":\"address\"}],\"name\":\"getAllNodesForRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal_\",\"type\":\"uint256\"}],\"name\":\"getChangePrevalence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getChildrenOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getFidPath\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getMembraneOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNodeData\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState\",\"name\":\"nodeData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nodeIds\",\"type\":\"uint256[]\"}],\"name\":\"getNodes\",\"outputs\":[{\"components\":[{\"internalType\":\"string[12]\",\"name\":\"basicInfo\",\"type\":\"string[12]\"},{\"internalType\":\"string\",\"name\":\"membraneMeta\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"membersOfNode\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"childrenNodes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"movementEndpoints\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"rootPath\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NodeState[]\",\"name\":\"nodes\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"getParentOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"node_\",\"type\":\"uint256\"}],\"name\":\"getUserNodeSignals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"inParentDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inParentVal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"inflationOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initSelfControl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whoabout_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"whereabout_\",\"type\":\"uint256\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"endpoint_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endpointParent_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"localizeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipEnforce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"s\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"membershipID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"mintInflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"mintMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mintPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"NodeXUserXValue\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valueAtTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId_\",\"type\":\"uint256\"}],\"name\":\"redistributePath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originator\",\"type\":\"address\"}],\"name\":\"resignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetNode_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"signals\",\"type\":\"uint256[]\"}],\"name\":\"sendSignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"}],\"name\":\"spawnNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances_\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"meta_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"inflationRate_\",\"type\":\"uint256\"}],\"name\":\"spawnNodeWithMembrane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fungible20_\",\"type\":\"address\"}],\"name\":\"spawnRootNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"taxRate_\",\"type\":\"uint256\"}],\"name\":\"taxPolicyPreference\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"toAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"toID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"parseb\",\"errors\":{\"AccountBalanceOverflow()\":[{\"details\":\"The recipient's balance has overflowed.\"}],\"ArrayLengthsMismatch()\":[{\"details\":\"The lengths of the input arrays are not the same.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"NotOwnerNorApproved()\":[{\"details\":\"Only the token owner or an approved account can manage the tokens.\"}],\"TransferToNonERC1155ReceiverImplementer()\":[{\"details\":\"Cannot safely transfer to a contract that does not implement the ERC1155Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Cannot mint or transfer to the zero address.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Emitted when `amounts` of token `ids` are transferred from `from` to `to` by `operator`.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `amount` of token `id` is transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the Uniform Resource Identifier (URI) for token `id` is updated to `value`. This event is not used in the base contract. You may need to emit this event depending on your URI logic. See: https://eips.ethereum.org/EIPS/eip-1155#metadata\"}},\"kind\":\"dev\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"params\":{\"amount\":\"how many of to price\",\"target_\":\"target node and its context token\"}},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of `id` owned by `owner`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length.\"},\"burn(uint256,uint256)\":{\"params\":{\"amount_\":\"amount to burn\",\"fid_\":\"id of node\"}},\"createEndpointForOwner(uint256,address)\":{\"params\":{\"nodeId_\":\"id of context node\",\"owner\":\"address of agent that will control the endpoint\"},\"returns\":{\"endpointAddress\":\"address of created endpoint\"}},\"getFidPath(uint256)\":{\"params\":{\"fid_\":\"target fid to trace path to from root\"},\"returns\":{\"fids\":\"lineage in chronologic order\"}},\"inParentDenomination(uint256,uint256)\":{\"params\":{\"amt_\":\"how many of to price\",\"id_\":\"target node by id and its context token\"},\"returns\":{\"inParentVal\":\"max price of inputs at current minted inflation\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns whether `operator` is approved to manage the tokens of `owner`.\"},\"isMember(address,uint256)\":{\"params\":{\"whereabout_\":\"you abouting about where exactly\",\"whoabout_\":\"you care about them dont you\"}},\"mint(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"fid_\":\"id to target for mint of kind\"}},\"mintInflation(uint256)\":{\"params\":{\"node\":\"identifier of node context\"}},\"mintMembership(uint256)\":{\"params\":{\"fid_\":\"node for which to mint membership\"}},\"mintPath(uint256,uint256)\":{\"params\":{\"amount_\":\"amout to be minted\",\"target_\":\"id to target for mint of kind\"}},\"redistribute(uint256)\":{\"params\":{\"nodeId_\":\"redistribution target group\"}},\"redistributePath(uint256)\":{\"params\":{\"nodeId_\":\"target node to actualize path to and mint inflation for\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event.\"},\"setControl(address)\":{\"params\":{\"newController\":\"address of new controller\"}},\"spawnNode(uint256)\":{\"params\":{\"fid_\":\"context node id\"}},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"params\":{\"balances_\":\"array of required balances for each token\",\"fid_\":\"context (parent) node\",\"inflationRate_\":\"rate for new Node token shares in gwei per second\",\"meta_\":\"metadata string (e.g. IPFS hash) for membrane details\",\"tokens_\":\"array of token addresses for membrane conditions\"}},\"spawnRootNode(address)\":{\"params\":{\"fungible20_\":\"address of ERC20 token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas.\"},\"taxPolicyPreference(address,uint256)\":{\"params\":{\"taxRate_\":\"share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"WillWe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asRootValuation(uint256,uint256)\":{\"notice\":\"calculates and returns the value of a number of context tokens in terms of its root reserve\"},\"burn(uint256,uint256)\":{\"notice\":\"burn the amount of targeted node id\"},\"createEndpointForOwner(uint256,address)\":{\"notice\":\"creates an external endpoint for an agent in node contextnode owner can be external\"},\"getFidPath(uint256)\":{\"notice\":\"retrieves token path id array from root to target id\"},\"inParentDenomination(uint256,uint256)\":{\"notice\":\"calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller\"},\"isMember(address,uint256)\":{\"notice\":\"checks if provided address who is member in where id\"},\"mint(uint256,uint256)\":{\"notice\":\"mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve\"},\"mintInflation(uint256)\":{\"notice\":\"mints the inflation of a specific context tokenincreases ratio of reserve to context denomination\"},\"mintMembership(uint256)\":{\"notice\":\"mints membership to calling address if it satisfies membership conditions\"},\"mintPath(uint256,uint256)\":{\"notice\":\"mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root\"},\"options(bytes32,uint256)\":{\"notice\":\"stores a users option for change and node state [ wanted value, lastExpressedAt, signalStrength ]\"},\"redistribute(uint256)\":{\"notice\":\"redistributes eligible acummulated inflationary flows\"},\"redistributePath(uint256)\":{\"notice\":\"redistributes eligible amounts to all nodes on target path and mints inflation for target\"},\"setControl(address)\":{\"notice\":\"sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function\"},\"spawnNode(uint256)\":{\"notice\":\"creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context\"},\"spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)\":{\"notice\":\"spawns Node with an enforceable membership mechanism and creates new membrane\"},\"spawnRootNode(address)\":{\"notice\":\"spawns core Node for a tokenacts as port for token valuenests all token specific contexts\"}},\"notice\":\"Experimental. Do not use.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WillWe.sol\":\"WillWe\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":@solady/=lib/solady/src/\",\":Will/=lib/Will/\",\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/\",\":src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/\",\":src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/\",\":src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/\",\":will/contracts/=lib/will/packages/contracts/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solady/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581\",\"dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9\"]},\"src/Fun.sol\":{\"keccak256\":\"0x3912250e9b39e2c52b04aec88c9da96ba2581a8da488e1eb9ade7a89d6946e90\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e2c60c66ec8cd518523313972c740cb82251dceacef87c0abc80db2d241daa33\",\"dweb:/ipfs/Qme7xCKHR3MiFpyDXhQ9JWQUpzqPoEmtroHxiuCEW8GB4R\"]},\"src/Fungido.sol\":{\"keccak256\":\"0x18141dae436cc1eb92ffe3a52d070eb4e2af312a780f5541f2804cdc3c2e71ca\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://07dca33d51555b549e4ac7d52f3d4944ba1ac1d5c8850c09e8fd1283628c9d9d\",\"dweb:/ipfs/Qmdt1DfGusbKy9JLY1uMsDpKxe6DX6Xc5kTfjYKCBAarEe\"]},\"src/WillWe.sol\":{\"keccak256\":\"0x4ffbbab6ebebfe70a69db2788787560e04bfdba627e8eb856836fa0652e82fa8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c66c6da17b1361c43e324f68f600c0e729be382d34b1eb1ced2feabfdc9362fd\",\"dweb:/ipfs/Qmea4cMc52ysc8kK6mDYgwcfPTJBCD9wyFdjWYworh6Pcf\"]},\"src/components/PureUtils.sol\":{\"keccak256\":\"0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee\",\"dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC\"]},\"src/interfaces/IExecution.sol\":{\"keccak256\":\"0xfe2c9fa95ff38cf82758c9f8bce0db94478f0d00e0f6a1b8599bda164f00cb3a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c4ce5a56f33097660ffba232cf953cfe435ce754194a37c1c2b43c55cb2705b\",\"dweb:/ipfs/QmXeYC4yykwmSByF2Ge4biYFqe3jB7G31JptYjE3rRuPmb\"]},\"src/interfaces/IMembrane.sol\":{\"keccak256\":\"0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25\",\"dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "Execution",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "Membrane",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccountBalanceOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ArrayLengthsMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BadLen"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BaseOrNonFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BurnE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotSkip"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Disabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EOA"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Endpoint"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExecutionOnly"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "IncompleteSign"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientAmt"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembershipOp"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MembraneNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MintE20TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "No"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoControl"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoSoup"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoTimeDelta"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeAlreadyExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NodeNotFound"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Noise"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NoiseNotVoice"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotNodeMember"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotOwnerNorApproved"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Overreach"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ResignalMismatch"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "RootExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SignalOverflow"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TargetIsRoot"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToNonERC1155ReceiverImplementer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferToZeroAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unautorised"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Unqualified"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnregisteredFungible"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsoundMembership"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsupportedTransfer"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "isControled"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Burned",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CreatedEndpoint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "oldInflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newInflationRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationRateChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strength",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InflationSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "userAddress",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MemberRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "who",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "MembershipMinted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "previousMembrane",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newMembrane",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "membraneId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strength",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MembraneSignal",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fromAddressOrNode",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Minted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "creator",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "rootNodeId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "NewRootNode",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "origin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Resignaled",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "AgencyLocus",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SelfControlAtAddress",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SharesGenerated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "strenght",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UserNodeSignal",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "Will",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allMembersOf",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "asRootValuation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "result",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "owners",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "balances",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "topVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnPath"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "childId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "parentId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateUserTargetedPreferenceAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "control",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createEndpointForOwner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "endpointAddress",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "executionAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "userIfAny",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllNodesForRoot",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signal_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChangePrevalence",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getChildrenOf",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFidPath",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "fids",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMembraneOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodeData",
                    "outputs": [
                        {
                            "internalType": "struct NodeState",
                            "name": "nodeData",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "nodeIds",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getNodes",
                    "outputs": [
                        {
                            "internalType": "struct NodeState[]",
                            "name": "nodes",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "string[12]",
                                    "name": "basicInfo",
                                    "type": "string[12]"
                                },
                                {
                                    "internalType": "string",
                                    "name": "membraneMeta",
                                    "type": "string"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "membersOfNode",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "childrenNodes",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "movementEndpoints",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "string[]",
                                    "name": "rootPath",
                                    "type": "string[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "signals",
                                    "type": "uint256[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getParentOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "node_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUserNodeSignals",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amt_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inParentDenomination",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inParentVal",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "inflationOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initSelfControl",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "whoabout_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "whereabout_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isMember",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "endpoint_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "endpointParent_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "owner_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "localizeEndpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "membershipEnforce",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "s",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "membershipID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "node",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintInflation",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintMembership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "target_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mintPath"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "NodeXUserXValue",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "options",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "valueAtTime",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistribute",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redistributePath",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "distributedAmt",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "originator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "resignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "targetNode_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "signals",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "sendSignal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isApproved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newController",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setControl"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "fid_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address[]",
                            "name": "tokens_",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balances_",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "string",
                            "name": "meta_",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inflationRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnNodeWithMembrane",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "newID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "fungible20_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "spawnRootNode",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "fID",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "rootToken_",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "taxRate_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "taxPolicyPreference"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "x",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "x",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "toID",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "nodeId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "id_",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "params": {
                            "amount": "how many of to price",
                            "target_": "target node and its context token"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "Returns the amount of `id` owned by `owner`."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length."
                    },
                    "burn(uint256,uint256)": {
                        "params": {
                            "amount_": "amount to burn",
                            "fid_": "id of node"
                        }
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "params": {
                            "nodeId_": "id of context node",
                            "owner": "address of agent that will control the endpoint"
                        },
                        "returns": {
                            "endpointAddress": "address of created endpoint"
                        }
                    },
                    "getFidPath(uint256)": {
                        "params": {
                            "fid_": "target fid to trace path to from root"
                        },
                        "returns": {
                            "fids": "lineage in chronologic order"
                        }
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "params": {
                            "amt_": "how many of to price",
                            "id_": "target node by id and its context token"
                        },
                        "returns": {
                            "inParentVal": "max price of inputs at current minted inflation"
                        }
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "Returns whether `operator` is approved to manage the tokens of `owner`."
                    },
                    "isMember(address,uint256)": {
                        "params": {
                            "whereabout_": "you abouting about where exactly",
                            "whoabout_": "you care about them dont you"
                        }
                    },
                    "mint(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "fid_": "id to target for mint of kind"
                        }
                    },
                    "mintInflation(uint256)": {
                        "params": {
                            "node": "identifier of node context"
                        }
                    },
                    "mintMembership(uint256)": {
                        "params": {
                            "fid_": "node for which to mint membership"
                        }
                    },
                    "mintPath(uint256,uint256)": {
                        "params": {
                            "amount_": "amout to be minted",
                            "target_": "id to target for mint of kind"
                        }
                    },
                    "redistribute(uint256)": {
                        "params": {
                            "nodeId_": "redistribution target group"
                        }
                    },
                    "redistributePath(uint256)": {
                        "params": {
                            "nodeId_": "target node to actualize path to and mint inflation for"
                        }
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {TransferSingle} event."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event."
                    },
                    "setControl(address)": {
                        "params": {
                            "newController": "address of new controller"
                        }
                    },
                    "spawnNode(uint256)": {
                        "params": {
                            "fid_": "context node id"
                        }
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "params": {
                            "balances_": "array of required balances for each token",
                            "fid_": "context (parent) node",
                            "inflationRate_": "rate for new Node token shares in gwei per second",
                            "meta_": "metadata string (e.g. IPFS hash) for membrane details",
                            "tokens_": "array of token addresses for membrane conditions"
                        }
                    },
                    "spawnRootNode(address)": {
                        "params": {
                            "fungible20_": "address of ERC20 token"
                        }
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas."
                    },
                    "taxPolicyPreference(address,uint256)": {
                        "params": {
                            "taxRate_": "share retained at full exit withdrawal expressed as basis points (default 0.01% or 100)"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "asRootValuation(uint256,uint256)": {
                        "notice": "calculates and returns the value of a number of context tokens in terms of its root reserve"
                    },
                    "burn(uint256,uint256)": {
                        "notice": "burn the amount of targeted node id"
                    },
                    "createEndpointForOwner(uint256,address)": {
                        "notice": "creates an external endpoint for an agent in node contextnode owner can be external"
                    },
                    "getFidPath(uint256)": {
                        "notice": "retrieves token path id array from root to target id"
                    },
                    "inParentDenomination(uint256,uint256)": {
                        "notice": "calculates the value of a number of context tokens in terms of reserve tokenreserve token is allways smaller"
                    },
                    "isMember(address,uint256)": {
                        "notice": "checks if provided address who is member in where id"
                    },
                    "mint(uint256,uint256)": {
                        "notice": "mints amount of specified fidrequires an equal deposit of parent fid or root to be added to target reserve"
                    },
                    "mintInflation(uint256)": {
                        "notice": "mints the inflation of a specific context tokenincreases ratio of reserve to context denomination"
                    },
                    "mintMembership(uint256)": {
                        "notice": "mints membership to calling address if it satisfies membership conditions"
                    },
                    "mintPath(uint256,uint256)": {
                        "notice": "mints the specified amount of target fidtransfers the amount specified of erc 20 and mints all fids on path to target root"
                    },
                    "options(bytes32,uint256)": {
                        "notice": "stores a users option for change and node state [ wanted value, lastExpressedAt, signalStrength ]"
                    },
                    "redistribute(uint256)": {
                        "notice": "redistributes eligible acummulated inflationary flows"
                    },
                    "redistributePath(uint256)": {
                        "notice": "redistributes eligible amounts to all nodes on target path and mints inflation for target"
                    },
                    "setControl(address)": {
                        "notice": "sets address in control of fiscal policycan chenge token specific tax rates, should be an endpointtwo step function"
                    },
                    "spawnNode(uint256)": {
                        "notice": "creates new context nested under a parent node idagent spawning a new underlink needs to be a member in containing context"
                    },
                    "spawnNodeWithMembrane(uint256,address[],uint256[],string,uint256)": {
                        "notice": "spawns Node with an enforceable membership mechanism and creates new membrane"
                    },
                    "spawnRootNode(address)": {
                        "notice": "spawns core Node for a tokenacts as port for token valuenests all token specific contexts"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@contracts-bedrock/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@solady-v0.0.245/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "@solady/=lib/solady/src/",
                "Will/=lib/Will/",
                "automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
                "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
                "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/",
                "openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin-contracts/token/=lib/openzeppelin-contracts/contracts/token/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "optimism/=lib/optimism/",
                "prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/",
                "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
                "solady-v0.0.245/=lib/Will/packages/contracts/lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
                "solady/=lib/solady/src/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/",
                "solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/",
                "src/L2/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/L2/interfaces/",
                "src/libraries/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/libraries/",
                "src/universal/interfaces/=lib/will/packages/contracts/lib/optimism/packages/contracts-bedrock/src/universal/interfaces/",
                "src/vendor/interfaces/=lib/optimism/packages/contracts-bedrock/src/vendor/interfaces/",
                "will/contracts/=lib/will/packages/contracts/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/WillWe.sol": "WillWe"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
                "urls": [
                    "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
                    "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
                "urls": [
                    "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
                    "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
                "urls": [
                    "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
                    "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
                "urls": [
                    "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
                    "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
                ],
                "license": "MIT"
            },
            "lib/solady/src/tokens/ERC1155.sol": {
                "keccak256": "0x14221842c23c8e3c054e453dbf851201fd6977edd798560acdd3e524e528718a",
                "urls": [
                    "bzz-raw://2396beb76c9696830f38d95c6be7bf8635196f6b7f85a61ba3b72ccd49b10581",
                    "dweb:/ipfs/QmQepjosZqZjKtPTMQQ3UsE7ee4VgSuaAwDW6Uv3ih9gd9"
                ],
                "license": "MIT"
            },
            "src/Fun.sol": {
                "keccak256": "0x3912250e9b39e2c52b04aec88c9da96ba2581a8da488e1eb9ade7a89d6946e90",
                "urls": [
                    "bzz-raw://e2c60c66ec8cd518523313972c740cb82251dceacef87c0abc80db2d241daa33",
                    "dweb:/ipfs/Qme7xCKHR3MiFpyDXhQ9JWQUpzqPoEmtroHxiuCEW8GB4R"
                ],
                "license": "UNLICENSED"
            },
            "src/Fungido.sol": {
                "keccak256": "0x18141dae436cc1eb92ffe3a52d070eb4e2af312a780f5541f2804cdc3c2e71ca",
                "urls": [
                    "bzz-raw://07dca33d51555b549e4ac7d52f3d4944ba1ac1d5c8850c09e8fd1283628c9d9d",
                    "dweb:/ipfs/Qmdt1DfGusbKy9JLY1uMsDpKxe6DX6Xc5kTfjYKCBAarEe"
                ],
                "license": "UNLICENSED"
            },
            "src/WillWe.sol": {
                "keccak256": "0x4ffbbab6ebebfe70a69db2788787560e04bfdba627e8eb856836fa0652e82fa8",
                "urls": [
                    "bzz-raw://c66c6da17b1361c43e324f68f600c0e729be382d34b1eb1ced2feabfdc9362fd",
                    "dweb:/ipfs/Qmea4cMc52ysc8kK6mDYgwcfPTJBCD9wyFdjWYworh6Pcf"
                ],
                "license": "UNLICENSED"
            },
            "src/components/PureUtils.sol": {
                "keccak256": "0x054ded82c3d3c8fa653f429eff21af7e039931b2556bd047f148d23b8489fba7",
                "urls": [
                    "bzz-raw://51cd09c99d79c1f3fe83b0a94fa72aba2193706380f2dc8f5f45b2fe3677a2ee",
                    "dweb:/ipfs/QmadDFGbtn1RXccUow4ugFju1BnVGrP1Y8SnCVdSnTnerC"
                ],
                "license": "MIT"
            },
            "src/interfaces/IExecution.sol": {
                "keccak256": "0xfe2c9fa95ff38cf82758c9f8bce0db94478f0d00e0f6a1b8599bda164f00cb3a",
                "urls": [
                    "bzz-raw://3c4ce5a56f33097660ffba232cf953cfe435ce754194a37c1c2b43c55cb2705b",
                    "dweb:/ipfs/QmXeYC4yykwmSByF2Ge4biYFqe3jB7G31JptYjE3rRuPmb"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IMembrane.sol": {
                "keccak256": "0xdd7ef8442d2c9b5b243bb2be1b8d078a6969660e06024140cb265324b277d8fc",
                "urls": [
                    "bzz-raw://2608143074fe724853b985813efd6d2514c9e279b14148ef5ac318560c90fc25",
                    "dweb:/ipfs/Qmbur3BLm5DPdfXVewmsbFWmUPpgiSUjcssq5Me9S3A25N"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 53962,
                "contract": "src/WillWe.sol:WillWe",
                "label": "entityCount",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
            },
            {
                "astId": 53964,
                "contract": "src/WillWe.sol:WillWe",
                "label": "executionAddress",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 53966,
                "contract": "src/WillWe.sol:WillWe",
                "label": "Will",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 53969,
                "contract": "src/WillWe.sol:WillWe",
                "label": "M",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(IMembrane)59268"
            },
            {
                "astId": 53974,
                "contract": "src/WillWe.sol:WillWe",
                "label": "totalSupplyOf",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 53980,
                "contract": "src/WillWe.sol:WillWe",
                "label": "childrenOf",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 53985,
                "contract": "src/WillWe.sol:WillWe",
                "label": "parentOf",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_uint256)"
            },
            {
                "astId": 53992,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inflSec",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 53999,
                "contract": "src/WillWe.sol:WillWe",
                "label": "inUseMembraneId",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
            },
            {
                "astId": 54005,
                "contract": "src/WillWe.sol:WillWe",
                "label": "members",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
            },
            {
                "astId": 54012,
                "contract": "src/WillWe.sol:WillWe",
                "label": "options",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)3_storage)"
            },
            {
                "astId": 54017,
                "contract": "src/WillWe.sol:WillWe",
                "label": "taxRate",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 54023,
                "contract": "src/WillWe.sol:WillWe",
                "label": "userNodeSignals",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)"
            },
            {
                "astId": 54027,
                "contract": "src/WillWe.sol:WillWe",
                "label": "control",
                "offset": 0,
                "slot": "13",
                "type": "t_array(t_address)2_storage"
            },
            {
                "astId": 54029,
                "contract": "src/WillWe.sol:WillWe",
                "label": "impersonatingAddress",
                "offset": 0,
                "slot": "15",
                "type": "t_address"
            },
            {
                "astId": 54031,
                "contract": "src/WillWe.sol:WillWe",
                "label": "name",
                "offset": 0,
                "slot": "16",
                "type": "t_string_storage"
            },
            {
                "astId": 54033,
                "contract": "src/WillWe.sol:WillWe",
                "label": "symbol",
                "offset": 0,
                "slot": "17",
                "type": "t_string_storage"
            },
            {
                "astId": 54035,
                "contract": "src/WillWe.sol:WillWe",
                "label": "useBefore",
                "offset": 0,
                "slot": "18",
                "type": "t_bool"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
                "encoding": "inplace",
                "label": "address[2]",
                "numberOfBytes": "64",
                "base": "t_address"
            },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_array(t_uint256)2_storage": {
                "encoding": "inplace",
                "label": "uint256[2]",
                "numberOfBytes": "64",
                "base": "t_uint256"
            },
            "t_array(t_uint256)3_storage": {
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96",
                "base": "t_uint256"
            },
            "t_array(t_uint256)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32",
                "base": "t_uint256"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(IMembrane)59268": {
                "encoding": "inplace",
                "label": "contract IMembrane",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => address[])",
                "numberOfBytes": "32",
                "value": "t_array(t_address)dyn_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[2])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)2_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[3])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)3_storage"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)dyn_storage"
            },
            "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    },
    "ast": {
        "absolutePath": "src/WillWe.sol",
        "id": 56751,
        "exportedSymbols": {
            "Fun": [
                53938
            ],
            "WillWe": [
                56750
            ]
        },
        "nodeType": "SourceUnit",
        "src": "3372:241:68",
        "nodes": [
            {
                "id": 56732,
                "nodeType": "PragmaDirective",
                "src": "3372:23:68",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".25"
                ]
            },
            {
                "id": 56734,
                "nodeType": "ImportDirective",
                "src": "3397:30:68",
                "nodes": [],
                "absolutePath": "src/Fun.sol",
                "file": "./Fun.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 56751,
                "sourceUnit": 53939,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 56733,
                            "name": "Fun",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53938,
                            "src": "3405:3:68",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 56750,
                "nodeType": "ContractDefinition",
                "src": "3505:107:68",
                "nodes": [
                    {
                        "id": 56749,
                        "nodeType": "FunctionDefinition",
                        "src": "3534:76:68",
                        "nodes": [],
                        "body": {
                            "id": 56748,
                            "nodeType": "Block",
                            "src": "3608:2:68",
                            "nodes": [],
                            "statements": []
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 56744,
                                        "name": "Execution",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 56739,
                                        "src": "3587:9:68",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 56745,
                                        "name": "Membrane",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 56741,
                                        "src": "3598:8:68",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 56746,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 56743,
                                    "name": "Fun",
                                    "nameLocations": [
                                        "3583:3:68"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53938,
                                    "src": "3583:3:68"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3583:24:68"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 56742,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 56739,
                                    "mutability": "mutable",
                                    "name": "Execution",
                                    "nameLocation": "3554:9:68",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 56749,
                                    "src": "3546:17:68",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 56738,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3546:7:68",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 56741,
                                    "mutability": "mutable",
                                    "name": "Membrane",
                                    "nameLocation": "3573:8:68",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 56749,
                                    "src": "3565:16:68",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 56740,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3565:7:68",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3545:37:68"
                        },
                        "returnParameters": {
                            "id": 56747,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3608:0:68"
                        },
                        "scope": 56750,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 56736,
                            "name": "Fun",
                            "nameLocations": [
                                "3524:3:68"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53938,
                            "src": "3524:3:68"
                        },
                        "id": 56737,
                        "nodeType": "InheritanceSpecifier",
                        "src": "3524:3:68"
                    }
                ],
                "canonicalName": "WillWe",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 56735,
                    "nodeType": "StructuredDocumentation",
                    "src": "3429:75:68",
                    "text": "@title WillWe\n @author parseb\n @notice Experimental. Do not use."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    56750,
                    53938,
                    56361,
                    57046,
                    47713
                ],
                "name": "WillWe",
                "nameLocation": "3514:6:68",
                "scope": 56751,
                "usedErrors": [
                    46886,
                    46889,
                    46892,
                    46895,
                    46898,
                    46901,
                    52339,
                    52341,
                    52343,
                    52345,
                    52347,
                    52349,
                    52351,
                    52353,
                    52355,
                    52357,
                    52359,
                    54084,
                    54086,
                    54088,
                    54090,
                    54092,
                    54094,
                    54096,
                    54098,
                    54100,
                    54102,
                    54104,
                    54106,
                    54108,
                    54110,
                    54112,
                    54114,
                    54116,
                    54118,
                    54120,
                    54122,
                    54124,
                    54126,
                    54128,
                    54130
                ],
                "usedEvents": [
                    46914,
                    46929,
                    46938,
                    46945,
                    52367,
                    52375,
                    52385,
                    52395,
                    52406,
                    54134,
                    54138,
                    54146,
                    54152,
                    54160,
                    54168,
                    54174,
                    54182,
                    54190,
                    54196
                ]
            }
        ],
        "license": "UNLICENSED"
    },
    "id": 68
}